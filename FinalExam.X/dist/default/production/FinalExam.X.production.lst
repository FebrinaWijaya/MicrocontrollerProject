

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Dec 22 16:06:54 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_ClearBuffer
   384                           	FNCALL	_main,_INTERRUPT_Initialize
   385                           	FNCALL	_main,_ModeBlink
   386                           	FNCALL	_main,_ModeBreath
   387                           	FNCALL	_main,_UART_Initialize
   388                           	FNCALL	_main,_strstr
   389                           	FNCALL	_strstr,_strchr
   390                           	FNCALL	_strstr,_strlen
   391                           	FNCALL	_strstr,_strncmp
   392                           	FNCALL	_ModeBreath,_ClearBuffer
   393                           	FNCALL	_ModeBreath,_LED_Init
   394                           	FNCALL	_ModeBlink,_ClearBuffer
   395                           	FNROOT	_main
   396                           	FNCALL	_Lo_ISR,_MyusartRead
   397                           	FNCALL	_Lo_ISR,___lwdiv
   398                           	FNCALL	_Lo_ISR,___wmul
   399                           	FNCALL	_Lo_ISR,___xxtofl
   400                           	FNCALL	_Lo_ISR,i1_strstr
   401                           	FNCALL	i1_strstr,i1_strchr
   402                           	FNCALL	i1_strstr,i1_strlen
   403                           	FNCALL	i1_strstr,i1_strncmp
   404                           	FNCALL	_MyusartRead,_UART_Write
   405                           	FNCALL	_MyusartRead,___awmod
   406                           	FNCALL	intlevel1,_Lo_ISR
   407                           	global	intlevel1
   408                           	FNROOT	intlevel1
   409                           	FNCALL	_Hi_ISR,i2_strstr
   410                           	FNCALL	i2_strstr,i2_strchr
   411                           	FNCALL	i2_strstr,i2_strlen
   412                           	FNCALL	i2_strstr,i2_strncmp
   413                           	FNCALL	intlevel2,_Hi_ISR
   414                           	global	intlevel2
   415                           	FNROOT	intlevel2
   416                           	global	_max_count
   417                           	global	_num_led
   418                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
   419                           global __pidataCOMRAM
   420                           __pidataCOMRAM:
   421  001556                     	file	"Prob1.c"
   422                           	line	92
   423                           
   424                           ;initializer for _max_count
   425                           	dw	(01h)&0ffffh
   426  001556  0001               psect	idataBANK0,class=CODE,space=0,delta=1,noexec
   427                           global __pidataBANK0
   428                           __pidataBANK0:
   429  001464                     	line	74
   430                           
   431                           ;initializer for _per_arrp
   432                           	dw	(0310h)&0ffffh
   433  001464  0310               	dw	(0293h)&0ffffh
   434  001466  0293               	dw	(0293h)&0ffffh
   435  001468  0293               	dw	(0)&0ffffh
   436  00146A  0000               	dw	(02BAh)&0ffffh
   437  00146C  02BA               	dw	(024Bh)&0ffffh
   438  00146E  024B               	dw	(024Bh)&0ffffh
   439  001470  024B               	dw	(0)&0ffffh
   440  001472  0000               	dw	(020Bh)&0ffffh
   441  001474  020B               	dw	(024Bh)&0ffffh
   442  001476  024B               	dw	(0293h)&0ffffh
   443  001478  0293               	dw	(02BAh)&0ffffh
   444  00147A  02BA               	dw	(0310h)&0ffffh
   445  00147C  0310               	dw	(0310h)&0ffffh
   446  00147E  0310               	dw	(0310h)&0ffffh
   447  001480  0310               	dw	(0)&0ffffh
   448  001482  0000               	dw	(0310h)&0ffffh
   449  001484  0310               	dw	(0293h)&0ffffh
   450  001486  0293               	dw	(0293h)&0ffffh
   451  001488  0293               	dw	(0)&0ffffh
   452  00148A  0000               	dw	(02BAh)&0ffffh
   453  00148C  02BA               	dw	(024Bh)&0ffffh
   454  00148E  024B               	dw	(024Bh)&0ffffh
   455  001490  024B               	dw	(0)&0ffffh
   456  001492  0000               	dw	(020Bh)&0ffffh
   457  001494  020B               	dw	(0293h)&0ffffh
   458  001496  0293               	dw	(0310h)&0ffffh
   459  001498  0310               	dw	(0310h)&0ffffh
   460  00149A  0310               	dw	(0293h)&0ffffh
   461  00149C  0293               	dw	(0)&0ffffh
   462  00149E  0000               	line	93
   463                           
   464                           ;initializer for _num_led
   465                           	dw	(04h)&0ffffh
   466  0014A0  0004               	global	_mode
   467                           	global	_count
   468                           	global	_lenStr
   469                           	global	_mystring
   470                           	global	_TMR1
   471                           _TMR1	set	0xFCE
   472  0000                     	global	_ADRES
   473                           _ADRES	set	0xFC3
   474  0000                     	global	_T1CONbits
   475                           _T1CONbits	set	0xFCD
   476  0000                     	global	_CCP1CONbits
   477                           _CCP1CONbits	set	0xFBD
   478  0000                     	global	_PR2
   479                           _PR2	set	0xFCB
   480  0000                     	global	_TMR2
   481                           _TMR2	set	0xFCC
   482  0000                     	global	_T2CON
   483                           _T2CON	set	0xFCA
   484  0000                     	global	_CCPR1L
   485                           _CCPR1L	set	0xFBE
   486  0000                     	global	_LATCbits
   487                           _LATCbits	set	0xF8B
   488  0000                     	global	_RCREG
   489                           _RCREG	set	0xFAE
   490  0000                     	global	_TXREG
   491                           _TXREG	set	0xFAD
   492  0000                     	global	_RCSTAbits
   493                           _RCSTAbits	set	0xFAB
   494  0000                     	global	_SPBRG
   495                           _SPBRG	set	0xFAF
   496  0000                     	global	_BAUDCONbits
   497                           _BAUDCONbits	set	0xFB8
   498  0000                     	global	_TXSTAbits
   499                           _TXSTAbits	set	0xFAC
   500  0000                     	global	_TRISCbits
   501                           _TRISCbits	set	0xF94
   502  0000                     	global	_INTCONbits
   503                           _INTCONbits	set	0xFF2
   504  0000                     	global	_RCONbits
   505                           _RCONbits	set	0xFD0
   506  0000                     	global	_LATDbits
   507                           _LATDbits	set	0xF8C
   508  0000                     	global	_PIR1bits
   509                           _PIR1bits	set	0xF9E
   510  0000                     	global	_IPR1bits
   511                           _IPR1bits	set	0xF9F
   512  0000                     	global	_PIE1bits
   513                           _PIE1bits	set	0xF9D
   514  0000                     	global	_TMR0L
   515                           _TMR0L	set	0xFD6
   516  0000                     	global	_TMR1H
   517                           _TMR1H	set	0xFCF
   518  0000                     	global	_T1CON
   519                           _T1CON	set	0xFCD
   520  0000                     	global	_TRISDbits
   521                           _TRISDbits	set	0xF95
   522  0000                     	global	_IRCF0
   523                           _IRCF0	set	0x7E9C
   524  0000                     	global	_IRCF1
   525                           _IRCF1	set	0x7E9D
   526  0000                     	global	_IRCF2
   527                           _IRCF2	set	0x7E9E
   528  0000                     	global	_TMR2ON
   529                           _TMR2ON	set	0x7E52
   530  0000                     	global	_CREN
   531                           _CREN	set	0x7D5C
   532  0000                     	global	_RCIF
   533                           _RCIF	set	0x7CF5
   534  0000                     	global	_TMR1ON
   535                           _TMR1ON	set	0x7E68
   536  0000                     	global	_TMR1IF
   537                           _TMR1IF	set	0x7CF0
   538  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   539                           global __psmallconst
   540                           __psmallconst:
   541  000600                     	db	0
   542  000600  00                 	
   543                           STR_1:
   544  000601                     	db	98	;'b'
   545  000601  62                 	db	114	;'r'
   546  000602  72                 	db	101	;'e'
   547  000603  65                 	db	97	;'a'
   548  000604  61                 	db	116	;'t'
   549  000605  74                 	db	104	;'h'
   550  000606  68                 	db	0
   551  000607  00                 	
   552                           STR_2:
   553  000608                     	db	98	;'b'
   554  000608  62                 	db	108	;'l'
   555  000609  6C                 	db	105	;'i'
   556  00060A  69                 	db	110	;'n'
   557  00060B  6E                 	db	107	;'k'
   558  00060C  6B                 	db	0
   559  00060D  00                 	
   560                           STR_3:
   561  00060E                     	db	113	;'q'
   562  00060E  71                 	db	0
   563  00060F  00                 STR_4	equ	STR_3+0
   564  0000                     ; #config settings
   565                           global __CFG_OSC$INTIO67
   566                           __CFG_OSC$INTIO67 equ 0x0
   567  0000                     global __CFG_FCMEN$OFF
   568                           __CFG_FCMEN$OFF equ 0x0
   569  0000                     global __CFG_IESO$ON
   570                           __CFG_IESO$ON equ 0x0
   571  0000                     global __CFG_PWRT$OFF
   572                           __CFG_PWRT$OFF equ 0x0
   573  0000                     global __CFG_BOREN$SBORDIS
   574                           __CFG_BOREN$SBORDIS equ 0x0
   575  0000                     global __CFG_BORV$3
   576                           __CFG_BORV$3 equ 0x0
   577  0000                     global __CFG_WDT$OFF
   578                           __CFG_WDT$OFF equ 0x0
   579  0000                     global __CFG_WDTPS$1
   580                           __CFG_WDTPS$1 equ 0x0
   581  0000                     global __CFG_CCP2MX$PORTC
   582                           __CFG_CCP2MX$PORTC equ 0x0
   583  0000                     global __CFG_PBADEN$ON
   584                           __CFG_PBADEN$ON equ 0x0
   585  0000                     global __CFG_LPT1OSC$OFF
   586                           __CFG_LPT1OSC$OFF equ 0x0
   587  0000                     global __CFG_MCLRE$ON
   588                           __CFG_MCLRE$ON equ 0x0
   589  0000                     global __CFG_STVREN$ON
   590                           __CFG_STVREN$ON equ 0x0
   591  0000                     global __CFG_LVP$OFF
   592                           __CFG_LVP$OFF equ 0x0
   593  0000                     global __CFG_XINST$OFF
   594                           __CFG_XINST$OFF equ 0x0
   595  0000                     global __CFG_CP0$OFF
   596                           __CFG_CP0$OFF equ 0x0
   597  0000                     global __CFG_CP1$OFF
   598                           __CFG_CP1$OFF equ 0x0
   599  0000                     global __CFG_CP2$OFF
   600                           __CFG_CP2$OFF equ 0x0
   601  0000                     global __CFG_CP3$OFF
   602                           __CFG_CP3$OFF equ 0x0
   603  0000                     global __CFG_CPB$OFF
   604                           __CFG_CPB$OFF equ 0x0
   605  0000                     global __CFG_CPD$OFF
   606                           __CFG_CPD$OFF equ 0x0
   607  0000                     global __CFG_WRT0$OFF
   608                           __CFG_WRT0$OFF equ 0x0
   609  0000                     global __CFG_WRT1$OFF
   610                           __CFG_WRT1$OFF equ 0x0
   611  0000                     global __CFG_WRT2$OFF
   612                           __CFG_WRT2$OFF equ 0x0
   613  0000                     global __CFG_WRT3$OFF
   614                           __CFG_WRT3$OFF equ 0x0
   615  0000                     global __CFG_WRTC$OFF
   616                           __CFG_WRTC$OFF equ 0x0
   617  0000                     global __CFG_WRTB$OFF
   618                           __CFG_WRTB$OFF equ 0x0
   619  0000                     global __CFG_WRTD$OFF
   620                           __CFG_WRTD$OFF equ 0x0
   621  0000                     global __CFG_EBTR0$OFF
   622                           __CFG_EBTR0$OFF equ 0x0
   623  0000                     global __CFG_EBTR1$OFF
   624                           __CFG_EBTR1$OFF equ 0x0
   625  0000                     global __CFG_EBTR2$OFF
   626                           __CFG_EBTR2$OFF equ 0x0
   627  0000                     global __CFG_EBTR3$OFF
   628                           __CFG_EBTR3$OFF equ 0x0
   629  0000                     global __CFG_EBTRB$OFF
   630                           __CFG_EBTRB$OFF equ 0x0
   631  0000                     	file	"C:\Users\febri\AppData\Local\Temp\s28g."
   632                           	line	#
   633                           psect	cinit,class=CODE,delta=1,reloc=2
   634                           global __pcinit
   635                           __pcinit:
   636  0011AA                     global start_initialization
   637                           start_initialization:
   638  0011AA                     
   639                           global __initialization
   640                           __initialization:
   641  0011AA                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   642                           global __pbssCOMRAM
   643                           __pbssCOMRAM:
   644  000048                     	global	_str
   645                           	global	_str
   646                           _str:
   647  000048                            ds      10
   648  000048                     	global	_mode
   649                           _mode:
   650  000052                            ds      2
   651  000052                     	global	_count
   652                           _count:
   653  000054                            ds      2
   654  000054                     	global	_lenStr
   655                           _lenStr:
   656  000056                            ds      2
   657  000056                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
   658                           global __pdataCOMRAM
   659                           __pdataCOMRAM:
   660  000058                     	file	"Prob1.c"
   661                           	line	92
   662                           	global	_max_count
   663                           _max_count:
   664  000058                            ds      2
   665  000058                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
   666                           global __pbssBANK0
   667                           __pbssBANK0:
   668  0000D1                     	global	_mystring
   669                           _mystring:
   670  0000D1                            ds      10
   671  0000D1                     psect	dataBANK0,class=BANK0,space=1,noexec,lowdata
   672                           global __pdataBANK0
   673                           __pdataBANK0:
   674  000080                     	file	"Prob1.c"
   675                           	line	74
   676                           	global	_per_arrp
   677                           	global	_per_arrp
   678                           _per_arrp:
   679  000080                            ds      60
   680  000080                     psect	dataBANK0
   681                           	file	"Prob1.c"
   682                           	line	93
   683                           	global	_num_led
   684                           _num_led:
   685  0000BC                            ds      2
   686  0000BC                     	file	"C:\Users\febri\AppData\Local\Temp\s28g."
   687                           	line	#
   688                           psect	cinit
   689                           ; Initialize objects allocated to BANK0 (62 bytes)
   690                           	global __pidataBANK0
   691                           	; load TBLPTR registers with __pidataBANK0
   692                           	movlw	low (__pidataBANK0)
   693  0011AA  0E64               	movwf	tblptrl
   694  0011AC  6EF6               	movlw	high(__pidataBANK0)
   695  0011AE  0E14               	movwf	tblptrh
   696  0011B0  6EF7               	movlw	low highword(__pidataBANK0)
   697  0011B2  0E00               	movwf	tblptru
   698  0011B4  6EF8               	lfsr	0,__pdataBANK0
   699  0011B6  EE00  F080         	lfsr	1,62
   700  0011BA  EE10 F03E          	copy_data0:
   701  0011BE                     	tblrd	*+
   702  0011BE  0009               	movff	tablat, postinc0
   703  0011C0  CFF5 FFEE          	movf	postdec1,w
   704  0011C4  50E5               	movf	fsr1l,w
   705  0011C6  50E1               	bnz	copy_data0
   706  0011C8  E1FA               ; Initialize objects allocated to COMRAM (2 bytes)
   707                           	global __pidataCOMRAM
   708                           	; load TBLPTR registers with __pidataCOMRAM
   709                           	movlw	low (__pidataCOMRAM)
   710  0011CA  0E56               	movwf	tblptrl
   711  0011CC  6EF6               	movlw	high(__pidataCOMRAM)
   712  0011CE  0E15               	movwf	tblptrh
   713  0011D0  6EF7               	movlw	low highword(__pidataCOMRAM)
   714  0011D2  0E00               	movwf	tblptru
   715  0011D4  6EF8               	tblrd*+ ;fetch initializer
   716  0011D6  0009               	movff	tablat, __pdataCOMRAM+0		
   717  0011D8  CFF5 F058          	tblrd*+ ;fetch initializer
   718  0011DC  0009               	movff	tablat, __pdataCOMRAM+1		
   719  0011DE  CFF5 F059          	line	#
   720                           ; Clear objects allocated to BANK0 (10 bytes)
   721                           	global __pbssBANK0
   722                           lfsr	0,__pbssBANK0
   723  0011E2  EE00  F0D1         movlw	10
   724  0011E6  0E0A               clear_0:
   725  0011E8                     clrf	postinc0,c
   726  0011E8  6AEE               decf	wreg
   727  0011EA  06E8               bnz	clear_0
   728  0011EC  E1FD               ; Clear objects allocated to COMRAM (16 bytes)
   729                           	global __pbssCOMRAM
   730                           lfsr	0,__pbssCOMRAM
   731  0011EE  EE00  F048         movlw	16
   732  0011F2  0E10               clear_1:
   733  0011F4                     clrf	postinc0,c
   734  0011F4  6AEE               decf	wreg
   735  0011F6  06E8               bnz	clear_1
   736  0011F8  E1FD               psect cinit,class=CODE,delta=1
   737                           global end_of_initialization,__end_of__initialization
   738                           
   739                           ;End of C runtime variable initialization code
   740                           
   741                           end_of_initialization:
   742  0011FA                     __end_of__initialization:
   743  0011FA                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   744  0011FA  905A               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   745  0011FC  925A               	GLOBAL	__Lsmallconst
   746                           	movlw	low highword(__Lsmallconst)
   747  0011FE  0E00               	movwf	tblptru
   748  001200  6EF8               	movlw	high(__Lsmallconst)
   749  001202  0E06               	movwf	tblptrh
   750  001204  6EF7               movlb 0
   751  001206  0100               goto _main	;jump to C main() function
   752  001208  EF13  F008         psect	cstackBANK0,class=BANK0,space=1,noexec
   753                           global __pcstackBANK0
   754                           __pcstackBANK0:
   755  0000BE                     ??_ClearBuffer:	; 1 bytes @ 0x0
   756  0000BE                     ??_LED_Init:	; 1 bytes @ 0x0
   757  0000BE                     ??_INTERRUPT_Initialize:	; 1 bytes @ 0x0
   758  0000BE                     ??_UART_Initialize:	; 1 bytes @ 0x0
   759  0000BE                     	global	?_strlen
   760                           ?_strlen:	; 2 bytes @ 0x0
   761  0000BE                     	global	?_strncmp
   762                           ?_strncmp:	; 2 bytes @ 0x0
   763  0000BE                     	global	?_strchr
   764                           ?_strchr:	; 2 bytes @ 0x0
   765  0000BE                     	global	ClearBuffer@i
   766                           ClearBuffer@i:	; 2 bytes @ 0x0
   767  0000BE                     	global	strchr@s
   768                           strchr@s:	; 2 bytes @ 0x0
   769  0000BE                     	global	strlen@s
   770                           strlen@s:	; 2 bytes @ 0x0
   771  0000BE                     	global	strncmp@_l
   772                           strncmp@_l:	; 2 bytes @ 0x0
   773  0000BE                     	ds   2
   774  0000BE                     ??_strlen:	; 1 bytes @ 0x2
   775  0000C0                     ??_ModeBreath:	; 1 bytes @ 0x2
   776  0000C0                     ??_ModeBlink:	; 1 bytes @ 0x2
   777  0000C0                     	global	strchr@c
   778                           strchr@c:	; 2 bytes @ 0x2
   779  0000C0                     	global	strncmp@_r
   780                           strncmp@_r:	; 2 bytes @ 0x2
   781  0000C0                     	ds   2
   782  0000C0                     ??_strchr:	; 1 bytes @ 0x4
   783  0000C2                     	global	strlen@a
   784                           strlen@a:	; 2 bytes @ 0x4
   785  0000C2                     	global	strncmp@n
   786                           strncmp@n:	; 2 bytes @ 0x4
   787  0000C2                     	ds   2
   788  0000C2                     ??_strncmp:	; 1 bytes @ 0x6
   789  0000C4                     	ds   3
   790  0000C4                     	global	strncmp@l
   791                           strncmp@l:	; 2 bytes @ 0x9
   792  0000C7                     	ds   2
   793  0000C7                     	global	strncmp@r
   794                           strncmp@r:	; 2 bytes @ 0xB
   795  0000C9                     	ds   2
   796  0000C9                     	global	?_strstr
   797                           ?_strstr:	; 2 bytes @ 0xD
   798  0000CB                     	global	strstr@h
   799                           strstr@h:	; 2 bytes @ 0xD
   800  0000CB                     	ds   2
   801  0000CB                     	global	strstr@n
   802                           strstr@n:	; 2 bytes @ 0xF
   803  0000CD                     	ds   2
   804  0000CD                     ??_strstr:	; 1 bytes @ 0x11
   805  0000CF                     	global	strstr@nl
   806                           strstr@nl:	; 2 bytes @ 0x11
   807  0000CF                     	ds   2
   808  0000CF                     ??_main:	; 1 bytes @ 0x13
   809  0000D1                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   810                           global __pcstackCOMRAM
   811                           __pcstackCOMRAM:
   812  000001                     ?_ClearBuffer:	; 1 bytes @ 0x0
   813  000001                     ?_LED_Init:	; 1 bytes @ 0x0
   814  000001                     ?_INTERRUPT_Initialize:	; 1 bytes @ 0x0
   815  000001                     ?_UART_Initialize:	; 1 bytes @ 0x0
   816  000001                     ?_ModeBreath:	; 1 bytes @ 0x0
   817  000001                     ?_ModeBlink:	; 1 bytes @ 0x0
   818  000001                     ?_main:	; 1 bytes @ 0x0
   819  000001                     ?_Hi_ISR:	; 1 bytes @ 0x0
   820  000001                     ?_UART_Write:	; 1 bytes @ 0x0
   821  000001                     ?_MyusartRead:	; 1 bytes @ 0x0
   822  000001                     ?_Lo_ISR:	; 1 bytes @ 0x0
   823  000001                     	global	?i2_strchr
   824                           ?i2_strchr:	; 2 bytes @ 0x0
   825  000001                     	global	?i2_strlen
   826                           ?i2_strlen:	; 2 bytes @ 0x0
   827  000001                     	global	?i2_strncmp
   828                           ?i2_strncmp:	; 2 bytes @ 0x0
   829  000001                     	global	i2strchr@s
   830                           i2strchr@s:	; 2 bytes @ 0x0
   831  000001                     	global	i2strlen@s
   832                           i2strlen@s:	; 2 bytes @ 0x0
   833  000001                     	global	i2strncmp@_l
   834                           i2strncmp@_l:	; 2 bytes @ 0x0
   835  000001                     	ds   2
   836  000001                     ??i2_strlen:	; 1 bytes @ 0x2
   837  000003                     	global	i2strchr@c
   838                           i2strchr@c:	; 2 bytes @ 0x2
   839  000003                     	global	i2strncmp@_r
   840                           i2strncmp@_r:	; 2 bytes @ 0x2
   841  000003                     	ds   2
   842  000003                     ??i2_strchr:	; 1 bytes @ 0x4
   843  000005                     	global	i2strlen@a
   844                           i2strlen@a:	; 2 bytes @ 0x4
   845  000005                     	global	i2strncmp@n
   846                           i2strncmp@n:	; 2 bytes @ 0x4
   847  000005                     	ds   2
   848  000005                     ??i2_strncmp:	; 1 bytes @ 0x6
   849  000007                     	ds   3
   850  000007                     	global	i2strncmp@l
   851                           i2strncmp@l:	; 2 bytes @ 0x9
   852  00000A                     	ds   2
   853  00000A                     	global	i2strncmp@r
   854                           i2strncmp@r:	; 2 bytes @ 0xB
   855  00000C                     	ds   2
   856  00000C                     	global	?i2_strstr
   857                           ?i2_strstr:	; 2 bytes @ 0xD
   858  00000E                     	global	i2strstr@h
   859                           i2strstr@h:	; 2 bytes @ 0xD
   860  00000E                     	ds   2
   861  00000E                     	global	i2strstr@n
   862                           i2strstr@n:	; 2 bytes @ 0xF
   863  000010                     	ds   2
   864  000010                     ??i2_strstr:	; 1 bytes @ 0x11
   865  000012                     	global	i2strstr@nl
   866                           i2strstr@nl:	; 2 bytes @ 0x11
   867  000012                     	ds   2
   868  000012                     ??_Hi_ISR:	; 1 bytes @ 0x13
   869  000014                     	ds   7
   870  000014                     ??_UART_Write:	; 1 bytes @ 0x1A
   871  00001B                     	global	?___wmul
   872                           ?___wmul:	; 2 bytes @ 0x1A
   873  00001B                     	global	?___awmod
   874                           ?___awmod:	; 2 bytes @ 0x1A
   875  00001B                     	global	?i1_strchr
   876                           ?i1_strchr:	; 2 bytes @ 0x1A
   877  00001B                     	global	?i1_strlen
   878                           ?i1_strlen:	; 2 bytes @ 0x1A
   879  00001B                     	global	?i1_strncmp
   880                           ?i1_strncmp:	; 2 bytes @ 0x1A
   881  00001B                     	global	UART_Write@data
   882                           UART_Write@data:	; 1 bytes @ 0x1A
   883  00001B                     	global	___wmul@multiplier
   884                           ___wmul@multiplier:	; 2 bytes @ 0x1A
   885  00001B                     	global	___awmod@dividend
   886                           ___awmod@dividend:	; 2 bytes @ 0x1A
   887  00001B                     	global	i1strchr@s
   888                           i1strchr@s:	; 2 bytes @ 0x1A
   889  00001B                     	global	i1strlen@s
   890                           i1strlen@s:	; 2 bytes @ 0x1A
   891  00001B                     	global	i1strncmp@_l
   892                           i1strncmp@_l:	; 2 bytes @ 0x1A
   893  00001B                     	ds   2
   894  00001B                     ??i1_strlen:	; 1 bytes @ 0x1C
   895  00001D                     	global	___wmul@multiplicand
   896                           ___wmul@multiplicand:	; 2 bytes @ 0x1C
   897  00001D                     	global	___awmod@divisor
   898                           ___awmod@divisor:	; 2 bytes @ 0x1C
   899  00001D                     	global	i1strchr@c
   900                           i1strchr@c:	; 2 bytes @ 0x1C
   901  00001D                     	global	i1strncmp@_r
   902                           i1strncmp@_r:	; 2 bytes @ 0x1C
   903  00001D                     	ds   2
   904  00001D                     ??___wmul:	; 1 bytes @ 0x1E
   905  00001F                     ??___awmod:	; 1 bytes @ 0x1E
   906  00001F                     ??i1_strchr:	; 1 bytes @ 0x1E
   907  00001F                     	global	___awmod@counter
   908                           ___awmod@counter:	; 1 bytes @ 0x1E
   909  00001F                     	global	___wmul@product
   910                           ___wmul@product:	; 2 bytes @ 0x1E
   911  00001F                     	global	i1strlen@a
   912                           i1strlen@a:	; 2 bytes @ 0x1E
   913  00001F                     	global	i1strncmp@n
   914                           i1strncmp@n:	; 2 bytes @ 0x1E
   915  00001F                     	ds   1
   916  00001F                     	global	___awmod@sign
   917                           ___awmod@sign:	; 1 bytes @ 0x1F
   918  000020                     	ds   1
   919  000020                     ??_MyusartRead:	; 1 bytes @ 0x20
   920  000021                     ??i1_strncmp:	; 1 bytes @ 0x20
   921  000021                     	global	?___lwdiv
   922                           ?___lwdiv:	; 2 bytes @ 0x20
   923  000021                     	global	___lwdiv@dividend
   924                           ___lwdiv@dividend:	; 2 bytes @ 0x20
   925  000021                     	ds   2
   926  000021                     	global	___lwdiv@divisor
   927                           ___lwdiv@divisor:	; 2 bytes @ 0x22
   928  000023                     	ds   1
   929  000023                     	global	i1strncmp@l
   930                           i1strncmp@l:	; 2 bytes @ 0x23
   931  000024                     	ds   1
   932  000024                     ??___lwdiv:	; 1 bytes @ 0x24
   933  000025                     	global	___lwdiv@quotient
   934                           ___lwdiv@quotient:	; 2 bytes @ 0x24
   935  000025                     	ds   1
   936  000025                     	global	i1strncmp@r
   937                           i1strncmp@r:	; 2 bytes @ 0x25
   938  000026                     	ds   1
   939  000026                     	global	___lwdiv@counter
   940                           ___lwdiv@counter:	; 1 bytes @ 0x26
   941  000027                     	ds   1
   942  000027                     	global	?i1_strstr
   943                           ?i1_strstr:	; 2 bytes @ 0x27
   944  000028                     	global	?___xxtofl
   945                           ?___xxtofl:	; 4 bytes @ 0x27
   946  000028                     	global	i1strstr@h
   947                           i1strstr@h:	; 2 bytes @ 0x27
   948  000028                     	global	___xxtofl@val
   949                           ___xxtofl@val:	; 4 bytes @ 0x27
   950  000028                     	ds   2
   951  000028                     	global	i1strstr@n
   952                           i1strstr@n:	; 2 bytes @ 0x29
   953  00002A                     	ds   2
   954  00002A                     ??___xxtofl:	; 1 bytes @ 0x2B
   955  00002C                     ??i1_strstr:	; 1 bytes @ 0x2B
   956  00002C                     	global	i1strstr@nl
   957                           i1strstr@nl:	; 2 bytes @ 0x2B
   958  00002C                     	ds   4
   959  00002C                     	global	___xxtofl@sign
   960                           ___xxtofl@sign:	; 1 bytes @ 0x2F
   961  000030                     	ds   1
   962  000030                     	global	___xxtofl@exp
   963                           ___xxtofl@exp:	; 1 bytes @ 0x30
   964  000031                     	ds   1
   965  000031                     	global	___xxtofl@arg
   966                           ___xxtofl@arg:	; 4 bytes @ 0x31
   967  000032                     	ds   4
   968  000032                     ??_Lo_ISR:	; 1 bytes @ 0x35
   969  000036                     	ds   12
   970  000036                     	global	Lo_ISR@temp
   971                           Lo_ISR@temp:	; 4 bytes @ 0x41
   972  000042                     	ds   4
   973  000042                     	global	_Lo_ISR$1501
   974                           _Lo_ISR$1501:	; 2 bytes @ 0x45
   975  000046                     	ds   2
   976  000046                     ;!
   977                           ;!Data Sizes:
   978                           ;!    Strings     15
   979                           ;!    Constant    0
   980                           ;!    Data        64
   981                           ;!    BSS         26
   982                           ;!    Persistent  0
   983                           ;!    Stack       0
   984                           ;!
   985                           ;!Auto Spaces:
   986                           ;!    Space          Size  Autos    Used
   987                           ;!    COMRAM          126     71      89
   988                           ;!    BANK0           128     19      91
   989                           ;!    BANK1           256      0       0
   990                           ;!    BANK2           256      0       0
   991                           ;!    BANK3           256      0       0
   992                           ;!    BANK4           256      0       0
   993                           ;!    BANK5           256      0       0
   994                           
   995                           ;!
   996                           ;!Pointer List with Targets:
   997                           ;!
   998                           ;!    strncmp@_r	PTR const unsigned char  size(2) Largest target is 7
   999                           ;!		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 
  1000                           ;!
  1001                           ;!    strncmp@r	PTR const unsigned char  size(2) Largest target is 7
  1002                           ;!		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 
  1003                           ;!
  1004                           ;!    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
  1005                           ;!		 -> NULL(NULL[0]), mystring(BANK0[10]), 
  1006                           ;!
  1007                           ;!    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
  1008                           ;!		 -> NULL(NULL[0]), mystring(BANK0[10]), 
  1009                           ;!
  1010                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 7
  1011                           ;!		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 
  1012                           ;!
  1013                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 7
  1014                           ;!		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 
  1015                           ;!
  1016                           ;!    strchr@s	PTR const unsigned char  size(2) Largest target is 10
  1017                           ;!		 -> NULL(NULL[0]), mystring(BANK0[10]), 
  1018                           ;!
  1019                           ;!    sp__strchr	PTR unsigned char  size(2) Largest target is 10
  1020                           ;!		 -> NULL(NULL[0]), mystring(BANK0[10]), 
  1021                           ;!
  1022                           ;!    strstr@h	PTR const unsigned char  size(2) Largest target is 10
  1023                           ;!		 -> NULL(NULL[0]), mystring(BANK0[10]), 
  1024                           ;!
  1025                           ;!    strstr@n	PTR const unsigned char  size(2) Largest target is 7
  1026                           ;!		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 
  1027                           ;!
  1028                           ;!    sp__strstr	PTR unsigned char  size(2) Largest target is 10
  1029                           ;!		 -> NULL(NULL[0]), mystring(BANK0[10]), 
  1030                           ;!
  1031                           
  1032                           
  1033                           ;!
  1034                           ;!Critical Paths under _main in COMRAM
  1035                           ;!
  1036                           ;!    None.
  1037                           ;!
  1038                           ;!Critical Paths under _Lo_ISR in COMRAM
  1039                           ;!
  1040                           ;!    _Lo_ISR->___xxtofl
  1041                           ;!    i1_strstr->i1_strncmp
  1042                           ;!    ___xxtofl->___lwdiv
  1043                           ;!    ___lwdiv->___wmul
  1044                           ;!    _MyusartRead->___awmod
  1045                           ;!
  1046                           ;!Critical Paths under _Hi_ISR in COMRAM
  1047                           ;!
  1048                           ;!    _Hi_ISR->i2_strstr
  1049                           ;!    i2_strstr->i2_strncmp
  1050                           ;!
  1051                           ;!Critical Paths under _main in BANK0
  1052                           ;!
  1053                           ;!    _main->_strstr
  1054                           ;!    _strstr->_strncmp
  1055                           ;!    _ModeBreath->_ClearBuffer
  1056                           ;!    _ModeBlink->_ClearBuffer
  1057                           ;!
  1058                           ;!Critical Paths under _Lo_ISR in BANK0
  1059                           ;!
  1060                           ;!    None.
  1061                           ;!
  1062                           ;!Critical Paths under _Hi_ISR in BANK0
  1063                           ;!
  1064                           ;!    None.
  1065                           ;!
  1066                           ;!Critical Paths under _main in BANK1
  1067                           ;!
  1068                           ;!    None.
  1069                           ;!
  1070                           ;!Critical Paths under _Lo_ISR in BANK1
  1071                           ;!
  1072                           ;!    None.
  1073                           ;!
  1074                           ;!Critical Paths under _Hi_ISR in BANK1
  1075                           ;!
  1076                           ;!    None.
  1077                           ;!
  1078                           ;!Critical Paths under _main in BANK2
  1079                           ;!
  1080                           ;!    None.
  1081                           ;!
  1082                           ;!Critical Paths under _Lo_ISR in BANK2
  1083                           ;!
  1084                           ;!    None.
  1085                           ;!
  1086                           ;!Critical Paths under _Hi_ISR in BANK2
  1087                           ;!
  1088                           ;!    None.
  1089                           ;!
  1090                           ;!Critical Paths under _main in BANK3
  1091                           ;!
  1092                           ;!    None.
  1093                           ;!
  1094                           ;!Critical Paths under _Lo_ISR in BANK3
  1095                           ;!
  1096                           ;!    None.
  1097                           ;!
  1098                           ;!Critical Paths under _Hi_ISR in BANK3
  1099                           ;!
  1100                           ;!    None.
  1101                           ;!
  1102                           ;!Critical Paths under _main in BANK4
  1103                           ;!
  1104                           ;!    None.
  1105                           ;!
  1106                           ;!Critical Paths under _Lo_ISR in BANK4
  1107                           ;!
  1108                           ;!    None.
  1109                           ;!
  1110                           ;!Critical Paths under _Hi_ISR in BANK4
  1111                           ;!
  1112                           ;!    None.
  1113                           ;!
  1114                           ;!Critical Paths under _main in BANK5
  1115                           ;!
  1116                           ;!    None.
  1117                           ;!
  1118                           ;!Critical Paths under _Lo_ISR in BANK5
  1119                           ;!
  1120                           ;!    None.
  1121                           ;!
  1122                           ;!Critical Paths under _Hi_ISR in BANK5
  1123                           ;!
  1124                           ;!    None.
  1125                           
  1126 ;;
  1127 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1128 ;;
  1129                           
  1130                           ;!
  1131                           ;!Call Graph Tables:
  1132                           ;!
  1133                           ;! ---------------------------------------------------------------------------------
  1134                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1135                           ;! ---------------------------------------------------------------------------------
  1136                           ;! (0) _main                                                 0     0      0    1789
  1137                           ;!                        _ClearBuffer
  1138                           ;!               _INTERRUPT_Initialize
  1139                           ;!                          _ModeBlink
  1140                           ;!                         _ModeBreath
  1141                           ;!                    _UART_Initialize
  1142                           ;!                             _strstr
  1143                           ;! ---------------------------------------------------------------------------------
  1144                           ;! (1) _strstr                                               6     2      4    1585
  1145                           ;!                                             13 BANK0      6     2      4
  1146                           ;!                             _strchr
  1147                           ;!                             _strlen
  1148                           ;!                            _strncmp
  1149                           ;! ---------------------------------------------------------------------------------
  1150                           ;! (2) _strncmp                                             13     7      6     453
  1151                           ;!                                              0 BANK0     13     7      6
  1152                           ;! ---------------------------------------------------------------------------------
  1153                           ;! (2) _strlen                                               6     4      2     166
  1154                           ;!                                              0 BANK0      6     4      2
  1155                           ;! ---------------------------------------------------------------------------------
  1156                           ;! (2) _strchr                                               5     1      4     240
  1157                           ;!                                              0 BANK0      5     1      4
  1158                           ;! ---------------------------------------------------------------------------------
  1159                           ;! (1) _UART_Initialize                                      0     0      0       0
  1160                           ;! ---------------------------------------------------------------------------------
  1161                           ;! (1) _ModeBreath                                           0     0      0      68
  1162                           ;!                        _ClearBuffer
  1163                           ;!                           _LED_Init
  1164                           ;! ---------------------------------------------------------------------------------
  1165                           ;! (2) _LED_Init                                             0     0      0       0
  1166                           ;! ---------------------------------------------------------------------------------
  1167                           ;! (1) _ModeBlink                                            0     0      0      68
  1168                           ;!                        _ClearBuffer
  1169                           ;! ---------------------------------------------------------------------------------
  1170                           ;! (2) _ClearBuffer                                          2     2      0      68
  1171                           ;!                                              0 BANK0      2     2      0
  1172                           ;! ---------------------------------------------------------------------------------
  1173                           ;! (1) _INTERRUPT_Initialize                                 0     0      0       0
  1174                           ;! ---------------------------------------------------------------------------------
  1175                           ;! Estimated maximum stack depth 2
  1176                           ;! ---------------------------------------------------------------------------------
  1177                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1178                           ;! ---------------------------------------------------------------------------------
  1179                           ;! (3) _Lo_ISR                                              18    18      0    2502
  1180                           ;!                                             53 COMRAM    18    18      0
  1181                           ;!                        _MyusartRead
  1182                           ;!                            ___lwdiv
  1183                           ;!                             ___wmul
  1184                           ;!                           ___xxtofl
  1185                           ;!                           i1_strstr
  1186                           ;! ---------------------------------------------------------------------------------
  1187                           ;! (4) i1_strstr                                             6     2      4     833
  1188                           ;!                                             39 COMRAM     6     2      4
  1189                           ;!                           i1_strchr
  1190                           ;!                           i1_strlen
  1191                           ;!                          i1_strncmp
  1192                           ;! ---------------------------------------------------------------------------------
  1193                           ;! (5) i1_strncmp                                           13     7      6     303
  1194                           ;!                                             26 COMRAM    13     7      6
  1195                           ;! ---------------------------------------------------------------------------------
  1196                           ;! (5) i1_strlen                                             6     4      2     116
  1197                           ;!                                             26 COMRAM     6     4      2
  1198                           ;! ---------------------------------------------------------------------------------
  1199                           ;! (5) i1_strchr                                             5     1      4     140
  1200                           ;!                                             26 COMRAM     5     1      4
  1201                           ;! ---------------------------------------------------------------------------------
  1202                           ;! (4) ___xxtofl                                            14    10      4     398
  1203                           ;!                                             39 COMRAM    14    10      4
  1204                           ;!                            ___lwdiv (ARG)
  1205                           ;!                             ___wmul (ARG)
  1206                           ;! ---------------------------------------------------------------------------------
  1207                           ;! (4) ___wmul                                               6     2      4     463
  1208                           ;!                                             26 COMRAM     6     2      4
  1209                           ;! ---------------------------------------------------------------------------------
  1210                           ;! (4) ___lwdiv                                              7     3      4     314
  1211                           ;!                                             32 COMRAM     7     3      4
  1212                           ;!                             ___wmul (ARG)
  1213                           ;! ---------------------------------------------------------------------------------
  1214                           ;! (4) _MyusartRead                                          0     0      0     470
  1215                           ;!                         _UART_Write
  1216                           ;!                            ___awmod
  1217                           ;! ---------------------------------------------------------------------------------
  1218                           ;! (5) ___awmod                                              6     2      4     448
  1219                           ;!                                             26 COMRAM     6     2      4
  1220                           ;! ---------------------------------------------------------------------------------
  1221                           ;! (5) _UART_Write                                           1     1      0      22
  1222                           ;!                                             26 COMRAM     1     1      0
  1223                           ;! ---------------------------------------------------------------------------------
  1224                           ;! Estimated maximum stack depth 5
  1225                           ;! ---------------------------------------------------------------------------------
  1226                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1227                           ;! ---------------------------------------------------------------------------------
  1228                           ;! (6) _Hi_ISR                                               7     7      0     833
  1229                           ;!                                             19 COMRAM     7     7      0
  1230                           ;!                           i2_strstr
  1231                           ;! ---------------------------------------------------------------------------------
  1232                           ;! (7) i2_strstr                                             6     2      4     833
  1233                           ;!                                             13 COMRAM     6     2      4
  1234                           ;!                           i2_strchr
  1235                           ;!                           i2_strlen
  1236                           ;!                          i2_strncmp
  1237                           ;! ---------------------------------------------------------------------------------
  1238                           ;! (8) i2_strncmp                                           13     7      6     303
  1239                           ;!                                              0 COMRAM    13     7      6
  1240                           ;! ---------------------------------------------------------------------------------
  1241                           ;! (8) i2_strlen                                             6     4      2     116
  1242                           ;!                                              0 COMRAM     6     4      2
  1243                           ;! ---------------------------------------------------------------------------------
  1244                           ;! (8) i2_strchr                                             5     1      4     140
  1245                           ;!                                              0 COMRAM     5     1      4
  1246                           ;! ---------------------------------------------------------------------------------
  1247                           ;! Estimated maximum stack depth 8
  1248                           ;! ---------------------------------------------------------------------------------
  1249                           ;!
  1250                           ;! Call Graph Graphs:
  1251                           ;!
  1252                           ;! _main (ROOT)
  1253                           ;!   _ClearBuffer
  1254                           ;!   _INTERRUPT_Initialize
  1255                           ;!   _ModeBlink
  1256                           ;!     _ClearBuffer
  1257                           ;!   _ModeBreath
  1258                           ;!     _ClearBuffer
  1259                           ;!     _LED_Init
  1260                           ;!   _UART_Initialize
  1261                           ;!   _strstr
  1262                           ;!     _strchr
  1263                           ;!     _strlen
  1264                           ;!     _strncmp
  1265                           ;!
  1266                           ;! _Lo_ISR (ROOT)
  1267                           ;!   _MyusartRead
  1268                           ;!     _UART_Write
  1269                           ;!     ___awmod
  1270                           ;!   ___lwdiv
  1271                           ;!     ___wmul (ARG)
  1272                           ;!   ___wmul
  1273                           ;!   ___xxtofl
  1274                           ;!     ___lwdiv (ARG)
  1275                           ;!       ___wmul (ARG)
  1276                           ;!     ___wmul (ARG)
  1277                           ;!   i1_strstr
  1278                           ;!     i1_strchr
  1279                           ;!     i1_strlen
  1280                           ;!     i1_strncmp
  1281                           ;!
  1282                           ;! _Hi_ISR (ROOT)
  1283                           ;!   i2_strstr
  1284                           ;!     i2_strchr
  1285                           ;!     i2_strlen
  1286                           ;!     i2_strncmp
  1287                           ;!
  1288                           
  1289                           ;! Address spaces:
  1290                           
  1291                           ;!Name               Size   Autos  Total    Cost      Usage
  1292                           ;!BIGRAM             5FF      0       0      17        0.0%
  1293                           ;!EEDATA             100      0       0       0        0.0%
  1294                           ;!BITBANK5           100      0       0      16        0.0%
  1295                           ;!BANK5              100      0       0      14        0.0%
  1296                           ;!BITBANK4           100      0       0      12        0.0%
  1297                           ;!BANK4              100      0       0      13        0.0%
  1298                           ;!BITBANK3           100      0       0      10        0.0%
  1299                           ;!BANK3              100      0       0      11        0.0%
  1300                           ;!BITBANK2           100      0       0       8        0.0%
  1301                           ;!BANK2              100      0       0       9        0.0%
  1302                           ;!BITBANK1           100      0       0       6        0.0%
  1303                           ;!BANK1              100      0       0       7        0.0%
  1304                           ;!BITBANK0            80      0       0       4        0.0%
  1305                           ;!BANK0               80     13      5B       5       71.1%
  1306                           ;!BITCOMRAM           7E      0       0       0        0.0%
  1307                           ;!COMRAM              7E     47      59       1       70.6%
  1308                           ;!BITSFR               0      0       0     200        0.0%
  1309                           ;!SFR                  0      0       0     200        0.0%
  1310                           ;!STACK                0      0       0       2        0.0%
  1311                           ;!NULL                 0      0       0       0        0.0%
  1312                           ;!ABS                  0      0      B4      15        0.0%
  1313                           ;!DATA                 0      0      B4       3        0.0%
  1314                           ;!CODE                 0      0       0       0        0.0%
  1315                           
  1316                           	global	_main
  1317                           
  1318 ;; *************** function _main *****************
  1319 ;; Defined at:
  1320 ;;		line 130 in file "Prob1.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         0       0       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels required when called:    8
  1340 ;; This function calls:
  1341 ;;		_ClearBuffer
  1342 ;;		_INTERRUPT_Initialize
  1343 ;;		_ModeBlink
  1344 ;;		_ModeBreath
  1345 ;;		_UART_Initialize
  1346 ;;		_strstr
  1347 ;; This function is called by:
  1348 ;;		Startup code after reset
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1352                           	file	"Prob1.c"
  1353                           	line	130
  1354                           global __ptext0
  1355                           __ptext0:
  1356  001026                     psect	text0
  1357                           	file	"Prob1.c"
  1358                           	line	130
  1359                           	global	__size_of_main
  1360                           	__size_of_main	equ	__end_of_main-_main
  1361  0000                     	
  1362                           _main:
  1363  001026                     ;incstack = 0
  1364                           	opt	stack 23
  1365                           	line	133
  1366                           	
  1367                           l1823:
  1368  001026                     ;Prob1.c: 133:     INTERRUPT_Initialize();
  1369                           	call	_INTERRUPT_Initialize	;wreg free
  1370  001026  ECA7  F00A         	line	134
  1371                           	
  1372                           l1825:
  1373  00102A                     ;Prob1.c: 134:     UART_Initialize();
  1374                           	call	_UART_Initialize	;wreg free
  1375  00102A  EC82  F00A         	line	135
  1376                           	
  1377                           l1827:
  1378  00102E                     ;Prob1.c: 135:     ClearBuffer();
  1379                           	call	_ClearBuffer	;wreg free
  1380  00102E  EC9F  F008         	goto	l1829
  1381  001032  EF1B  F008         	line	140
  1382                           ;Prob1.c: 140:     while(1) {
  1383                           	
  1384                           l111:
  1385  001036                     	line	146
  1386                           	
  1387                           l1829:
  1388  001036                     ;Prob1.c: 146:         if(strstr(mystring, "breath") != ((void*)0))
  1389                           		movlw	low(_mystring)
  1390  001036  0ED1               	movlb	0	; () banked
  1391  001038  0100               	movwf	((strstr@h))&0ffh
  1392  00103A  6FCB               	movlw	high(_mystring)
  1393  00103C  0E00               	movwf	((strstr@h+1))&0ffh
  1394  00103E  6FCC               
  1395                           		movlw	low(STR_1)
  1396  001040  0E01               	movwf	((strstr@n))&0ffh
  1397  001042  6FCD               	movlw	high(STR_1)
  1398  001044  0E06               	movwf	((strstr@n+1))&0ffh
  1399  001046  6FCE               
  1400                           	call	_strstr	;wreg free
  1401  001048  EC08  F006         	movlb	0	; () banked
  1402  00104C  0100               	movf	(0+?_strstr)&0ffh,w
  1403  00104E  51CB               iorwf	(1+?_strstr)&0ffh,w
  1404  001050  11CC               	btfsc	status,2
  1405  001052  B4D8               	goto	u1461
  1406  001054  EF2E  F008         	goto	u1460
  1407  001058  EF30  F008         
  1408                           u1461:
  1409  00105C                     	goto	l1833
  1410  00105C  EF34  F008         u1460:
  1411  001060                     	line	147
  1412                           	
  1413                           l1831:; BSR set to: 0
  1414  001060                     
  1415                           ;Prob1.c: 147:             ModeBreath();
  1416                           	call	_ModeBreath	;wreg free
  1417  001060  ECA2  F00A         	goto	l1833
  1418  001064  EF34  F008         	
  1419                           l112:
  1420  001068                     	line	148
  1421                           	
  1422                           l1833:
  1423  001068                     ;Prob1.c: 148:         if(strstr(mystring, "blink") != ((void*)0))
  1424                           		movlw	low(_mystring)
  1425  001068  0ED1               	movlb	0	; () banked
  1426  00106A  0100               	movwf	((strstr@h))&0ffh
  1427  00106C  6FCB               	movlw	high(_mystring)
  1428  00106E  0E00               	movwf	((strstr@h+1))&0ffh
  1429  001070  6FCC               
  1430                           		movlw	low(STR_2)
  1431  001072  0E08               	movwf	((strstr@n))&0ffh
  1432  001074  6FCD               	movlw	high(STR_2)
  1433  001076  0E06               	movwf	((strstr@n+1))&0ffh
  1434  001078  6FCE               
  1435                           	call	_strstr	;wreg free
  1436  00107A  EC08  F006         	movlb	0	; () banked
  1437  00107E  0100               	movf	(0+?_strstr)&0ffh,w
  1438  001080  51CB               iorwf	(1+?_strstr)&0ffh,w
  1439  001082  11CC               	btfsc	status,2
  1440  001084  B4D8               	goto	u1471
  1441  001086  EF47  F008         	goto	u1470
  1442  00108A  EF49  F008         
  1443                           u1471:
  1444  00108E                     	goto	l1829
  1445  00108E  EF1B  F008         u1470:
  1446  001092                     	line	150
  1447                           	
  1448                           l1835:; BSR set to: 0
  1449  001092                     
  1450                           ;Prob1.c: 149:         {;Prob1.c: 150:             max_count = 1;
  1451                           	movlw	high(01h)
  1452  001092  0E00               	movwf	((c:_max_count+1)),c
  1453  001094  6E59               	movlw	low(01h)
  1454  001096  0E01               	movwf	((c:_max_count)),c
  1455  001098  6E58               	line	151
  1456                           ;Prob1.c: 151:             num_led = 2;
  1457                           	movlw	high(02h)
  1458  00109A  0E00               	movwf	((_num_led+1))&0ffh
  1459  00109C  6FBD               	movlw	low(02h)
  1460  00109E  0E02               	movwf	((_num_led))&0ffh
  1461  0010A0  6FBC               	line	152
  1462                           	
  1463                           l1837:; BSR set to: 0
  1464  0010A2                     
  1465                           ;Prob1.c: 152:             ModeBlink();
  1466                           	call	_ModeBlink	;wreg free
  1467  0010A2  ECBB  F007         	goto	l1829
  1468  0010A6  EF1B  F008         	line	153
  1469                           ;Prob1.c: 153:         }
  1470                           	
  1471                           l113:
  1472  0010AA                     	goto	l1829
  1473  0010AA  EF1B  F008         	line	155
  1474                           ;Prob1.c: 155:     }
  1475                           	
  1476                           l114:
  1477  0010AE                     	goto	l1829
  1478  0010AE  EF1B  F008         	
  1479                           l115:
  1480  0010B2                     	line	158
  1481                           ;Prob1.c: 156:     return;
  1482                           	
  1483                           l116:
  1484  0010B2                     	global	start
  1485                           	goto	start
  1486  0010B2  EFFD  F000         	opt stack 0
  1487                           GLOBAL	__end_of_main
  1488                           	__end_of_main:
  1489  0010B6                     	signat	_main,89
  1490                           	global	_strstr
  1491                           
  1492 ;; *************** function _strstr *****************
  1493 ;; Defined at:
  1494 ;;		line 143 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  h               2   13[BANK0 ] PTR const unsigned char 
  1497 ;;		 -> NULL(0), mystring(10), 
  1498 ;;  n               2   15[BANK0 ] PTR const unsigned char 
  1499 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  nl              2   17[BANK0 ] unsigned int 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2   13[BANK0 ] PTR unsigned char 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1511 ;;      Params:         0       4       0       0       0       0       0
  1512 ;;      Locals:         0       2       0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0
  1514 ;;      Totals:         0       6       0       0       0       0       0
  1515 ;;Total ram usage:        6 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    7
  1518 ;; This function calls:
  1519 ;;		_strchr
  1520 ;;		_strlen
  1521 ;;		_strncmp
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           psect	text1,class=CODE,space=0,reloc=2,group=2
  1527                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  1528                           	line	143
  1529                           global __ptext1
  1530                           __ptext1:
  1531  000C10                     psect	text1
  1532                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  1533                           	line	143
  1534                           	global	__size_of_strstr
  1535                           	__size_of_strstr	equ	__end_of_strstr-_strstr
  1536  0000                     	
  1537                           _strstr:
  1538  000C10                     ;incstack = 0
  1539                           	opt	stack 23
  1540                           	line	146
  1541                           	
  1542                           l1679:
  1543  000C10                     	movlb	0	; () banked
  1544  000C10  0100               	movf	((strstr@n))&0ffh,w
  1545  000C12  51CD               iorwf	((strstr@n+1))&0ffh,w
  1546  000C14  11CE               	btfsc	status,2
  1547  000C16  B4D8               	goto	u1211
  1548  000C18  EF10  F006         	goto	u1210
  1549  000C1C  EF12  F006         
  1550                           u1211:
  1551  000C20                     	goto	l1695
  1552  000C20  EF70  F006         u1210:
  1553  000C24                     	line	147
  1554                           	
  1555                           l1681:; BSR set to: 0
  1556  000C24                     
  1557                           		movff	(strstr@n),(strlen@s)
  1558  000C24  C0CD  F0BE         	movff	(strstr@n+1),(strlen@s+1)
  1559  000C28  C0CE  F0BF         
  1560                           	call	_strlen	;wreg free
  1561  000C2C  EC06  F009         	movff	0+?_strlen,(strstr@nl)
  1562  000C30  C0BE  F0CF         	movff	1+?_strlen,(strstr@nl+1)
  1563  000C34  C0BF  F0D0         	line	148
  1564                           	goto	l1691
  1565  000C38  EF54  F006         	
  1566                           l859:
  1567  000C3C                     	line	149
  1568                           	
  1569                           l1683:
  1570  000C3C                     		movff	(strstr@h),(strncmp@_l)
  1571  000C3C  C0CB  F0BE         	movff	(strstr@h+1),(strncmp@_l+1)
  1572  000C40  C0CC  F0BF         
  1573                           		movff	(strstr@n),(strncmp@_r)
  1574  000C44  C0CD  F0C0         	movff	(strstr@n+1),(strncmp@_r+1)
  1575  000C48  C0CE  F0C1         
  1576                           	movff	(strstr@nl),(strncmp@n)
  1577  000C4C  C0CF  F0C2         	movff	(strstr@nl+1),(strncmp@n+1)
  1578  000C50  C0D0  F0C3         	call	_strncmp	;wreg free
  1579  000C54  EC8D  F004         	movlb	0	; () banked
  1580  000C58  0100               	movf	(0+?_strncmp)&0ffh,w
  1581  000C5A  51BE               iorwf	(1+?_strncmp)&0ffh,w
  1582  000C5C  11BF               	btfss	status,2
  1583  000C5E  A4D8               	goto	u1221
  1584  000C60  EF34  F006         	goto	u1220
  1585  000C64  EF36  F006         
  1586                           u1221:
  1587  000C68                     	goto	l1689
  1588  000C68  EF3E  F006         u1220:
  1589  000C6C                     	line	150
  1590                           	
  1591                           l1685:; BSR set to: 0
  1592  000C6C                     
  1593                           		movff	(strstr@h),(?_strstr)
  1594  000C6C  C0CB  F0CB         	movff	(strstr@h+1),(?_strstr+1)
  1595  000C70  C0CC  F0CC         
  1596                           	goto	l861
  1597  000C74  EF76  F006         	
  1598                           l1687:; BSR set to: 0
  1599  000C78                     
  1600                           	goto	l861
  1601  000C78  EF76  F006         	
  1602                           l860:; BSR set to: 0
  1603  000C7C                     
  1604                           	line	151
  1605                           	
  1606                           l1689:; BSR set to: 0
  1607  000C7C                     
  1608                           	movlw	low(01h)
  1609  000C7C  0E01               	addwf	((strstr@h))&0ffh,w
  1610  000C7E  25CB               	movwf	((strchr@s))&0ffh
  1611  000C80  6FBE               	movlw	high(01h)
  1612  000C82  0E00               	addwfc	((strstr@h+1))&0ffh,w
  1613  000C84  21CC               	movwf	1+((strchr@s))&0ffh
  1614  000C86  6FBF               	movff	(strstr@n),tblptrl
  1615  000C88  C0CD  FFF6         	movff	(strstr@n+1),tblptrh
  1616  000C8C  C0CE  FFF7         	if	0	;tblptru may be non-zero
  1617  000C90                     	clrf	tblptru
  1619  000C90                     	if	0	;tblptru may be non-zero
  1620  000C90                     	global __mediumconst
  1621                           movlw	low highword(__mediumconst)
  1624  000C90                     	tblrd	*
  1625  000C90  0008               	
  1626                           	movf	tablat,w
  1627  000C92  50F5               
  1628                           	movwf	((strchr@c))&0ffh
  1629  000C94  6FC0               	clrf	((strchr@c+1))&0ffh
  1630  000C96  6BC1               	call	_strchr	;wreg free
  1631  000C98  EC33  F009         	movff	0+?_strchr,(strstr@h)
  1632  000C9C  C0BE  F0CB         	movff	1+?_strchr,(strstr@h+1)
  1633  000CA0  C0BF  F0CC         	goto	l1691
  1634  000CA4  EF54  F006         	line	152
  1635                           	
  1636                           l858:
  1637  000CA8                     	line	148
  1638                           	
  1639                           l1691:
  1640  000CA8                     	movlb	0	; () banked
  1641  000CA8  0100               	movf	((strstr@h))&0ffh,w
  1642  000CAA  51CB               iorwf	((strstr@h+1))&0ffh,w
  1643  000CAC  11CC               	btfsc	status,2
  1644  000CAE  B4D8               	goto	u1231
  1645  000CB0  EF5C  F006         	goto	u1230
  1646  000CB4  EF5E  F006         
  1647                           u1231:
  1648  000CB8                     	goto	l1695
  1649  000CB8  EF70  F006         u1230:
  1650  000CBC                     	
  1651                           l1693:; BSR set to: 0
  1652  000CBC                     
  1653                           	movff	(strstr@h),fsr2l
  1654  000CBC  C0CB  FFD9         	movff	(strstr@h+1),fsr2h
  1655  000CC0  C0CC  FFDA         	movf	indf2,w
  1656  000CC4  50DF               	btfss	status,2
  1657  000CC6  A4D8               	goto	u1241
  1658  000CC8  EF68  F006         	goto	u1240
  1659  000CCC  EF6A  F006         u1241:
  1660  000CD0                     	goto	l1683
  1661  000CD0  EF1E  F006         u1240:
  1662  000CD4                     	goto	l1695
  1663  000CD4  EF70  F006         	
  1664                           l863:; BSR set to: 0
  1665  000CD8                     
  1666                           	goto	l1695
  1667  000CD8  EF70  F006         	
  1668                           l864:; BSR set to: 0
  1669  000CDC                     
  1670                           	goto	l1695
  1671  000CDC  EF70  F006         	line	153
  1672                           	
  1673                           l857:; BSR set to: 0
  1674  000CE0                     
  1675                           	line	154
  1676                           	
  1677                           l1695:; BSR set to: 0
  1678  000CE0                     
  1679                           		movlw	low(0)
  1680  000CE0  0E00               	movwf	((?_strstr))&0ffh
  1681  000CE2  6FCB               	movlw	high(0)
  1682  000CE4  0E00               	movwf	((?_strstr+1))&0ffh
  1683  000CE6  6FCC               
  1684                           	goto	l861
  1685  000CE8  EF76  F006         	
  1686                           l1697:; BSR set to: 0
  1687  000CEC                     
  1688                           	line	171
  1689                           	
  1690                           l861:; BSR set to: 0
  1691  000CEC                     
  1692                           	return	;funcret
  1693  000CEC  0012               	opt stack 0
  1694                           GLOBAL	__end_of_strstr
  1695                           	__end_of_strstr:
  1696  000CEE                     	signat	_strstr,8314
  1697                           	global	_strncmp
  1698                           
  1699 ;; *************** function _strncmp *****************
  1700 ;; Defined at:
  1701 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  1704 ;;		 -> NULL(0), mystring(10), 
  1705 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  1706 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  1707 ;;  n               2    4[BANK0 ] unsigned int 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  r               2   11[BANK0 ] PTR const unsigned char 
  1710 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  1711 ;;  l               2    9[BANK0 ] PTR const unsigned char 
  1712 ;;		 -> NULL(0), mystring(10), 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  2    0[BANK0 ] int 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1722 ;;      Params:         0       6       0       0       0       0       0
  1723 ;;      Locals:         0       4       0       0       0       0       0
  1724 ;;      Temps:          0       3       0       0       0       0       0
  1725 ;;      Totals:         0      13       0       0       0       0       0
  1726 ;;Total ram usage:       13 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    6
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_strstr
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           psect	text2,class=CODE,space=0,reloc=2,group=2
  1736                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  1737                           	line	3
  1738                           global __ptext2
  1739                           __ptext2:
  1740  00091A                     psect	text2
  1741                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  1742                           	line	3
  1743                           	global	__size_of_strncmp
  1744                           	__size_of_strncmp	equ	__end_of_strncmp-_strncmp
  1745  0000                     	
  1746                           _strncmp:; BSR set to: 0
  1747  00091A                     
  1748                           ;incstack = 0
  1749                           	opt	stack 23
  1750                           	line	5
  1751                           	
  1752                           l1497:
  1753  00091A                     		movff	(strncmp@_l),(strncmp@l)
  1754  00091A  C0BE  F0C7         	movff	(strncmp@_l+1),(strncmp@l+1)
  1755  00091E  C0BF  F0C8         
  1756                           		movff	(strncmp@_r),(strncmp@r)
  1757  000922  C0C0  F0C9         	movff	(strncmp@_r+1),(strncmp@r+1)
  1758  000926  C0C1  F0CA         
  1759                           	line	6
  1760                           	movlb	0	; () banked
  1761  00092A  0100               	decf	((strncmp@n))&0ffh
  1762  00092C  07C2               	btfss	status,0
  1763  00092E  A0D8               	decf	((strncmp@n+1))&0ffh
  1764  000930  07C3               		incf	((strncmp@n))&0ffh,w
  1765  000932  29C2               	bnz	u941
  1766  000934  E106               	incf	((strncmp@n+1))&0ffh,w
  1767  000936  29C3               	btfss	status,2
  1768  000938  A4D8               	goto	u941
  1769  00093A  EFA1  F004         	goto	u940
  1770  00093E  EFA3  F004         
  1771                           u941:
  1772  000942                     	goto	l1505
  1773  000942  EFB6  F004         u940:
  1774  000946                     	
  1775                           l1499:; BSR set to: 0
  1776  000946                     
  1777                           	movlw	high(0)
  1778  000946  0E00               	movwf	((?_strncmp+1))&0ffh
  1779  000948  6FBF               	movlw	low(0)
  1780  00094A  0E00               	movwf	((?_strncmp))&0ffh
  1781  00094C  6FBE               	goto	l880
  1782  00094E  EF0B  F005         	
  1783                           l1501:; BSR set to: 0
  1784  000952                     
  1785                           	goto	l880
  1786  000952  EF0B  F005         	
  1787                           l879:; BSR set to: 0
  1788  000956                     
  1789                           	line	7
  1790                           	goto	l1505
  1791  000956  EFB6  F004         	
  1792                           l882:; BSR set to: 0
  1793  00095A                     
  1794                           	
  1795                           l1503:; BSR set to: 0
  1796  00095A                     
  1797                           	infsnz	((strncmp@l))&0ffh
  1798  00095A  4BC7               	incf	((strncmp@l+1))&0ffh
  1799  00095C  2BC8               	infsnz	((strncmp@r))&0ffh
  1800  00095E  4BC9               	incf	((strncmp@r+1))&0ffh
  1801  000960  2BCA               	decf	((strncmp@n))&0ffh
  1802  000962  07C2               	btfss	status,0
  1803  000964  A0D8               	decf	((strncmp@n+1))&0ffh
  1804  000966  07C3               	goto	l1505
  1805  000968  EFB6  F004         	
  1806                           l881:; BSR set to: 0
  1807  00096C                     
  1808                           	
  1809                           l1505:; BSR set to: 0
  1810  00096C                     
  1811                           	movff	(strncmp@l),fsr2l
  1812  00096C  C0C7  FFD9         	movff	(strncmp@l+1),fsr2h
  1813  000970  C0C8  FFDA         	movf	indf2,w
  1814  000974  50DF               	btfsc	status,2
  1815  000976  B4D8               	goto	u951
  1816  000978  EFC0  F004         	goto	u950
  1817  00097C  EFC2  F004         u951:
  1818  000980                     	goto	l1513
  1819  000980  EFF1  F004         u950:
  1820  000984                     	
  1821                           l1507:; BSR set to: 0
  1822  000984                     
  1823                           	movff	(strncmp@r),tblptrl
  1824  000984  C0C9  FFF6         	movff	(strncmp@r+1),tblptrh
  1825  000988  C0CA  FFF7         	if	0	;tblptru may be non-zero
  1826  00098C                     	clrf	tblptru
  1828  00098C                     	if	0	;tblptru may be non-zero
  1829  00098C                     	global __mediumconst
  1830                           movlw	low highword(__mediumconst)
  1833  00098C                     	tblrd	*
  1834  00098C  0008               	
  1835                           	movf	tablat,w
  1836  00098E  50F5               	iorlw	0
  1837  000990  0900               	btfsc	status,2
  1838  000992  B4D8               	goto	u961
  1839  000994  EFCE  F004         	goto	u960
  1840  000998  EFD0  F004         u961:
  1841  00099C                     	goto	l1513
  1842  00099C  EFF1  F004         u960:
  1843  0009A0                     	
  1844                           l1509:; BSR set to: 0
  1845  0009A0                     
  1846                           	movf	((strncmp@n))&0ffh,w
  1847  0009A0  51C2               iorwf	((strncmp@n+1))&0ffh,w
  1848  0009A2  11C3               	btfsc	status,2
  1849  0009A4  B4D8               	goto	u971
  1850  0009A6  EFD7  F004         	goto	u970
  1851  0009AA  EFD9  F004         
  1852                           u971:
  1853  0009AE                     	goto	l1513
  1854  0009AE  EFF1  F004         u970:
  1855  0009B2                     	
  1856                           l1511:; BSR set to: 0
  1857  0009B2                     
  1858                           	movff	(strncmp@l),fsr2l
  1859  0009B2  C0C7  FFD9         	movff	(strncmp@l+1),fsr2h
  1860  0009B6  C0C8  FFDA         	movf	indf2,w
  1861  0009BA  50DF               	movwf	(??_strncmp+0+0)&0ffh
  1862  0009BC  6FC4               	movff	(strncmp@r),tblptrl
  1863  0009BE  C0C9  FFF6         	movff	(strncmp@r+1),tblptrh
  1864  0009C2  C0CA  FFF7         	if	0	;tblptru may be non-zero
  1865  0009C6                     	clrf	tblptru
  1867  0009C6                     	if	0	;tblptru may be non-zero
  1868  0009C6                     	global __mediumconst
  1869                           movlw	low highword(__mediumconst)
  1872  0009C6                     	tblrd	*
  1873  0009C6  0008               	
  1874                           	movf	tablat,w
  1875  0009C8  50F5               	xorwf	((??_strncmp+0+0))&0ffh,w
  1876  0009CA  19C4               
  1877                           	btfsc	status,2
  1878  0009CC  B4D8               	goto	u981
  1879  0009CE  EFEB  F004         	goto	u980
  1880  0009D2  EFED  F004         u981:
  1881  0009D6                     	goto	l1503
  1882  0009D6  EFAD  F004         u980:
  1883  0009DA                     	goto	l1513
  1884  0009DA  EFF1  F004         	
  1885                           l884:; BSR set to: 0
  1886  0009DE                     
  1887                           	goto	l1513
  1888  0009DE  EFF1  F004         	
  1889                           l885:; BSR set to: 0
  1890  0009E2                     
  1891                           	line	8
  1892                           	
  1893                           l1513:; BSR set to: 0
  1894  0009E2                     
  1895                           	movff	(strncmp@r),tblptrl
  1896  0009E2  C0C9  FFF6         	movff	(strncmp@r+1),tblptrh
  1897  0009E6  C0CA  FFF7         	if	0	;tblptru may be non-zero
  1898  0009EA                     	clrf	tblptru
  1900  0009EA                     	if	0	;tblptru may be non-zero
  1901  0009EA                     	global __mediumconst
  1902                           movlw	low highword(__mediumconst)
  1905  0009EA                     	tblrd	*
  1906  0009EA  0008               	
  1907                           	movf	tablat,w
  1908  0009EC  50F5               	movwf	(??_strncmp+0+0)&0ffh
  1909  0009EE  6FC4               	clrf	(??_strncmp+0+0+1)&0ffh
  1910  0009F0  6BC5               
  1911                           	comf	(??_strncmp+0+0)&0ffh
  1912  0009F2  1FC4               	comf	(??_strncmp+0+1)&0ffh
  1913  0009F4  1FC5               	infsnz	(??_strncmp+0+0)&0ffh
  1914  0009F6  4BC4               	incf	(??_strncmp+0+1)&0ffh
  1915  0009F8  2BC5               	movff	(strncmp@l),fsr2l
  1916  0009FA  C0C7  FFD9         	movff	(strncmp@l+1),fsr2h
  1917  0009FE  C0C8  FFDA         	movf	indf2,w
  1918  000A02  50DF               	movwf	(??_strncmp+2+0)&0ffh
  1919  000A04  6FC6               	movf	((??_strncmp+2+0))&0ffh,w
  1920  000A06  51C6               	addwf	(??_strncmp+0+0)&0ffh,w
  1921  000A08  25C4               	movwf	((?_strncmp))&0ffh
  1922  000A0A  6FBE               	movlw	0
  1923  000A0C  0E00               	addwfc	(??_strncmp+0+1)&0ffh,w
  1924  000A0E  21C5               	movwf	1+((?_strncmp))&0ffh
  1925  000A10  6FBF               	goto	l880
  1926  000A12  EF0B  F005         	
  1927                           l1515:; BSR set to: 0
  1928  000A16                     
  1929                           	line	9
  1930                           	
  1931                           l880:; BSR set to: 0
  1932  000A16                     
  1933                           	return	;funcret
  1934  000A16  0012               	opt stack 0
  1935                           GLOBAL	__end_of_strncmp
  1936                           	__end_of_strncmp:
  1937  000A18                     	signat	_strncmp,12410
  1938                           	global	_strlen
  1939                           
  1940 ;; *************** function _strlen *****************
  1941 ;; Defined at:
  1942 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  1945 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  a               2    4[BANK0 ] PTR const unsigned char 
  1948 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2    0[BANK0 ] unsigned int 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1958 ;;      Params:         0       2       0       0       0       0       0
  1959 ;;      Locals:         0       2       0       0       0       0       0
  1960 ;;      Temps:          0       2       0       0       0       0       0
  1961 ;;      Totals:         0       6       0       0       0       0       0
  1962 ;;Total ram usage:        6 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    6
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_strstr
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           psect	text3,class=CODE,space=0,reloc=2,group=2
  1972                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  1973                           	line	12
  1974                           global __ptext3
  1975                           __ptext3:
  1976  00120C                     psect	text3
  1977                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  1978                           	line	12
  1979                           	global	__size_of_strlen
  1980                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  1981  0000                     	
  1982                           _strlen:; BSR set to: 0
  1983  00120C                     
  1984                           ;incstack = 0
  1985                           	opt	stack 23
  1986                           	line	14
  1987                           	
  1988                           l1487:
  1989  00120C                     		movff	(strlen@s),(strlen@a)
  1990  00120C  C0BE  F0C2         	movff	(strlen@s+1),(strlen@a+1)
  1991  001210  C0BF  F0C3         
  1992                           	line	16
  1993                           	goto	l1491
  1994  001214  EF11  F009         	
  1995                           l874:
  1996  001218                     	line	17
  1997                           	
  1998                           l1489:
  1999  001218                     	movlb	0	; () banked
  2000  001218  0100               	infsnz	((strlen@s))&0ffh
  2001  00121A  4BBE               	incf	((strlen@s+1))&0ffh
  2002  00121C  2BBF               	goto	l1491
  2003  00121E  EF11  F009         	line	18
  2004                           	
  2005                           l873:; BSR set to: 0
  2006  001222                     
  2007                           	line	16
  2008                           	
  2009                           l1491:
  2010  001222                     	movff	(strlen@s),tblptrl
  2011  001222  C0BE  FFF6         	movff	(strlen@s+1),tblptrh
  2012  001226  C0BF  FFF7         	if	0	;tblptru may be non-zero
  2013  00122A                     	clrf	tblptru
  2015  00122A                     	if	0	;tblptru may be non-zero
  2016  00122A                     	global __mediumconst
  2017                           movlw	low highword(__mediumconst)
  2020  00122A                     	tblrd	*
  2021  00122A  0008               	
  2022                           	movf	tablat,w
  2023  00122C  50F5               	iorlw	0
  2024  00122E  0900               	btfss	status,2
  2025  001230  A4D8               	goto	u931
  2026  001232  EF1D  F009         	goto	u930
  2027  001236  EF1F  F009         u931:
  2028  00123A                     	goto	l1489
  2029  00123A  EF0C  F009         u930:
  2030  00123E                     	goto	l1493
  2031  00123E  EF21  F009         	
  2032                           l875:
  2033  001242                     	line	25
  2034                           	
  2035                           l1493:
  2036  001242                     	movff	(strlen@a),??_strlen+0+0
  2037  001242  C0C2  F0C0         	movff	(strlen@a+1),??_strlen+0+0+1
  2038  001246  C0C3  F0C1         	movlb	0	; () banked
  2039  00124A  0100               	comf	(??_strlen+0+0)&0ffh
  2040  00124C  1FC0               	comf	(??_strlen+0+1)&0ffh
  2041  00124E  1FC1               	infsnz	(??_strlen+0+0)&0ffh
  2042  001250  4BC0               	incf	(??_strlen+0+1)&0ffh
  2043  001252  2BC1               	movf	((strlen@s))&0ffh,w
  2044  001254  51BE               	addwf	(??_strlen+0+0)&0ffh,w
  2045  001256  25C0               	movwf	((?_strlen))&0ffh
  2046  001258  6FBE               	movf	((strlen@s+1))&0ffh,w
  2047  00125A  51BF               	addwfc	(??_strlen+0+1)&0ffh,w
  2048  00125C  21C1               	movwf	1+((?_strlen))&0ffh
  2049  00125E  6FBF               	goto	l876
  2050  001260  EF32  F009         	
  2051                           l1495:; BSR set to: 0
  2052  001264                     
  2053                           	line	26
  2054                           	
  2055                           l876:; BSR set to: 0
  2056  001264                     
  2057                           	return	;funcret
  2058  001264  0012               	opt stack 0
  2059                           GLOBAL	__end_of_strlen
  2060                           	__end_of_strlen:
  2061  001266                     	signat	_strlen,4218
  2062                           	global	_strchr
  2063                           
  2064 ;; *************** function _strchr *****************
  2065 ;; Defined at:
  2066 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  2069 ;;		 -> NULL(0), mystring(10), 
  2070 ;;  c               2    2[BANK0 ] int 
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  2    0[BANK0 ] PTR unsigned char 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2082 ;;      Params:         0       4       0       0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0
  2084 ;;      Temps:          0       1       0       0       0       0       0
  2085 ;;      Totals:         0       5       0       0       0       0       0
  2086 ;;Total ram usage:        5 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    6
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_strstr
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           psect	text4,class=CODE,space=0,reloc=2,group=2
  2096                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  2097                           	line	7
  2098                           global __ptext4
  2099                           __ptext4:
  2100  001266                     psect	text4
  2101                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  2102                           	line	7
  2103                           	global	__size_of_strchr
  2104                           	__size_of_strchr	equ	__end_of_strchr-_strchr
  2105  0000                     	
  2106                           _strchr:; BSR set to: 0
  2107  001266                     
  2108                           ;incstack = 0
  2109                           	opt	stack 23
  2110                           	line	13
  2111                           	
  2112                           l867:
  2113  001266                     	line	14
  2114                           	
  2115                           l1517:
  2116  001266                     	movff	(strchr@s),fsr2l
  2117  001266  C0BE  FFD9         	movff	(strchr@s+1),fsr2h
  2118  00126A  C0BF  FFDA         	movlb	0	; () banked
  2119  00126E  0100               	movf	((strchr@c))&0ffh,w
  2120  001270  51C0               xorwf	postinc2,w
  2121  001272  18DE               	btfss	status,2
  2122  001274  A4D8               	goto	u991
  2123  001276  EF3F  F009         	goto	u990
  2124  00127A  EF41  F009         
  2125                           u991:
  2126  00127E                     	goto	l1523
  2127  00127E  EF49  F009         u990:
  2128  001282                     	line	15
  2129                           	
  2130                           l1519:; BSR set to: 0
  2131  001282                     
  2132                           		movff	(strchr@s),(?_strchr)
  2133  001282  C0BE  F0BE         	movff	(strchr@s+1),(?_strchr+1)
  2134  001286  C0BF  F0BF         
  2135                           	goto	l869
  2136  00128A  EF5F  F009         	
  2137                           l1521:; BSR set to: 0
  2138  00128E                     
  2139                           	goto	l869
  2140  00128E  EF5F  F009         	line	16
  2141                           	
  2142                           l868:; BSR set to: 0
  2143  001292                     
  2144                           	line	17
  2145                           	
  2146                           l1523:; BSR set to: 0
  2147  001292                     
  2148                           	movff	(strchr@s),fsr2l
  2149  001292  C0BE  FFD9         	movff	(strchr@s+1),fsr2h
  2150  001296  C0BF  FFDA         	infsnz	((strchr@s))&0ffh
  2151  00129A  4BBE               	incf	((strchr@s+1))&0ffh
  2152  00129C  2BBF               	movf	indf2,w
  2153  00129E  50DF               	btfss	status,2
  2154  0012A0  A4D8               	goto	u1001
  2155  0012A2  EF55  F009         	goto	u1000
  2156  0012A6  EF57  F009         u1001:
  2157  0012AA                     	goto	l867
  2158  0012AA  EF33  F009         u1000:
  2159  0012AE                     	goto	l1525
  2160  0012AE  EF59  F009         	
  2161                           l870:; BSR set to: 0
  2162  0012B2                     
  2163                           	line	18
  2164                           	
  2165                           l1525:; BSR set to: 0
  2166  0012B2                     
  2167                           		movlw	low(0)
  2168  0012B2  0E00               	movwf	((?_strchr))&0ffh
  2169  0012B4  6FBE               	movlw	high(0)
  2170  0012B6  0E00               	movwf	((?_strchr+1))&0ffh
  2171  0012B8  6FBF               
  2172                           	goto	l869
  2173  0012BA  EF5F  F009         	
  2174                           l1527:; BSR set to: 0
  2175  0012BE                     
  2176                           	line	20
  2177                           	
  2178                           l869:; BSR set to: 0
  2179  0012BE                     
  2180                           	return	;funcret
  2181  0012BE  0012               	opt stack 0
  2182                           GLOBAL	__end_of_strchr
  2183                           	__end_of_strchr:
  2184  0012C0                     	signat	_strchr,8314
  2185                           	global	_UART_Initialize
  2186                           
  2187 ;; *************** function _UART_Initialize *****************
  2188 ;; Defined at:
  2189 ;;		line 199 in file "Prob1.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2203 ;;      Params:         0       0       0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0
  2206 ;;      Totals:         0       0       0       0       0       0       0
  2207 ;;Total ram usage:        0 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    6
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2217                           	file	"Prob1.c"
  2218                           	line	199
  2219                           global __ptext5
  2220                           __ptext5:
  2221  001504                     psect	text5
  2222                           	file	"Prob1.c"
  2223                           	line	199
  2224                           	global	__size_of_UART_Initialize
  2225                           	__size_of_UART_Initialize	equ	__end_of_UART_Initialize-_UART_Initialize
  2226  0000                     	
  2227                           _UART_Initialize:; BSR set to: 0
  2228  001504                     
  2229                           ;incstack = 0
  2230                           	opt	stack 24
  2231                           	line	202
  2232                           	
  2233                           l1657:
  2234  001504                     ;Prob1.c: 202:     TRISCbits.TRISC6 = 1;
  2235                           	bsf	((c:3988)),c,6	;volatile
  2236  001504  8C94               	line	203
  2237                           ;Prob1.c: 203:     TRISCbits.TRISC7 = 1;
  2238                           	bsf	((c:3988)),c,7	;volatile
  2239  001506  8E94               	line	214
  2240                           ;Prob1.c: 214:     TXSTAbits.SYNC = 0;
  2241                           	bcf	((c:4012)),c,4	;volatile
  2242  001508  98AC               	line	215
  2243                           ;Prob1.c: 215:     BAUDCONbits.BRG16 = 0 ;
  2244                           	bcf	((c:4024)),c,3	;volatile
  2245  00150A  96B8               	line	216
  2246                           ;Prob1.c: 216:     TXSTAbits.BRGH = 1;
  2247                           	bsf	((c:4012)),c,2	;volatile
  2248  00150C  84AC               	line	217
  2249                           	
  2250                           l1659:
  2251  00150E                     ;Prob1.c: 217:     SPBRG = 51;
  2252                           	movlw	low(033h)
  2253  00150E  0E33               	movwf	((c:4015)),c	;volatile
  2254  001510  6EAF               	line	221
  2255                           	
  2256                           l1661:
  2257  001512                     ;Prob1.c: 221:     RCSTAbits.SPEN = 1;
  2258                           	bsf	((c:4011)),c,7	;volatile
  2259  001512  8EAB               	line	222
  2260                           	
  2261                           l1663:
  2262  001514                     ;Prob1.c: 222:     PIR1bits.TXIF = 1;
  2263                           	bsf	((c:3998)),c,4	;volatile
  2264  001514  889E               	line	223
  2265                           	
  2266                           l1665:
  2267  001516                     ;Prob1.c: 223:     PIR1bits.RCIF = 0;
  2268                           	bcf	((c:3998)),c,5	;volatile
  2269  001516  9A9E               	line	224
  2270                           	
  2271                           l1667:
  2272  001518                     ;Prob1.c: 224:     TXSTAbits.TXEN = 1;
  2273                           	bsf	((c:4012)),c,5	;volatile
  2274  001518  8AAC               	line	225
  2275                           	
  2276                           l1669:
  2277  00151A                     ;Prob1.c: 225:     RCSTAbits.CREN = 1;
  2278                           	bsf	((c:4011)),c,4	;volatile
  2279  00151A  88AB               	line	227
  2280                           	
  2281                           l1671:
  2282  00151C                     ;Prob1.c: 227:     PIE1bits.TXIE = 0;
  2283                           	bcf	((c:3997)),c,4	;volatile
  2284  00151C  989D               	line	228
  2285                           	
  2286                           l1673:
  2287  00151E                     ;Prob1.c: 228:     IPR1bits.TXIP = 0;
  2288                           	bcf	((c:3999)),c,4	;volatile
  2289  00151E  989F               	line	229
  2290                           	
  2291                           l1675:
  2292  001520                     ;Prob1.c: 229:     PIE1bits.RCIE = 1;
  2293                           	bsf	((c:3997)),c,5	;volatile
  2294  001520  8A9D               	line	230
  2295                           	
  2296                           l1677:
  2297  001522                     ;Prob1.c: 230:     IPR1bits.RCIP = 0;
  2298                           	bcf	((c:3999)),c,5	;volatile
  2299  001522  9A9F               	line	231
  2300                           	
  2301                           l134:
  2302  001524                     	return	;funcret
  2303  001524  0012               	opt stack 0
  2304                           GLOBAL	__end_of_UART_Initialize
  2305                           	__end_of_UART_Initialize:
  2306  001526                     	signat	_UART_Initialize,89
  2307                           	global	_ModeBreath
  2308                           
  2309 ;; *************** function _ModeBreath *****************
  2310 ;; Defined at:
  2311 ;;		line 97 in file "Prob1.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2325 ;;      Params:         0       0       0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0       0       0
  2328 ;;      Totals:         0       0       0       0       0       0       0
  2329 ;;Total ram usage:        0 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    7
  2332 ;; This function calls:
  2333 ;;		_ClearBuffer
  2334 ;;		_LED_Init
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           psect	text6,class=CODE,space=0,reloc=2,group=0
  2340                           	line	97
  2341                           global __ptext6
  2342                           __ptext6:
  2343  001544                     psect	text6
  2344                           	file	"Prob1.c"
  2345                           	line	97
  2346                           	global	__size_of_ModeBreath
  2347                           	__size_of_ModeBreath	equ	__end_of_ModeBreath-_ModeBreath
  2348  0000                     	
  2349                           _ModeBreath:
  2350  001544                     ;incstack = 0
  2351                           	opt	stack 23
  2352                           	line	99
  2353                           	
  2354                           l1613:
  2355  001544                     ;Prob1.c: 99:     ClearBuffer();
  2356                           	call	_ClearBuffer	;wreg free
  2357  001544  EC9F  F008         	line	100
  2358                           	
  2359                           l1615:
  2360  001548                     ;Prob1.c: 100:     LED_Init();
  2361                           	call	_LED_Init	;wreg free
  2362  001548  EC51  F00A         	line	101
  2363                           	
  2364                           l99:
  2365  00154C                     	return	;funcret
  2366  00154C  0012               	opt stack 0
  2367                           GLOBAL	__end_of_ModeBreath
  2368                           	__end_of_ModeBreath:
  2369  00154E                     	signat	_ModeBreath,89
  2370                           	global	_LED_Init
  2371                           
  2372 ;; *************** function _LED_Init *****************
  2373 ;; Defined at:
  2374 ;;		line 306 in file "Prob1.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2388 ;;      Params:         0       0       0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0
  2391 ;;      Totals:         0       0       0       0       0       0       0
  2392 ;;Total ram usage:        0 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    6
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_ModeBreath
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2402                           	line	306
  2403                           global __ptext7
  2404                           __ptext7:
  2405  0014A2                     psect	text7
  2406                           	file	"Prob1.c"
  2407                           	line	306
  2408                           	global	__size_of_LED_Init
  2409                           	__size_of_LED_Init	equ	__end_of_LED_Init-_LED_Init
  2410  0000                     	
  2411                           _LED_Init:
  2412  0014A2                     ;incstack = 0
  2413                           	opt	stack 23
  2414                           	line	308
  2415                           	
  2416                           l1415:
  2417  0014A2                     ;Prob1.c: 308:     TRISCbits.TRISC2 = 0;
  2418                           	bcf	((c:3988)),c,2	;volatile
  2419  0014A2  9494               	line	314
  2420                           	
  2421                           l1417:
  2422  0014A4                     ;Prob1.c: 314:     T2CON = 0x07;
  2423                           	movlw	low(07h)
  2424  0014A4  0E07               	movwf	((c:4042)),c	;volatile
  2425  0014A6  6ECA               	line	315
  2426                           ;Prob1.c: 315:     TMR2 = 0;
  2427                           	movlw	low(0)
  2428  0014A8  0E00               	movwf	((c:4044)),c	;volatile
  2429  0014AA  6ECC               	line	317
  2430                           	
  2431                           l1419:
  2432  0014AC                     ;Prob1.c: 317:     RCONbits.IPEN = 1;
  2433                           	bsf	((c:4048)),c,7	;volatile
  2434  0014AC  8ED0               	line	318
  2435                           	
  2436                           l1421:
  2437  0014AE                     ;Prob1.c: 318:     INTCONbits.GIE = 1;
  2438                           	bsf	((c:4082)),c,7	;volatile
  2439  0014AE  8EF2               	line	320
  2440                           ;Prob1.c: 320:     PR2 = 16;
  2441                           	movlw	low(010h)
  2442  0014B0  0E10               	movwf	((c:4043)),c	;volatile
  2443  0014B2  6ECB               	line	321
  2444                           ;Prob1.c: 321:     CCPR1L = 0;
  2445                           	movlw	low(0)
  2446  0014B4  0E00               	movwf	((c:4030)),c	;volatile
  2447  0014B6  6EBE               	line	322
  2448                           	
  2449                           l1423:
  2450  0014B8                     ;Prob1.c: 322:     CCP1CONbits.DC1B1 = 0;
  2451                           	bcf	((c:4029)),c,5	;volatile
  2452  0014B8  9ABD               	line	323
  2453                           	
  2454                           l1425:
  2455  0014BA                     ;Prob1.c: 323:     CCP1CONbits.DC1B0 = 0;
  2456                           	bcf	((c:4029)),c,4	;volatile
  2457  0014BA  98BD               	line	325
  2458                           	
  2459                           l1427:
  2460  0014BC                     ;Prob1.c: 325:     CCP1CONbits.CCP1M3 = 1;
  2461                           	bsf	((c:4029)),c,3	;volatile
  2462  0014BC  86BD               	line	326
  2463                           	
  2464                           l1429:
  2465  0014BE                     ;Prob1.c: 326:     CCP1CONbits.CCP1M2 = 1;
  2466                           	bsf	((c:4029)),c,2	;volatile
  2467  0014BE  84BD               	line	327
  2468                           	
  2469                           l1431:
  2470  0014C0                     ;Prob1.c: 327:     CCP1CONbits.CCP1M1 = 0;
  2471                           	bcf	((c:4029)),c,1	;volatile
  2472  0014C0  92BD               	line	328
  2473                           	
  2474                           l1433:
  2475  0014C2                     ;Prob1.c: 328:     CCP1CONbits.CCP1M0 = 0;
  2476                           	bcf	((c:4029)),c,0	;volatile
  2477  0014C2  90BD               	line	331
  2478                           	
  2479                           l1435:
  2480  0014C4                     ;Prob1.c: 331:     T1CONbits.RD16 = 1;
  2481                           	bsf	((c:4045)),c,7	;volatile
  2482  0014C4  8ECD               	line	332
  2483                           	
  2484                           l1437:
  2485  0014C6                     ;Prob1.c: 332:     T1CONbits.TMR1ON = 1;
  2486                           	bsf	((c:4045)),c,0	;volatile
  2487  0014C6  80CD               	line	333
  2488                           	
  2489                           l1439:
  2490  0014C8                     ;Prob1.c: 333:     T1CONbits.TMR1CS = 0;
  2491                           	bcf	((c:4045)),c,1	;volatile
  2492  0014C8  92CD               	line	335
  2493                           ;Prob1.c: 335:     TMR1 = 34285;
  2494                           	movlw	high(085EDh)
  2495  0014CA  0E85               	movwf	((c:4046+1)),c	;volatile
  2496  0014CC  6ECF               	movlw	low(085EDh)
  2497  0014CE  0EED               	movwf	((c:4046)),c	;volatile
  2498  0014D0  6ECE               	line	336
  2499                           	
  2500                           l1441:
  2501  0014D2                     ;Prob1.c: 336:     PIE1bits.TMR1IE = 1;
  2502                           	bsf	((c:3997)),c,0	;volatile
  2503  0014D2  809D               	line	337
  2504                           	
  2505                           l1443:
  2506  0014D4                     ;Prob1.c: 337:     IPR1bits.TMR1IP = 0;
  2507                           	bcf	((c:3999)),c,0	;volatile
  2508  0014D4  909F               	line	338
  2509                           	
  2510                           l1445:
  2511  0014D6                     ;Prob1.c: 338:     PIR1bits.TMR1IF = 0;
  2512                           	bcf	((c:3998)),c,0	;volatile
  2513  0014D6  909E               	line	339
  2514                           	
  2515                           l171:
  2516  0014D8                     	return	;funcret
  2517  0014D8  0012               	opt stack 0
  2518                           GLOBAL	__end_of_LED_Init
  2519                           	__end_of_LED_Init:
  2520  0014DA                     	signat	_LED_Init,89
  2521                           	global	_ModeBlink
  2522                           
  2523 ;; *************** function _ModeBlink *****************
  2524 ;; Defined at:
  2525 ;;		line 103 in file "Prob1.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;		None
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2539 ;;      Params:         0       0       0       0       0       0       0
  2540 ;;      Locals:         0       0       0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0
  2542 ;;      Totals:         0       0       0       0       0       0       0
  2543 ;;Total ram usage:        0 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    7
  2546 ;; This function calls:
  2547 ;;		_ClearBuffer
  2548 ;; This function is called by:
  2549 ;;		_main
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2553                           	line	103
  2554                           global __ptext8
  2555                           __ptext8:
  2556  000F76                     psect	text8
  2557                           	file	"Prob1.c"
  2558                           	line	103
  2559                           	global	__size_of_ModeBlink
  2560                           	__size_of_ModeBlink	equ	__end_of_ModeBlink-_ModeBlink
  2561  0000                     	
  2562                           _ModeBlink:
  2563  000F76                     ;incstack = 0
  2564                           	opt	stack 23
  2565                           	line	105
  2566                           	
  2567                           l1617:
  2568  000F76                     ;Prob1.c: 105:     ClearBuffer();
  2569                           	call	_ClearBuffer	;wreg free
  2570  000F76  EC9F  F008         	line	107
  2571                           	
  2572                           l1619:
  2573  000F7A                     ;Prob1.c: 107:     TRISDbits.TRISD0 = 0;
  2574                           	bcf	((c:3989)),c,0	;volatile
  2575  000F7A  9095               	line	108
  2576                           	
  2577                           l1621:
  2578  000F7C                     ;Prob1.c: 108:     TRISDbits.TRISD1 = 0;
  2579                           	bcf	((c:3989)),c,1	;volatile
  2580  000F7C  9295               	line	109
  2581                           	
  2582                           l1623:
  2583  000F7E                     ;Prob1.c: 109:     TRISDbits.TRISD2 = 0;
  2584                           	bcf	((c:3989)),c,2	;volatile
  2585  000F7E  9495               	line	110
  2586                           	
  2587                           l1625:
  2588  000F80                     ;Prob1.c: 110:     TRISDbits.TRISD3 = 0;
  2589                           	bcf	((c:3989)),c,3	;volatile
  2590  000F80  9695               	line	112
  2591                           	
  2592                           l1627:
  2593  000F82                     ;Prob1.c: 112:     T1CON = 0x01;
  2594                           	movlw	low(01h)
  2595  000F82  0E01               	movwf	((c:4045)),c	;volatile
  2596  000F84  6ECD               	line	113
  2597                           	
  2598                           l1629:
  2599  000F86                     ;Prob1.c: 113:     TMR1H = TMR0L = 0;
  2600                           	movlw	low(0)
  2601  000F86  0E00               	movwf	((c:4054)),c	;volatile
  2602  000F88  6ED6               	movff	(c:4054),(c:4047)	;volatile
  2603  000F8A  CFD6 FFCF          	line	114
  2604                           	
  2605                           l1631:
  2606  000F8E                     ;Prob1.c: 114:     PIE1bits.TMR1IE = 1;
  2607                           	bsf	((c:3997)),c,0	;volatile
  2608  000F8E  809D               	line	115
  2609                           	
  2610                           l1633:
  2611  000F90                     ;Prob1.c: 115:     IPR1bits.TMR1IP = 1;
  2612                           	bsf	((c:3999)),c,0	;volatile
  2613  000F90  809F               	line	116
  2614                           	
  2615                           l1635:
  2616  000F92                     ;Prob1.c: 116:     PIR1bits.TMR1IF = 0;
  2617                           	bcf	((c:3998)),c,0	;volatile
  2618  000F92  909E               	line	117
  2619                           	
  2620                           l1637:
  2621  000F94                     ;Prob1.c: 117:     count = 0;
  2622                           	movlw	high(0)
  2623  000F94  0E00               	movwf	((c:_count+1)),c
  2624  000F96  6E55               	movlw	low(0)
  2625  000F98  0E00               	movwf	((c:_count)),c
  2626  000F9A  6E54               	line	119
  2627                           	
  2628                           l1639:
  2629  000F9C                     ;Prob1.c: 119:     if(num_led>=1)
  2630                           	movlb	0	; () banked
  2631  000F9C  0100               	btfsc	((_num_led+1))&0ffh,7
  2632  000F9E  BFBD               	goto	u1171
  2633  000FA0  EFDA  F007         	movf	((_num_led+1))&0ffh,w
  2634  000FA4  51BD               	bnz	u1170
  2635  000FA6  E108               	decf	((_num_led))&0ffh,w
  2636  000FA8  05BC               	btfss	status,0
  2637  000FAA  A0D8               	goto	u1171
  2638  000FAC  EFDA  F007         	goto	u1170
  2639  000FB0  EFDC  F007         
  2640                           u1171:
  2641  000FB4                     	goto	l1643
  2642  000FB4  EFDF  F007         u1170:
  2643  000FB8                     	line	120
  2644                           	
  2645                           l1641:; BSR set to: 0
  2646  000FB8                     
  2647                           ;Prob1.c: 120:         LATDbits.LATD0 = 1;
  2648                           	bsf	((c:3980)),c,0	;volatile
  2649  000FB8  808C               	goto	l1643
  2650  000FBA  EFDF  F007         	
  2651                           l102:; BSR set to: 0
  2652  000FBE                     
  2653                           	line	121
  2654                           	
  2655                           l1643:; BSR set to: 0
  2656  000FBE                     
  2657                           ;Prob1.c: 121:     if(num_led>=2)
  2658                           	btfsc	((_num_led+1))&0ffh,7
  2659  000FBE  BFBD               	goto	u1181
  2660  000FC0  EFEB  F007         	movf	((_num_led+1))&0ffh,w
  2661  000FC4  51BD               	bnz	u1180
  2662  000FC6  E109               	movlw	2
  2663  000FC8  0E02               	subwf	 ((_num_led))&0ffh,w
  2664  000FCA  5DBC               	btfss	status,0
  2665  000FCC  A0D8               	goto	u1181
  2666  000FCE  EFEB  F007         	goto	u1180
  2667  000FD2  EFED  F007         
  2668                           u1181:
  2669  000FD6                     	goto	l1647
  2670  000FD6  EFF0  F007         u1180:
  2671  000FDA                     	line	122
  2672                           	
  2673                           l1645:; BSR set to: 0
  2674  000FDA                     
  2675                           ;Prob1.c: 122:         LATDbits.LATD1 = 1;
  2676                           	bsf	((c:3980)),c,1	;volatile
  2677  000FDA  828C               	goto	l1647
  2678  000FDC  EFF0  F007         	
  2679                           l103:; BSR set to: 0
  2680  000FE0                     
  2681                           	line	123
  2682                           	
  2683                           l1647:; BSR set to: 0
  2684  000FE0                     
  2685                           ;Prob1.c: 123:     if(num_led>=3)
  2686                           	btfsc	((_num_led+1))&0ffh,7
  2687  000FE0  BFBD               	goto	u1191
  2688  000FE2  EFFC  F007         	movf	((_num_led+1))&0ffh,w
  2689  000FE6  51BD               	bnz	u1190
  2690  000FE8  E109               	movlw	3
  2691  000FEA  0E03               	subwf	 ((_num_led))&0ffh,w
  2692  000FEC  5DBC               	btfss	status,0
  2693  000FEE  A0D8               	goto	u1191
  2694  000FF0  EFFC  F007         	goto	u1190
  2695  000FF4  EFFE  F007         
  2696                           u1191:
  2697  000FF8                     	goto	l1651
  2698  000FF8  EF01  F008         u1190:
  2699  000FFC                     	line	124
  2700                           	
  2701                           l1649:; BSR set to: 0
  2702  000FFC                     
  2703                           ;Prob1.c: 124:         LATDbits.LATD2 = 1;
  2704                           	bsf	((c:3980)),c,2	;volatile
  2705  000FFC  848C               	goto	l1651
  2706  000FFE  EF01  F008         	
  2707                           l104:; BSR set to: 0
  2708  001002                     
  2709                           	line	125
  2710                           	
  2711                           l1651:; BSR set to: 0
  2712  001002                     
  2713                           ;Prob1.c: 125:     if(num_led>=4)
  2714                           	btfsc	((_num_led+1))&0ffh,7
  2715  001002  BFBD               	goto	u1201
  2716  001004  EF0D  F008         	movf	((_num_led+1))&0ffh,w
  2717  001008  51BD               	bnz	u1200
  2718  00100A  E109               	movlw	4
  2719  00100C  0E04               	subwf	 ((_num_led))&0ffh,w
  2720  00100E  5DBC               	btfss	status,0
  2721  001010  A0D8               	goto	u1201
  2722  001012  EF0D  F008         	goto	u1200
  2723  001016  EF0F  F008         
  2724                           u1201:
  2725  00101A                     	goto	l106
  2726  00101A  EF12  F008         u1200:
  2727  00101E                     	line	126
  2728                           	
  2729                           l1653:; BSR set to: 0
  2730  00101E                     
  2731                           ;Prob1.c: 126:         LATDbits.LATD3 = 1;
  2732                           	bsf	((c:3980)),c,3	;volatile
  2733  00101E  868C               	goto	l106
  2734  001020  EF12  F008         	
  2735                           l105:; BSR set to: 0
  2736  001024                     
  2737                           	line	128
  2738                           	
  2739                           l106:; BSR set to: 0
  2740  001024                     
  2741                           	return	;funcret
  2742  001024  0012               	opt stack 0
  2743                           GLOBAL	__end_of_ModeBlink
  2744                           	__end_of_ModeBlink:
  2745  001026                     	signat	_ModeBlink,89
  2746                           	global	_ClearBuffer
  2747                           
  2748 ;; *************** function _ClearBuffer *****************
  2749 ;; Defined at:
  2750 ;;		line 244 in file "Prob1.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  i               2    0[BANK0 ] int 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2764 ;;      Params:         0       0       0       0       0       0       0
  2765 ;;      Locals:         0       2       0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0
  2767 ;;      Totals:         0       2       0       0       0       0       0
  2768 ;;Total ram usage:        2 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    6
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_ModeBreath
  2775 ;;		_ModeBlink
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           psect	text9,class=CODE,space=0,reloc=2,group=0
  2780                           	line	244
  2781                           global __ptext9
  2782                           __ptext9:
  2783  00113E                     psect	text9
  2784                           	file	"Prob1.c"
  2785                           	line	244
  2786                           	global	__size_of_ClearBuffer
  2787                           	__size_of_ClearBuffer	equ	__end_of_ClearBuffer-_ClearBuffer
  2788  0000                     	
  2789                           _ClearBuffer:; BSR set to: 0
  2790  00113E                     
  2791                           ;incstack = 0
  2792                           	opt	stack 23
  2793                           	line	245
  2794                           	
  2795                           l1401:
  2796  00113E                     ;Prob1.c: 245:     for(int i = 0; i < 10 ; i++)
  2797                           	movlw	high(0)
  2798  00113E  0E00               	movlb	0	; () banked
  2799  001140  0100               	movwf	((ClearBuffer@i+1))&0ffh
  2800  001142  6FBF               	movlw	low(0)
  2801  001144  0E00               	movwf	((ClearBuffer@i))&0ffh
  2802  001146  6FBE               	
  2803                           l1403:; BSR set to: 0
  2804  001148                     
  2805                           	btfsc	((ClearBuffer@i+1))&0ffh,7
  2806  001148  BFBF               	goto	u841
  2807  00114A  EFB0  F008         	movf	((ClearBuffer@i+1))&0ffh,w
  2808  00114E  51BF               	bnz	u840
  2809  001150  E109               	movlw	10
  2810  001152  0E0A               	subwf	 ((ClearBuffer@i))&0ffh,w
  2811  001154  5DBE               	btfss	status,0
  2812  001156  A0D8               	goto	u841
  2813  001158  EFB0  F008         	goto	u840
  2814  00115C  EFB2  F008         
  2815                           u841:
  2816  001160                     	goto	l1407
  2817  001160  EFB6  F008         u840:
  2818  001164                     	goto	l1413
  2819  001164  EFD0  F008         	
  2820                           l1405:; BSR set to: 0
  2821  001168                     
  2822                           	goto	l1413
  2823  001168  EFD0  F008         	
  2824                           l149:; BSR set to: 0
  2825  00116C                     
  2826                           	line	246
  2827                           	
  2828                           l1407:; BSR set to: 0
  2829  00116C                     
  2830                           ;Prob1.c: 246:         mystring[i] = '\0';
  2831                           	movlw	low(_mystring)
  2832  00116C  0ED1               	addwf	((ClearBuffer@i))&0ffh,w
  2833  00116E  25BE               	movwf	c:fsr2l
  2834  001170  6ED9               	movlw	high(_mystring)
  2835  001172  0E00               	addwfc	((ClearBuffer@i+1))&0ffh,w
  2836  001174  21BF               	movwf	1+c:fsr2l
  2837  001176  6EDA               	movlw	low(0)
  2838  001178  0E00               	movwf	indf2
  2839  00117A  6EDF               	
  2840                           l1409:; BSR set to: 0
  2841  00117C                     
  2842                           	infsnz	((ClearBuffer@i))&0ffh
  2843  00117C  4BBE               	incf	((ClearBuffer@i+1))&0ffh
  2844  00117E  2BBF               	
  2845                           l1411:; BSR set to: 0
  2846  001180                     
  2847                           	btfsc	((ClearBuffer@i+1))&0ffh,7
  2848  001180  BFBF               	goto	u851
  2849  001182  EFCC  F008         	movf	((ClearBuffer@i+1))&0ffh,w
  2850  001186  51BF               	bnz	u850
  2851  001188  E109               	movlw	10
  2852  00118A  0E0A               	subwf	 ((ClearBuffer@i))&0ffh,w
  2853  00118C  5DBE               	btfss	status,0
  2854  00118E  A0D8               	goto	u851
  2855  001190  EFCC  F008         	goto	u850
  2856  001194  EFCE  F008         
  2857                           u851:
  2858  001198                     	goto	l1407
  2859  001198  EFB6  F008         u850:
  2860  00119C                     	goto	l1413
  2861  00119C  EFD0  F008         	
  2862                           l150:; BSR set to: 0
  2863  0011A0                     
  2864                           	line	247
  2865                           	
  2866                           l1413:; BSR set to: 0
  2867  0011A0                     
  2868                           ;Prob1.c: 247:     lenStr = 0;
  2869                           	movlw	high(0)
  2870  0011A0  0E00               	movwf	((c:_lenStr+1)),c
  2871  0011A2  6E57               	movlw	low(0)
  2872  0011A4  0E00               	movwf	((c:_lenStr)),c
  2873  0011A6  6E56               	line	248
  2874                           	
  2875                           l151:; BSR set to: 0
  2876  0011A8                     
  2877                           	return	;funcret
  2878  0011A8  0012               	opt stack 0
  2879                           GLOBAL	__end_of_ClearBuffer
  2880                           	__end_of_ClearBuffer:
  2881  0011AA                     	signat	_ClearBuffer,89
  2882                           	global	_INTERRUPT_Initialize
  2883                           
  2884 ;; *************** function _INTERRUPT_Initialize *****************
  2885 ;; Defined at:
  2886 ;;		line 192 in file "Prob1.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		None
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2900 ;;      Params:         0       0       0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    6
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           psect	text10,class=CODE,space=0,reloc=2,group=0
  2914                           	line	192
  2915                           global __ptext10
  2916                           __ptext10:
  2917  00154E                     psect	text10
  2918                           	file	"Prob1.c"
  2919                           	line	192
  2920                           	global	__size_of_INTERRUPT_Initialize
  2921                           	__size_of_INTERRUPT_Initialize	equ	__end_of_INTERRUPT_Initialize-_INTERRUPT_Initialize

  2922  0000                     	
  2923                           _INTERRUPT_Initialize:; BSR set to: 0
  2924  00154E                     
  2925                           ;incstack = 0
  2926                           	opt	stack 24
  2927                           	line	194
  2928                           	
  2929                           l1655:
  2930  00154E                     ;Prob1.c: 194:     RCONbits.IPEN = 1;
  2931                           	bsf	((c:4048)),c,7	;volatile
  2932  00154E  8ED0               	line	195
  2933                           ;Prob1.c: 195:     INTCONbits.GIEH = 1;
  2934                           	bsf	((c:4082)),c,7	;volatile
  2935  001550  8EF2               	line	196
  2936                           ;Prob1.c: 196:     INTCONbits.GIEL = 1;
  2937                           	bsf	((c:4082)),c,6	;volatile
  2938  001552  8CF2               	line	197
  2939                           	
  2940                           l131:
  2941  001554                     	return	;funcret
  2942  001554  0012               	opt stack 0
  2943                           GLOBAL	__end_of_INTERRUPT_Initialize
  2944                           	__end_of_INTERRUPT_Initialize:
  2945  001556                     	signat	_INTERRUPT_Initialize,89
  2946                           	global	_Lo_ISR
  2947                           
  2948 ;; *************** function _Lo_ISR *****************
  2949 ;; Defined at:
  2950 ;;		line 265 in file "Prob1.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  temp            4   65[COMRAM] float 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2964 ;;      Params:         0       0       0       0       0       0       0
  2965 ;;      Locals:         6       0       0       0       0       0       0
  2966 ;;      Temps:         12       0       0       0       0       0       0
  2967 ;;      Totals:        18       0       0       0       0       0       0
  2968 ;;Total ram usage:       18 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:    5
  2971 ;; This function calls:
  2972 ;;		_MyusartRead
  2973 ;;		___lwdiv
  2974 ;;		___wmul
  2975 ;;		___xxtofl
  2976 ;;		i1_strstr
  2977 ;; This function is called by:
  2978 ;;		Interrupt level 1
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           psect	intcodelo,class=CODE,space=0,reloc=2
  2982                           global __pintcodelo
  2983                           __pintcodelo:
  2984  000018                     psect	intcodelo
  2985                           	file	"Prob1.c"
  2986                           	line	265
  2987                           	global	__size_of_Lo_ISR
  2988                           	__size_of_Lo_ISR	equ	__end_of_Lo_ISR-_Lo_ISR
  2989  0000                     	
  2990                           _Lo_ISR:
  2991  000018                     ;incstack = 0
  2992                           	opt	stack 23
  2993                           	bsf int$flags,0,c ;set compiler interrupt flag (level 1)
  2994  000018  805A               	movff	status+0,??_Lo_ISR+1
  2995  00001A  CFD8 F037          	movff	wreg+0,??_Lo_ISR+2
  2996  00001E  CFE8 F038          	movff	bsr+0,??_Lo_ISR+3
  2997  000022  CFE0 F039          	movff	fsr2l+0,??_Lo_ISR+4
  2998  000026  CFD9 F03A          	movff	fsr2h+0,??_Lo_ISR+5
  2999  00002A  CFDA F03B          	movff	prodl+0,??_Lo_ISR+6
  3000  00002E  CFF3 F03C          	movff	prodh+0,??_Lo_ISR+7
  3001  000032  CFF4 F03D          	movff	tblptrl+0,??_Lo_ISR+8
  3002  000036  CFF6 F03E          	movff	tblptrh+0,??_Lo_ISR+9
  3003  00003A  CFF7 F03F          	movff	tblptru+0,??_Lo_ISR+10
  3004  00003E  CFF8 F040          	movff	tablat+0,??_Lo_ISR+11
  3005  000042  CFF5 F041          	line	267
  3006                           	
  3007                           i1l1873:
  3008  000046                     ;Prob1.c: 267:     if(RCIF)
  3009                           	btfss	c:(31989/8),(31989)&7	;volatile
  3010  000046  AA9E               	goto	i1u156_21
  3011  000048  EF28  F000         	goto	i1u156_20
  3012  00004C  EF2A  F000         i1u156_21:
  3013  000050                     	goto	i1l1881
  3014  000050  EF3A  F000         i1u156_20:
  3015  000054                     	line	269
  3016                           	
  3017                           i1l1875:
  3018  000054                     ;Prob1.c: 268:     {;Prob1.c: 269:         if(RCSTAbits.OERR)
  3019                           	btfss	((c:4011)),c,1	;volatile
  3020  000054  A2AB               	goto	i1u157_21
  3021  000056  EF2F  F000         	goto	i1u157_20
  3022  00005A  EF31  F000         i1u157_21:
  3023  00005E                     	goto	i1l1879
  3024  00005E  EF36  F000         i1u157_20:
  3025  000062                     	line	271
  3026                           	
  3027                           i1l1877:
  3028  000062                     ;Prob1.c: 270:         {;Prob1.c: 271:             CREN = 0;
  3029                           	bcf	c:(32092/8),(32092)&7	;volatile
  3030  000062  98AB               	line	272
  3031                           ;Prob1.c: 272:             __nop();
  3032                           	opt	asmopt_push
  3033                           	opt	asmopt_off
  3034                           	nop
  3035  000064  F000               	opt	asmopt_pop
  3036                           	line	273
  3037                           ;Prob1.c: 273:             CREN = 1;
  3038                           	bsf	c:(32092/8),(32092)&7	;volatile
  3039  000066  88AB               	goto	i1l1879
  3040  000068  EF36  F000         	line	274
  3041                           ;Prob1.c: 274:         }
  3042                           	
  3043                           i1l160:
  3044  00006C                     	line	276
  3045                           	
  3046                           i1l1879:
  3047  00006C                     ;Prob1.c: 276:         MyusartRead();
  3048                           	call	_MyusartRead	;wreg free
  3049  00006C  EC0E  F00A         	goto	i1l1881
  3050  000070  EF3A  F000         	line	277
  3051                           ;Prob1.c: 277:     }
  3052                           	
  3053                           i1l159:
  3054  000074                     	line	278
  3055                           	
  3056                           i1l1881:
  3057  000074                     ;Prob1.c: 278:     if(TMR1IF)
  3058                           	btfss	c:(31984/8),(31984)&7	;volatile
  3059  000074  A09E               	goto	i1u158_21
  3060  000076  EF3F  F000         	goto	i1u158_20
  3061  00007A  EF41  F000         i1u158_21:
  3062  00007E                     	goto	i1l163
  3063  00007E  EFE5  F000         i1u158_20:
  3064  000082                     	line	280
  3065                           	
  3066                           i1l1883:
  3067  000082                     ;Prob1.c: 279:     {;Prob1.c: 280:         TMR1IF = 0;
  3068                           	bcf	c:(31984/8),(31984)&7	;volatile
  3069  000082  909E               	line	281
  3070                           	
  3071                           i1l1885:
  3072  000084                     ;Prob1.c: 281:         if(strstr(mystring, "q") != ((void*)0))
  3073                           		movlw	low(_mystring)
  3074  000084  0ED1               	movwf	((c:i1strstr@h)),c
  3075  000086  6E28               	movlw	high(_mystring)
  3076  000088  0E00               	movwf	((c:i1strstr@h+1)),c
  3077  00008A  6E29               
  3078                           		movlw	low(STR_4)
  3079  00008C  0E0E               	movwf	((c:i1strstr@n)),c
  3080  00008E  6E2A               	movlw	high(STR_4)
  3081  000090  0E06               	movwf	((c:i1strstr@n+1)),c
  3082  000092  6E2B               
  3083                           	call	i1_strstr	;wreg free
  3084  000094  EC77  F006         	movf	(0+?i1_strstr),c,w
  3085  000098  5028               iorwf	(1+?i1_strstr),c,w
  3086  00009A  1029               	btfsc	status,2
  3087  00009C  B4D8               	goto	i1u159_21
  3088  00009E  EF53  F000         	goto	i1u159_20
  3089  0000A2  EF55  F000         
  3090                           i1u159_21:
  3091  0000A6                     	goto	i1l1889
  3092  0000A6  EF5A  F000         i1u159_20:
  3093  0000AA                     	line	283
  3094                           	
  3095                           i1l1887:
  3096  0000AA                     ;Prob1.c: 282:         {;Prob1.c: 283:             TMR1ON = 0;
  3097                           	bcf	c:(32360/8),(32360)&7	;volatile
  3098  0000AA  90CD               	line	284
  3099                           ;Prob1.c: 284:             TMR2ON = 0;
  3100                           	bcf	c:(32338/8),(32338)&7	;volatile
  3101  0000AC  94CA               	line	285
  3102                           ;Prob1.c: 285:             LATCbits.LATC2 = 0;
  3103                           	bcf	((c:3979)),c,2	;volatile
  3104  0000AE  948B               	line	286
  3105                           ;Prob1.c: 286:             return;
  3106                           	goto	i1l163
  3107  0000B0  EFE5  F000         	line	287
  3108                           ;Prob1.c: 287:         }
  3109                           	
  3110                           i1l162:
  3111  0000B4                     	line	288
  3112                           	
  3113                           i1l1889:
  3114  0000B4                     ;Prob1.c: 288:         if(mode == 0 && CCPR1L < 16)
  3115                           	movf	((c:_mode)),c,w
  3116  0000B4  5052               iorwf	((c:_mode+1)),c,w
  3117  0000B6  1053               	btfss	status,2
  3118  0000B8  A4D8               	goto	i1u160_21
  3119  0000BA  EF61  F000         	goto	i1u160_20
  3120  0000BE  EF63  F000         
  3121                           i1u160_21:
  3122  0000C2                     	goto	i1l1897
  3123  0000C2  EF7E  F000         i1u160_20:
  3124  0000C6                     	
  3125                           i1l1891:
  3126  0000C6                     		movlw	010h-0
  3127  0000C6  0E10               	cpfslt	((c:4030)),c	;volatile
  3128  0000C8  60BE               	goto	i1u161_21
  3129  0000CA  EF69  F000         	goto	i1u161_20
  3130  0000CE  EF6B  F000         
  3131                           i1u161_21:
  3132  0000D2                     	goto	i1l1897
  3133  0000D2  EF7E  F000         i1u161_20:
  3134  0000D6                     	line	290
  3135                           	
  3136                           i1l1893:
  3137  0000D6                     ;Prob1.c: 289:         {;Prob1.c: 290:             CCPR1L = CCPR1L + 1;
  3138                           	incf	((c:4030)),c,w	;volatile
  3139  0000D6  28BE               	movwf	((c:4030)),c	;volatile
  3140  0000D8  6EBE               	line	291
  3141                           ;Prob1.c: 291:             if(CCPR1L == 16) mode = 1;
  3142                           		movlw	16
  3143  0000DA  0E10               	xorwf	((c:4030)),c,w	;volatile
  3144  0000DC  18BE               	btfss	status,2
  3145  0000DE  A4D8               	goto	i1u162_21
  3146  0000E0  EF74  F000         	goto	i1u162_20
  3147  0000E4  EF76  F000         
  3148                           i1u162_21:
  3149  0000E8                     	goto	i1l1907
  3150  0000E8  EFA3  F000         i1u162_20:
  3151  0000EC                     	
  3152                           i1l1895:
  3153  0000EC                     	movlw	high(01h)
  3154  0000EC  0E00               	movwf	((c:_mode+1)),c
  3155  0000EE  6E53               	movlw	low(01h)
  3156  0000F0  0E01               	movwf	((c:_mode)),c
  3157  0000F2  6E52               	goto	i1l1907
  3158  0000F4  EFA3  F000         	
  3159                           i1l165:
  3160  0000F8                     	line	292
  3161                           ;Prob1.c: 292:         }
  3162                           	goto	i1l1907
  3163  0000F8  EFA3  F000         	line	293
  3164                           ;Prob1.c: 293:         else if(mode == 1 && CCPR1L > 0)
  3165                           	
  3166                           i1l164:
  3167  0000FC                     	
  3168                           i1l1897:
  3169  0000FC                     		decf	((c:_mode)),c,w
  3170  0000FC  0452               iorwf	((c:_mode+1)),c,w
  3171  0000FE  1053               	btfss	status,2
  3172  000100  A4D8               	goto	i1u163_21
  3173  000102  EF85  F000         	goto	i1u163_20
  3174  000106  EF87  F000         
  3175                           i1u163_21:
  3176  00010A                     	goto	i1l1907
  3177  00010A  EFA3  F000         i1u163_20:
  3178  00010E                     	
  3179                           i1l1899:
  3180  00010E                     	movf	((c:4030)),c,w	;volatile
  3181  00010E  50BE               	btfsc	status,2
  3182  000110  B4D8               	goto	i1u164_21
  3183  000112  EF8D  F000         	goto	i1u164_20
  3184  000116  EF8F  F000         i1u164_21:
  3185  00011A                     	goto	i1l1907
  3186  00011A  EFA3  F000         i1u164_20:
  3187  00011E                     	line	295
  3188                           	
  3189                           i1l1901:
  3190  00011E                     ;Prob1.c: 294:         {;Prob1.c: 295:             CCPR1L = CCPR1L - 1;
  3191                           	decf	((c:4030)),c,w	;volatile
  3192  00011E  04BE               	movwf	((c:4030)),c	;volatile
  3193  000120  6EBE               	line	296
  3194                           	
  3195                           i1l1903:
  3196  000122                     ;Prob1.c: 296:             if( CCPR1L == 0) mode = 0;
  3197                           	movf	((c:4030)),c,w	;volatile
  3198  000122  50BE               	btfss	status,2
  3199  000124  A4D8               	goto	i1u165_21
  3200  000126  EF97  F000         	goto	i1u165_20
  3201  00012A  EF99  F000         i1u165_21:
  3202  00012E                     	goto	i1l1907
  3203  00012E  EFA3  F000         i1u165_20:
  3204  000132                     	
  3205                           i1l1905:
  3206  000132                     	movlw	high(0)
  3207  000132  0E00               	movwf	((c:_mode+1)),c
  3208  000134  6E53               	movlw	low(0)
  3209  000136  0E00               	movwf	((c:_mode)),c
  3210  000138  6E52               	goto	i1l1907
  3211  00013A  EFA3  F000         	
  3212                           i1l168:
  3213  00013E                     	goto	i1l1907
  3214  00013E  EFA3  F000         	line	297
  3215                           ;Prob1.c: 297:         }
  3216                           	
  3217                           i1l167:
  3218  000142                     	goto	i1l1907
  3219  000142  EFA3  F000         	
  3220                           i1l166:
  3221  000146                     	line	298
  3222                           	
  3223                           i1l1907:
  3224  000146                     ;Prob1.c: 298:         float temp = (ADRES*5/1023)*200/32;
  3225                           	movlw	high(03FFh)
  3226  000146  0E03               	movwf	((c:___lwdiv@divisor+1)),c
  3227  000148  6E24               	setf	((c:___lwdiv@divisor)),c
  3228  00014A  6823               	movff	(c:4035),(c:___wmul@multiplier)	;volatile
  3229  00014C  CFC3 F01B          	movff	(c:4035+1),(c:___wmul@multiplier+1)	;volatile
  3230  000150  CFC4 F01C          	movlw	high(05h)
  3231  000154  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  3232  000156  6E1E               	movlw	low(05h)
  3233  000158  0E05               	movwf	((c:___wmul@multiplicand)),c
  3234  00015A  6E1D               	call	___wmul	;wreg free
  3235  00015C  EC6D  F00A         	movff	0+?___wmul,(c:___lwdiv@dividend)
  3236  000160  C01B  F021         	movff	1+?___wmul,(c:___lwdiv@dividend+1)
  3237  000164  C01C  F022         	call	___lwdiv	;wreg free
  3238  000168  EC5B  F008         	movff	0+?___lwdiv,(c:_Lo_ISR$1501)
  3239  00016C  C021  F046         	movff	1+?___lwdiv,(c:_Lo_ISR$1501+1)
  3240  000170  C022  F047         	
  3241                           i1l1909:
  3242  000174                     ;Prob1.c: 298:         float temp = (ADRES*5/1023)*200/32;
  3243                           	movff	(c:_Lo_ISR$1501),(c:___wmul@multiplier)
  3244  000174  C046  F01B         	movff	(c:_Lo_ISR$1501+1),(c:___wmul@multiplier+1)
  3245  000178  C047  F01C         	movlw	high(0C8h)
  3246  00017C  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  3247  00017E  6E1E               	movlw	low(0C8h)
  3248  000180  0EC8               	movwf	((c:___wmul@multiplicand)),c
  3249  000182  6E1D               	call	___wmul	;wreg free
  3250  000184  EC6D  F00A         	movlw	05h
  3251  000188  0E05               	movwf	(??_Lo_ISR+0+0)&0ffh,c
  3252  00018A  6E36               i1u166_25:
  3253  00018C                     	bcf	status,0
  3254  00018C  90D8               	rrcf	(1+?___wmul),c
  3255  00018E  321C               	rrcf	(0+?___wmul),c
  3256  000190  321B               	decfsz	(??_Lo_ISR+0+0)&0ffh,c
  3257  000192  2E36               	goto	i1u166_25
  3258  000194  EFC6  F000         	movff	0+?___wmul,(c:___xxtofl@val)
  3259  000198  C01B  F028         	movff	1+?___wmul,(c:___xxtofl@val+1)
  3260  00019C  C01C  F029         	clrf	((c:___xxtofl@val+2)),c
  3261  0001A0  6A2A               	clrf	((c:___xxtofl@val+3)),c
  3262  0001A2  6A2B               
  3263                           	movlw	(0)&0ffh
  3264  0001A4  0E00               	
  3265                           	call	___xxtofl
  3266  0001A6  EC09  F003         	movff	0+?___xxtofl,(c:Lo_ISR@temp)
  3267  0001AA  C028  F042         	movff	1+?___xxtofl,(c:Lo_ISR@temp+1)
  3268  0001AE  C029  F043         	movff	2+?___xxtofl,(c:Lo_ISR@temp+2)
  3269  0001B2  C02A  F044         	movff	3+?___xxtofl,(c:Lo_ISR@temp+3)
  3270  0001B6  C02B  F045         	
  3271                           	line	299
  3272                           ;Prob1.c: 299:         TMR1 = 34285;
  3273                           	movlw	high(085EDh)
  3274  0001BA  0E85               	movwf	((c:4046+1)),c	;volatile
  3275  0001BC  6ECF               	movlw	low(085EDh)
  3276  0001BE  0EED               	movwf	((c:4046)),c	;volatile
  3277  0001C0  6ECE               	goto	i1l163
  3278  0001C2  EFE5  F000         	line	300
  3279                           ;Prob1.c: 300:     }
  3280                           	
  3281                           i1l161:
  3282  0001C6                     	goto	i1l163
  3283  0001C6  EFE5  F000         	line	303
  3284                           	
  3285                           i1l1911:
  3286  0001CA                     	line	304
  3287                           ;Prob1.c: 303:     return;
  3288                           	
  3289                           i1l163:
  3290  0001CA                     	movff	??_Lo_ISR+11,tablat+0
  3291  0001CA  C041  FFF5         	movff	??_Lo_ISR+10,tblptru+0
  3292  0001CE  C040  FFF8         	movff	??_Lo_ISR+9,tblptrh+0
  3293  0001D2  C03F  FFF7         	movff	??_Lo_ISR+8,tblptrl+0
  3294  0001D6  C03E  FFF6         	movff	??_Lo_ISR+7,prodh+0
  3295  0001DA  C03D  FFF4         	movff	??_Lo_ISR+6,prodl+0
  3296  0001DE  C03C  FFF3         	movff	??_Lo_ISR+5,fsr2h+0
  3297  0001E2  C03B  FFDA         	movff	??_Lo_ISR+4,fsr2l+0
  3298  0001E6  C03A  FFD9         	movff	??_Lo_ISR+3,bsr+0
  3299  0001EA  C039  FFE0         	movff	??_Lo_ISR+2,wreg+0
  3300  0001EE  C038  FFE8         	movff	??_Lo_ISR+1,status+0
  3301  0001F2  C037  FFD8         	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  3302  0001F6  905A               	retfie
  3303  0001F8  0010               	opt stack 0
  3304                           GLOBAL	__end_of_Lo_ISR
  3305                           	__end_of_Lo_ISR:
  3306  0001FA                     	signat	_Lo_ISR,89
  3307                           	global	i1_strstr
  3308                           
  3309 ;; *************** function i1_strstr *****************
  3310 ;; Defined at:
  3311 ;;		line 143 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  h               2   39[COMRAM] PTR const unsigned char 
  3314 ;;		 -> NULL(0), mystring(10), 
  3315 ;;  n               2   41[COMRAM] PTR const unsigned char 
  3316 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  strstr          2   43[COMRAM] unsigned int 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  2   39[COMRAM] PTR unsigned char 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3328 ;;      Params:         4       0       0       0       0       0       0
  3329 ;;      Locals:         2       0       0       0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0
  3331 ;;      Totals:         6       0       0       0       0       0       0
  3332 ;;Total ram usage:        6 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    4
  3335 ;; This function calls:
  3336 ;;		i1_strchr
  3337 ;;		i1_strlen
  3338 ;;		i1_strncmp
  3339 ;; This function is called by:
  3340 ;;		_Lo_ISR
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           psect	text12,class=CODE,space=0,reloc=2,group=0
  3344                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  3345                           	line	143
  3346                           global __ptext12
  3347                           __ptext12:
  3348  000CEE                     psect	text12
  3349                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  3350                           	line	143
  3351                           	global	__size_ofi1_strstr
  3352                           	__size_ofi1_strstr	equ	__end_ofi1_strstr-i1_strstr
  3353  0000                     	
  3354                           i1_strstr:
  3355  000CEE                     ;incstack = 0
  3356                           	opt	stack 23
  3357                           	line	146
  3358                           	
  3359                           i1l1783:
  3360  000CEE                     	movf	((c:i1strstr@n)),c,w
  3361  000CEE  502A               iorwf	((c:i1strstr@n+1)),c,w
  3362  000CF0  102B               	btfsc	status,2
  3363  000CF2  B4D8               	goto	i1u138_21
  3364  000CF4  EF7E  F006         	goto	i1u138_20
  3365  000CF8  EF80  F006         
  3366                           i1u138_21:
  3367  000CFC                     	goto	i1l1799
  3368  000CFC  EFDC  F006         i1u138_20:
  3369  000D00                     	line	147
  3370                           	
  3371                           i1l1785:
  3372  000D00                     		movff	(c:i1strstr@n),(c:i1strlen@s)
  3373  000D00  C02A  F01B         	movff	(c:i1strstr@n+1),(c:i1strlen@s+1)
  3374  000D04  C02B  F01C         
  3375                           	call	i1_strlen	;wreg free
  3376  000D08  ECB8  F009         	movff	0+?i1_strlen,(c:i1strstr@nl)
  3377  000D0C  C01B  F02C         	movff	1+?i1_strlen,(c:i1strstr@nl+1)
  3378  000D10  C01C  F02D         	line	148
  3379                           	goto	i1l1795
  3380  000D14  EFC1  F006         	
  3381                           i1l859:
  3382  000D18                     	line	149
  3383                           	
  3384                           i1l1787:
  3385  000D18                     		movff	(c:i1strstr@h),(c:i1strncmp@_l)
  3386  000D18  C028  F01B         	movff	(c:i1strstr@h+1),(c:i1strncmp@_l+1)
  3387  000D1C  C029  F01C         
  3388                           		movff	(c:i1strstr@n),(c:i1strncmp@_r)
  3389  000D20  C02A  F01D         	movff	(c:i1strstr@n+1),(c:i1strncmp@_r+1)
  3390  000D24  C02B  F01E         
  3391                           	movff	(c:i1strstr@nl),(c:i1strncmp@n)
  3392  000D28  C02C  F01F         	movff	(c:i1strstr@nl+1),(c:i1strncmp@n+1)
  3393  000D2C  C02D  F020         	call	i1_strncmp	;wreg free
  3394  000D30  EC0C  F005         	movf	(0+?i1_strncmp),c,w
  3395  000D34  501B               iorwf	(1+?i1_strncmp),c,w
  3396  000D36  101C               	btfss	status,2
  3397  000D38  A4D8               	goto	i1u139_21
  3398  000D3A  EFA1  F006         	goto	i1u139_20
  3399  000D3E  EFA3  F006         
  3400                           i1u139_21:
  3401  000D42                     	goto	i1l1793
  3402  000D42  EFAB  F006         i1u139_20:
  3403  000D46                     	line	150
  3404                           	
  3405                           i1l1789:
  3406  000D46                     		movff	(c:i1strstr@h),(c:?i1_strstr)
  3407  000D46  C028  F028         	movff	(c:i1strstr@h+1),(c:?i1_strstr+1)
  3408  000D4A  C029  F029         
  3409                           	goto	i1l861
  3410  000D4E  EFE2  F006         	
  3411                           i1l1791:
  3412  000D52                     	goto	i1l861
  3413  000D52  EFE2  F006         	
  3414                           i1l860:
  3415  000D56                     	line	151
  3416                           	
  3417                           i1l1793:
  3418  000D56                     	movlw	low(01h)
  3419  000D56  0E01               	addwf	((c:i1strstr@h)),c,w
  3420  000D58  2428               	movwf	((c:i1strchr@s)),c
  3421  000D5A  6E1B               	movlw	high(01h)
  3422  000D5C  0E00               	addwfc	((c:i1strstr@h+1)),c,w
  3423  000D5E  2029               	movwf	1+((c:i1strchr@s)),c
  3424  000D60  6E1C               	movff	(c:i1strstr@n),tblptrl
  3425  000D62  C02A  FFF6         	movff	(c:i1strstr@n+1),tblptrh
  3426  000D66  C02B  FFF7         	if	0	;tblptru may be non-zero
  3427  000D6A                     	clrf	tblptru
  3429  000D6A                     	if	0	;tblptru may be non-zero
  3430  000D6A                     	global __mediumconst
  3431                           movlw	low highword(__mediumconst)
  3434  000D6A                     	tblrd	*
  3435  000D6A  0008               	
  3436                           	movf	tablat,w
  3437  000D6C  50F5               
  3438                           	movwf	((c:i1strchr@c)),c
  3439  000D6E  6E1D               	clrf	((c:i1strchr@c+1)),c
  3440  000D70  6A1E               	call	i1_strchr	;wreg free
  3441  000D72  EC60  F009         	movff	0+?i1_strchr,(c:i1strstr@h)
  3442  000D76  C01B  F028         	movff	1+?i1_strchr,(c:i1strstr@h+1)
  3443  000D7A  C01C  F029         	goto	i1l1795
  3444  000D7E  EFC1  F006         	line	152
  3445                           	
  3446                           i1l858:
  3447  000D82                     	line	148
  3448                           	
  3449                           i1l1795:
  3450  000D82                     	movf	((c:i1strstr@h)),c,w
  3451  000D82  5028               iorwf	((c:i1strstr@h+1)),c,w
  3452  000D84  1029               	btfsc	status,2
  3453  000D86  B4D8               	goto	i1u140_21
  3454  000D88  EFC8  F006         	goto	i1u140_20
  3455  000D8C  EFCA  F006         
  3456                           i1u140_21:
  3457  000D90                     	goto	i1l1799
  3458  000D90  EFDC  F006         i1u140_20:
  3459  000D94                     	
  3460                           i1l1797:
  3461  000D94                     	movff	(c:i1strstr@h),fsr2l
  3462  000D94  C028  FFD9         	movff	(c:i1strstr@h+1),fsr2h
  3463  000D98  C029  FFDA         	movf	indf2,w
  3464  000D9C  50DF               	btfss	status,2
  3465  000D9E  A4D8               	goto	i1u141_21
  3466  000DA0  EFD4  F006         	goto	i1u141_20
  3467  000DA4  EFD6  F006         i1u141_21:
  3468  000DA8                     	goto	i1l1787
  3469  000DA8  EF8C  F006         i1u141_20:
  3470  000DAC                     	goto	i1l1799
  3471  000DAC  EFDC  F006         	
  3472                           i1l863:
  3473  000DB0                     	goto	i1l1799
  3474  000DB0  EFDC  F006         	
  3475                           i1l864:
  3476  000DB4                     	goto	i1l1799
  3477  000DB4  EFDC  F006         	line	153
  3478                           	
  3479                           i1l857:
  3480  000DB8                     	line	154
  3481                           	
  3482                           i1l1799:
  3483  000DB8                     		movlw	low(0)
  3484  000DB8  0E00               	movwf	((c:?i1_strstr)),c
  3485  000DBA  6E28               	movlw	high(0)
  3486  000DBC  0E00               	movwf	((c:?i1_strstr+1)),c
  3487  000DBE  6E29               
  3488                           	goto	i1l861
  3489  000DC0  EFE2  F006         	
  3490                           i1l1801:
  3491  000DC4                     	line	171
  3492                           	
  3493                           i1l861:
  3494  000DC4                     	return	;funcret
  3495  000DC4  0012               	opt stack 0
  3496                           GLOBAL	__end_ofi1_strstr
  3497                           	__end_ofi1_strstr:
  3498  000DC6                     	signat	i1_strstr,90
  3499                           	global	i1_strncmp
  3500                           
  3501 ;; *************** function i1_strncmp *****************
  3502 ;; Defined at:
  3503 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  _l              2   26[COMRAM] PTR const unsigned char 
  3506 ;;		 -> NULL(0), mystring(10), 
  3507 ;;  _r              2   28[COMRAM] PTR const unsigned char 
  3508 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  3509 ;;  n               2   30[COMRAM] unsigned int 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  strncmp         2   37[COMRAM] PTR const unsigned char 
  3512 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  3513 ;;  strncmp         2   35[COMRAM] PTR const unsigned char 
  3514 ;;		 -> NULL(0), mystring(10), 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  2   26[COMRAM] int 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3524 ;;      Params:         6       0       0       0       0       0       0
  3525 ;;      Locals:         4       0       0       0       0       0       0
  3526 ;;      Temps:          3       0       0       0       0       0       0
  3527 ;;      Totals:        13       0       0       0       0       0       0
  3528 ;;Total ram usage:       13 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    3
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		i1_strstr
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           psect	text13,class=CODE,space=0,reloc=2,group=0
  3538                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  3539                           	line	3
  3540                           global __ptext13
  3541                           __ptext13:
  3542  000A18                     psect	text13
  3543                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  3544                           	line	3
  3545                           	global	__size_ofi1_strncmp
  3546                           	__size_ofi1_strncmp	equ	__end_ofi1_strncmp-i1_strncmp
  3547  0000                     	
  3548                           i1_strncmp:
  3549  000A18                     ;incstack = 0
  3550                           	opt	stack 23
  3551                           	line	5
  3552                           	
  3553                           i1l1573:
  3554  000A18                     		movff	(c:i1strncmp@_l),(c:i1strncmp@l)
  3555  000A18  C01B  F024         	movff	(c:i1strncmp@_l+1),(c:i1strncmp@l+1)
  3556  000A1C  C01C  F025         
  3557                           		movff	(c:i1strncmp@_r),(c:i1strncmp@r)
  3558  000A20  C01D  F026         	movff	(c:i1strncmp@_r+1),(c:i1strncmp@r+1)
  3559  000A24  C01E  F027         
  3560                           	line	6
  3561                           	decf	((c:i1strncmp@n)),c
  3562  000A28  061F               	btfss	status,0
  3563  000A2A  A0D8               	decf	((c:i1strncmp@n+1)),c
  3564  000A2C  0620               		incf	((c:i1strncmp@n)),c,w
  3565  000A2E  281F               	bnz	i1u107_21
  3566  000A30  E106               	incf	((c:i1strncmp@n+1)),c,w
  3567  000A32  2820               	btfss	status,2
  3568  000A34  A4D8               	goto	i1u107_21
  3569  000A36  EF1F  F005         	goto	i1u107_20
  3570  000A3A  EF21  F005         
  3571                           i1u107_21:
  3572  000A3E                     	goto	i1l1581
  3573  000A3E  EF34  F005         i1u107_20:
  3574  000A42                     	
  3575                           i1l1575:
  3576  000A42                     	movlw	high(0)
  3577  000A42  0E00               	movwf	((c:?i1_strncmp+1)),c
  3578  000A44  6E1C               	movlw	low(0)
  3579  000A46  0E00               	movwf	((c:?i1_strncmp)),c
  3580  000A48  6E1B               	goto	i1l880
  3581  000A4A  EF89  F005         	
  3582                           i1l1577:
  3583  000A4E                     	goto	i1l880
  3584  000A4E  EF89  F005         	
  3585                           i1l879:
  3586  000A52                     	line	7
  3587                           	goto	i1l1581
  3588  000A52  EF34  F005         	
  3589                           i1l882:
  3590  000A56                     	
  3591                           i1l1579:
  3592  000A56                     	infsnz	((c:i1strncmp@l)),c
  3593  000A56  4A24               	incf	((c:i1strncmp@l+1)),c
  3594  000A58  2A25               	infsnz	((c:i1strncmp@r)),c
  3595  000A5A  4A26               	incf	((c:i1strncmp@r+1)),c
  3596  000A5C  2A27               	decf	((c:i1strncmp@n)),c
  3597  000A5E  061F               	btfss	status,0
  3598  000A60  A0D8               	decf	((c:i1strncmp@n+1)),c
  3599  000A62  0620               	goto	i1l1581
  3600  000A64  EF34  F005         	
  3601                           i1l881:
  3602  000A68                     	
  3603                           i1l1581:
  3604  000A68                     	movff	(c:i1strncmp@l),fsr2l
  3605  000A68  C024  FFD9         	movff	(c:i1strncmp@l+1),fsr2h
  3606  000A6C  C025  FFDA         	movf	indf2,w
  3607  000A70  50DF               	btfsc	status,2
  3608  000A72  B4D8               	goto	i1u108_21
  3609  000A74  EF3E  F005         	goto	i1u108_20
  3610  000A78  EF40  F005         i1u108_21:
  3611  000A7C                     	goto	i1l1589
  3612  000A7C  EF6F  F005         i1u108_20:
  3613  000A80                     	
  3614                           i1l1583:
  3615  000A80                     	movff	(c:i1strncmp@r),tblptrl
  3616  000A80  C026  FFF6         	movff	(c:i1strncmp@r+1),tblptrh
  3617  000A84  C027  FFF7         	if	0	;tblptru may be non-zero
  3618  000A88                     	clrf	tblptru
  3620  000A88                     	if	0	;tblptru may be non-zero
  3621  000A88                     	global __mediumconst
  3622                           movlw	low highword(__mediumconst)
  3625  000A88                     	tblrd	*
  3626  000A88  0008               	
  3627                           	movf	tablat,w
  3628  000A8A  50F5               	iorlw	0
  3629  000A8C  0900               	btfsc	status,2
  3630  000A8E  B4D8               	goto	i1u109_21
  3631  000A90  EF4C  F005         	goto	i1u109_20
  3632  000A94  EF4E  F005         i1u109_21:
  3633  000A98                     	goto	i1l1589
  3634  000A98  EF6F  F005         i1u109_20:
  3635  000A9C                     	
  3636                           i1l1585:
  3637  000A9C                     	movf	((c:i1strncmp@n)),c,w
  3638  000A9C  501F               iorwf	((c:i1strncmp@n+1)),c,w
  3639  000A9E  1020               	btfsc	status,2
  3640  000AA0  B4D8               	goto	i1u110_21
  3641  000AA2  EF55  F005         	goto	i1u110_20
  3642  000AA6  EF57  F005         
  3643                           i1u110_21:
  3644  000AAA                     	goto	i1l1589
  3645  000AAA  EF6F  F005         i1u110_20:
  3646  000AAE                     	
  3647                           i1l1587:
  3648  000AAE                     	movff	(c:i1strncmp@l),fsr2l
  3649  000AAE  C024  FFD9         	movff	(c:i1strncmp@l+1),fsr2h
  3650  000AB2  C025  FFDA         	movf	indf2,w
  3651  000AB6  50DF               	movwf	(??i1_strncmp+0+0)&0ffh,c
  3652  000AB8  6E21               	movff	(c:i1strncmp@r),tblptrl
  3653  000ABA  C026  FFF6         	movff	(c:i1strncmp@r+1),tblptrh
  3654  000ABE  C027  FFF7         	if	0	;tblptru may be non-zero
  3655  000AC2                     	clrf	tblptru
  3657  000AC2                     	if	0	;tblptru may be non-zero
  3658  000AC2                     	global __mediumconst
  3659                           movlw	low highword(__mediumconst)
  3662  000AC2                     	tblrd	*
  3663  000AC2  0008               	
  3664                           	movf	tablat,w
  3665  000AC4  50F5               	xorwf	((??i1_strncmp+0+0)),c,w
  3666  000AC6  1821               
  3667                           	btfsc	status,2
  3668  000AC8  B4D8               	goto	i1u111_21
  3669  000ACA  EF69  F005         	goto	i1u111_20
  3670  000ACE  EF6B  F005         i1u111_21:
  3671  000AD2                     	goto	i1l1579
  3672  000AD2  EF2B  F005         i1u111_20:
  3673  000AD6                     	goto	i1l1589
  3674  000AD6  EF6F  F005         	
  3675                           i1l884:
  3676  000ADA                     	goto	i1l1589
  3677  000ADA  EF6F  F005         	
  3678                           i1l885:
  3679  000ADE                     	line	8
  3680                           	
  3681                           i1l1589:
  3682  000ADE                     	movff	(c:i1strncmp@r),tblptrl
  3683  000ADE  C026  FFF6         	movff	(c:i1strncmp@r+1),tblptrh
  3684  000AE2  C027  FFF7         	if	0	;tblptru may be non-zero
  3685  000AE6                     	clrf	tblptru
  3687  000AE6                     	if	0	;tblptru may be non-zero
  3688  000AE6                     	global __mediumconst
  3689                           movlw	low highword(__mediumconst)
  3692  000AE6                     	tblrd	*
  3693  000AE6  0008               	
  3694                           	movf	tablat,w
  3695  000AE8  50F5               	movwf	(??i1_strncmp+0+0)&0ffh,c
  3696  000AEA  6E21               	clrf	(??i1_strncmp+0+0+1)&0ffh,c
  3697  000AEC  6A22               
  3698                           	comf	(??i1_strncmp+0+0),c
  3699  000AEE  1E21               	comf	(??i1_strncmp+0+1),c
  3700  000AF0  1E22               	infsnz	(??i1_strncmp+0+0),c
  3701  000AF2  4A21               	incf	(??i1_strncmp+0+1),c
  3702  000AF4  2A22               	movff	(c:i1strncmp@l),fsr2l
  3703  000AF6  C024  FFD9         	movff	(c:i1strncmp@l+1),fsr2h
  3704  000AFA  C025  FFDA         	movf	indf2,w
  3705  000AFE  50DF               	movwf	(??i1_strncmp+2+0)&0ffh,c
  3706  000B00  6E23               	movf	((??i1_strncmp+2+0)),c,w
  3707  000B02  5023               	addwf	(??i1_strncmp+0+0),c,w
  3708  000B04  2421               	movwf	((c:?i1_strncmp)),c
  3709  000B06  6E1B               	movlw	0
  3710  000B08  0E00               	addwfc	(??i1_strncmp+0+1),c,w
  3711  000B0A  2022               	movwf	1+((c:?i1_strncmp)),c
  3712  000B0C  6E1C               	goto	i1l880
  3713  000B0E  EF89  F005         	
  3714                           i1l1591:
  3715  000B12                     	line	9
  3716                           	
  3717                           i1l880:
  3718  000B12                     	return	;funcret
  3719  000B12  0012               	opt stack 0
  3720                           GLOBAL	__end_ofi1_strncmp
  3721                           	__end_ofi1_strncmp:
  3722  000B14                     	signat	i1_strncmp,90
  3723                           	global	i1_strlen
  3724                           
  3725 ;; *************** function i1_strlen *****************
  3726 ;; Defined at:
  3727 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  s               2   26[COMRAM] PTR const unsigned char 
  3730 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  strlen          2   30[COMRAM] PTR const unsigned char 
  3733 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  2   26[COMRAM] unsigned int 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3743 ;;      Params:         2       0       0       0       0       0       0
  3744 ;;      Locals:         2       0       0       0       0       0       0
  3745 ;;      Temps:          2       0       0       0       0       0       0
  3746 ;;      Totals:         6       0       0       0       0       0       0
  3747 ;;Total ram usage:        6 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    3
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		i1_strstr
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           psect	text14,class=CODE,space=0,reloc=2,group=0
  3757                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  3758                           	line	12
  3759                           global __ptext14
  3760                           __ptext14:
  3761  001370                     psect	text14
  3762                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  3763                           	line	12
  3764                           	global	__size_ofi1_strlen
  3765                           	__size_ofi1_strlen	equ	__end_ofi1_strlen-i1_strlen
  3766  0000                     	
  3767                           i1_strlen:
  3768  001370                     ;incstack = 0
  3769                           	opt	stack 23
  3770                           	line	14
  3771                           	
  3772                           i1l1553:
  3773  001370                     		movff	(c:i1strlen@s),(c:i1strlen@a)
  3774  001370  C01B  F01F         	movff	(c:i1strlen@s+1),(c:i1strlen@a+1)
  3775  001374  C01C  F020         
  3776                           	line	16
  3777                           	goto	i1l1557
  3778  001378  EFC2  F009         	
  3779                           i1l874:
  3780  00137C                     	line	17
  3781                           	
  3782                           i1l1555:
  3783  00137C                     	infsnz	((c:i1strlen@s)),c
  3784  00137C  4A1B               	incf	((c:i1strlen@s+1)),c
  3785  00137E  2A1C               	goto	i1l1557
  3786  001380  EFC2  F009         	line	18
  3787                           	
  3788                           i1l873:
  3789  001384                     	line	16
  3790                           	
  3791                           i1l1557:
  3792  001384                     	movff	(c:i1strlen@s),tblptrl
  3793  001384  C01B  FFF6         	movff	(c:i1strlen@s+1),tblptrh
  3794  001388  C01C  FFF7         	if	0	;tblptru may be non-zero
  3795  00138C                     	clrf	tblptru
  3797  00138C                     	if	0	;tblptru may be non-zero
  3798  00138C                     	global __mediumconst
  3799                           movlw	low highword(__mediumconst)
  3802  00138C                     	tblrd	*
  3803  00138C  0008               	
  3804                           	movf	tablat,w
  3805  00138E  50F5               	iorlw	0
  3806  001390  0900               	btfss	status,2
  3807  001392  A4D8               	goto	i1u105_21
  3808  001394  EFCE  F009         	goto	i1u105_20
  3809  001398  EFD0  F009         i1u105_21:
  3810  00139C                     	goto	i1l1555
  3811  00139C  EFBE  F009         i1u105_20:
  3812  0013A0                     	goto	i1l1559
  3813  0013A0  EFD2  F009         	
  3814                           i1l875:
  3815  0013A4                     	line	25
  3816                           	
  3817                           i1l1559:
  3818  0013A4                     	movff	(c:i1strlen@a),??i1_strlen+0+0
  3819  0013A4  C01F  F01D         	movff	(c:i1strlen@a+1),??i1_strlen+0+0+1
  3820  0013A8  C020  F01E         	comf	(??i1_strlen+0+0),c
  3821  0013AC  1E1D               	comf	(??i1_strlen+0+1),c
  3822  0013AE  1E1E               	infsnz	(??i1_strlen+0+0),c
  3823  0013B0  4A1D               	incf	(??i1_strlen+0+1),c
  3824  0013B2  2A1E               	movf	((c:i1strlen@s)),c,w
  3825  0013B4  501B               	addwf	(??i1_strlen+0+0),c,w
  3826  0013B6  241D               	movwf	((c:?i1_strlen)),c
  3827  0013B8  6E1B               	movf	((c:i1strlen@s+1)),c,w
  3828  0013BA  501C               	addwfc	(??i1_strlen+0+1),c,w
  3829  0013BC  201E               	movwf	1+((c:?i1_strlen)),c
  3830  0013BE  6E1C               	goto	i1l876
  3831  0013C0  EFE2  F009         	
  3832                           i1l1561:
  3833  0013C4                     	line	26
  3834                           	
  3835                           i1l876:
  3836  0013C4                     	return	;funcret
  3837  0013C4  0012               	opt stack 0
  3838                           GLOBAL	__end_ofi1_strlen
  3839                           	__end_ofi1_strlen:
  3840  0013C6                     	signat	i1_strlen,90
  3841                           	global	i1_strchr
  3842                           
  3843 ;; *************** function i1_strchr *****************
  3844 ;; Defined at:
  3845 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  s               2   26[COMRAM] PTR const unsigned char 
  3848 ;;		 -> NULL(0), mystring(10), 
  3849 ;;  c               2   28[COMRAM] int 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  2   26[COMRAM] PTR unsigned char 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3861 ;;      Params:         4       0       0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0
  3863 ;;      Temps:          1       0       0       0       0       0       0
  3864 ;;      Totals:         5       0       0       0       0       0       0
  3865 ;;Total ram usage:        5 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    3
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		i1_strstr
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           psect	text15,class=CODE,space=0,reloc=2,group=0
  3875                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  3876                           	line	7
  3877                           global __ptext15
  3878                           __ptext15:
  3879  0012C0                     psect	text15
  3880                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  3881                           	line	7
  3882                           	global	__size_ofi1_strchr
  3883                           	__size_ofi1_strchr	equ	__end_ofi1_strchr-i1_strchr
  3884  0000                     	
  3885                           i1_strchr:
  3886  0012C0                     ;incstack = 0
  3887                           	opt	stack 23
  3888                           	line	13
  3889                           	
  3890                           i1l867:
  3891  0012C0                     	line	14
  3892                           	
  3893                           i1l1529:
  3894  0012C0                     	movff	(c:i1strchr@s),fsr2l
  3895  0012C0  C01B  FFD9         	movff	(c:i1strchr@s+1),fsr2h
  3896  0012C4  C01C  FFDA         	movf	((c:i1strchr@c)),c,w
  3897  0012C8  501D               xorwf	postinc2,w
  3898  0012CA  18DE               	btfss	status,2
  3899  0012CC  A4D8               	goto	i1u101_21
  3900  0012CE  EF6B  F009         	goto	i1u101_20
  3901  0012D2  EF6D  F009         
  3902                           i1u101_21:
  3903  0012D6                     	goto	i1l1535
  3904  0012D6  EF75  F009         i1u101_20:
  3905  0012DA                     	line	15
  3906                           	
  3907                           i1l1531:
  3908  0012DA                     		movff	(c:i1strchr@s),(c:?i1_strchr)
  3909  0012DA  C01B  F01B         	movff	(c:i1strchr@s+1),(c:?i1_strchr+1)
  3910  0012DE  C01C  F01C         
  3911                           	goto	i1l869
  3912  0012E2  EF8B  F009         	
  3913                           i1l1533:
  3914  0012E6                     	goto	i1l869
  3915  0012E6  EF8B  F009         	line	16
  3916                           	
  3917                           i1l868:
  3918  0012EA                     	line	17
  3919                           	
  3920                           i1l1535:
  3921  0012EA                     	movff	(c:i1strchr@s),fsr2l
  3922  0012EA  C01B  FFD9         	movff	(c:i1strchr@s+1),fsr2h
  3923  0012EE  C01C  FFDA         	infsnz	((c:i1strchr@s)),c
  3924  0012F2  4A1B               	incf	((c:i1strchr@s+1)),c
  3925  0012F4  2A1C               	movf	indf2,w
  3926  0012F6  50DF               	btfss	status,2
  3927  0012F8  A4D8               	goto	i1u102_21
  3928  0012FA  EF81  F009         	goto	i1u102_20
  3929  0012FE  EF83  F009         i1u102_21:
  3930  001302                     	goto	i1l867
  3931  001302  EF60  F009         i1u102_20:
  3932  001306                     	goto	i1l1537
  3933  001306  EF85  F009         	
  3934                           i1l870:
  3935  00130A                     	line	18
  3936                           	
  3937                           i1l1537:
  3938  00130A                     		movlw	low(0)
  3939  00130A  0E00               	movwf	((c:?i1_strchr)),c
  3940  00130C  6E1B               	movlw	high(0)
  3941  00130E  0E00               	movwf	((c:?i1_strchr+1)),c
  3942  001310  6E1C               
  3943                           	goto	i1l869
  3944  001312  EF8B  F009         	
  3945                           i1l1539:
  3946  001316                     	line	20
  3947                           	
  3948                           i1l869:
  3949  001316                     	return	;funcret
  3950  001316  0012               	opt stack 0
  3951                           GLOBAL	__end_ofi1_strchr
  3952                           	__end_ofi1_strchr:
  3953  001318                     	signat	i1_strchr,90
  3954                           	global	___xxtofl
  3955                           
  3956 ;; *************** function ___xxtofl *****************
  3957 ;; Defined at:
  3958 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  sign            1    wreg     unsigned char 
  3961 ;;  val             4   39[COMRAM] long 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  sign            1   47[COMRAM] unsigned char 
  3964 ;;  arg             4   49[COMRAM] unsigned long 
  3965 ;;  exp             1   48[COMRAM] unsigned char 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  4   39[COMRAM] unsigned char 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3975 ;;      Params:         4       0       0       0       0       0       0
  3976 ;;      Locals:         6       0       0       0       0       0       0
  3977 ;;      Temps:          4       0       0       0       0       0       0
  3978 ;;      Totals:        14       0       0       0       0       0       0
  3979 ;;Total ram usage:       14 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; Hardware stack levels required when called:    3
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_Lo_ISR
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           psect	text16,class=CODE,space=0,reloc=2,group=1
  3989                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  3990                           	line	10
  3991                           global __ptext16
  3992                           __ptext16:
  3993  000612                     psect	text16
  3994                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
  3995                           	line	10
  3996                           	global	__size_of___xxtofl
  3997                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  3998  0000                     	
  3999                           ___xxtofl:
  4000  000612                     ;incstack = 0
  4001                           	opt	stack 24
  4002                           ;___xxtofl@sign stored from wreg
  4003                           	movwf	((c:___xxtofl@sign)),c
  4004  000612  6E30               	line	15
  4005                           	
  4006                           i1l1737:
  4007  000614                     	movf	((c:___xxtofl@sign)),c,w
  4008  000614  5030               	btfsc	status,2
  4009  000616  B4D8               	goto	i1u128_21
  4010  000618  EF10  F003         	goto	i1u128_20
  4011  00061C  EF12  F003         i1u128_21:
  4012  000620                     	goto	i1l832
  4013  000620  EF34  F003         i1u128_20:
  4014  000624                     	
  4015                           i1l1739:
  4016  000624                     	btfsc	((c:___xxtofl@val+3)),c,7
  4017  000624  BE2B               	goto	i1u129_20
  4018  000626  EF19  F003         	goto	i1u129_21
  4019  00062A  EF17  F003         
  4020                           i1u129_21:
  4021  00062E                     	goto	i1l832
  4022  00062E  EF34  F003         i1u129_20:
  4023  000632                     	line	16
  4024                           	
  4025                           i1l1741:
  4026  000632                     	movff	(c:___xxtofl@val),??___xxtofl+0+0
  4027  000632  C028  F02C         	movff	(c:___xxtofl@val+1),??___xxtofl+0+0+1
  4028  000636  C029  F02D         	movff	(c:___xxtofl@val+2),??___xxtofl+0+0+2
  4029  00063A  C02A  F02E         	movff	(c:___xxtofl@val+3),??___xxtofl+0+0+3
  4030  00063E  C02B  F02F         	comf	(??___xxtofl+0+0),c
  4031  000642  1E2C               	comf	(??___xxtofl+0+1),c
  4032  000644  1E2D               	comf	(??___xxtofl+0+2),c
  4033  000646  1E2E               	comf	(??___xxtofl+0+3),c
  4034  000648  1E2F               	incf	(??___xxtofl+0+0),c
  4035  00064A  2A2C               	movlw	0
  4036  00064C  0E00               	addwfc	(??___xxtofl+0+1),c
  4037  00064E  222D               	addwfc	(??___xxtofl+0+2),c
  4038  000650  222E               	addwfc	(??___xxtofl+0+3),c
  4039  000652  222F               	movff	??___xxtofl+0+0,(c:___xxtofl@arg)
  4040  000654  C02C  F032         	movff	??___xxtofl+0+1,(c:___xxtofl@arg+1)
  4041  000658  C02D  F033         	movff	??___xxtofl+0+2,(c:___xxtofl@arg+2)
  4042  00065C  C02E  F034         	movff	??___xxtofl+0+3,(c:___xxtofl@arg+3)
  4043  000660  C02F  F035         	line	17
  4044                           	goto	i1l1743
  4045  000664  EF3E  F003         	line	18
  4046                           	
  4047                           i1l832:
  4048  000668                     	line	19
  4049                           	movff	(c:___xxtofl@val),(c:___xxtofl@arg)
  4050  000668  C028  F032         	movff	(c:___xxtofl@val+1),(c:___xxtofl@arg+1)
  4051  00066C  C029  F033         	movff	(c:___xxtofl@val+2),(c:___xxtofl@arg+2)
  4052  000670  C02A  F034         	movff	(c:___xxtofl@val+3),(c:___xxtofl@arg+3)
  4053  000674  C02B  F035         	goto	i1l1743
  4054  000678  EF3E  F003         	line	20
  4055                           	
  4056                           i1l833:
  4057  00067C                     	line	21
  4058                           	
  4059                           i1l1743:
  4060  00067C                     	movf	((c:___xxtofl@val)),c,w
  4061  00067C  5028               iorwf	((c:___xxtofl@val+1)),c,w
  4062  00067E  1029               iorwf	((c:___xxtofl@val+2)),c,w
  4063  000680  102A               iorwf	((c:___xxtofl@val+3)),c,w
  4064  000682  102B               	btfss	status,2
  4065  000684  A4D8               	goto	i1u130_21
  4066  000686  EF47  F003         	goto	i1u130_20
  4067  00068A  EF49  F003         
  4068                           i1u130_21:
  4069  00068E                     	goto	i1l1749
  4070  00068E  EF55  F003         i1u130_20:
  4071  000692                     	line	22
  4072                           	
  4073                           i1l1745:
  4074  000692                     	movlw	low(normalize32(0x0))
  4075  000692  0E00               	movwf	((c:?___xxtofl)),c
  4076  000694  6E28               	movlw	high(normalize32(0x0))
  4077  000696  0E00               	movwf	((c:?___xxtofl+1)),c
  4078  000698  6E29               	movlw	low highword(normalize32(0x0))
  4079  00069A  0E00               	movwf	((c:?___xxtofl+2)),c
  4080  00069C  6E2A               	movlw	high highword(normalize32(0x0))
  4081  00069E  0E00               	movwf	((c:?___xxtofl+3)),c
  4082  0006A0  6E2B               	goto	i1l835
  4083  0006A2  EFF6  F003         	
  4084                           i1l1747:
  4085  0006A6                     	goto	i1l835
  4086  0006A6  EFF6  F003         	
  4087                           i1l834:
  4088  0006AA                     	line	23
  4089                           	
  4090                           i1l1749:
  4091  0006AA                     	movlw	low(096h)
  4092  0006AA  0E96               	movwf	((c:___xxtofl@exp)),c
  4093  0006AC  6E31               	line	24
  4094                           	goto	i1l1753
  4095  0006AE  EF61  F003         	
  4096                           i1l837:
  4097  0006B2                     	line	25
  4098                           	
  4099                           i1l1751:
  4100  0006B2                     	incf	((c:___xxtofl@exp)),c
  4101  0006B2  2A31               	line	26
  4102                           	bcf	status,0
  4103  0006B4  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  4104  0006B6  3235               	rrcf	((c:___xxtofl@arg+2)),c
  4105  0006B8  3234               	rrcf	((c:___xxtofl@arg+1)),c
  4106  0006BA  3233               	rrcf	((c:___xxtofl@arg)),c
  4107  0006BC  3232               	goto	i1l1753
  4108  0006BE  EF61  F003         	line	27
  4109                           	
  4110                           i1l836:
  4111  0006C2                     	line	24
  4112                           	
  4113                           i1l1753:
  4114  0006C2                     	movlw	0
  4115  0006C2  0E00               	andwf	((c:___xxtofl@arg)),c,w
  4116  0006C4  1432               	movwf	(??___xxtofl+0+0)&0ffh,c
  4117  0006C6  6E2C               	movlw	0
  4118  0006C8  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  4119  0006CA  1433               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  4120  0006CC  6E2D               	
  4121                           	movlw	0
  4122  0006CE  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  4123  0006D0  1434               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  4124  0006D2  6E2E               	
  4125                           	movlw	0FEh
  4126  0006D4  0EFE               	andwf	((c:___xxtofl@arg+3)),c,w
  4127  0006D6  1435               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  4128  0006D8  6E2F               	movf	(??___xxtofl+0+0),c,w
  4129  0006DA  502C               iorwf	(??___xxtofl+0+1),c,w
  4130  0006DC  102D               iorwf	(??___xxtofl+0+2),c,w
  4131  0006DE  102E               iorwf	(??___xxtofl+0+3),c,w
  4132  0006E0  102F               	btfss	status,2
  4133  0006E2  A4D8               	goto	i1u131_21
  4134  0006E4  EF76  F003         	goto	i1u131_20
  4135  0006E8  EF78  F003         
  4136                           i1u131_21:
  4137  0006EC                     	goto	i1l1751
  4138  0006EC  EF59  F003         i1u131_20:
  4139  0006F0                     	goto	i1l839
  4140  0006F0  EF88  F003         	
  4141                           i1l838:
  4142  0006F4                     	line	28
  4143                           	goto	i1l839
  4144  0006F4  EF88  F003         	
  4145                           i1l840:
  4146  0006F8                     	line	29
  4147                           	
  4148                           i1l1755:
  4149  0006F8                     	incf	((c:___xxtofl@exp)),c
  4150  0006F8  2A31               	line	30
  4151                           	
  4152                           i1l1757:
  4153  0006FA                     	movlw	low(01h)
  4154  0006FA  0E01               	addwf	((c:___xxtofl@arg)),c
  4155  0006FC  2632               	movlw	0
  4156  0006FE  0E00               	addwfc	((c:___xxtofl@arg+1)),c
  4157  000700  2233               	addwfc	((c:___xxtofl@arg+2)),c
  4158  000702  2234               	addwfc	((c:___xxtofl@arg+3)),c
  4159  000704  2235               	line	31
  4160                           	
  4161                           i1l1759:
  4162  000706                     	bcf	status,0
  4163  000706  90D8               	rrcf	((c:___xxtofl@arg+3)),c
  4164  000708  3235               	rrcf	((c:___xxtofl@arg+2)),c
  4165  00070A  3234               	rrcf	((c:___xxtofl@arg+1)),c
  4166  00070C  3233               	rrcf	((c:___xxtofl@arg)),c
  4167  00070E  3232               	line	32
  4168                           	
  4169                           i1l839:
  4170  000710                     	line	28
  4171                           	movlw	0
  4172  000710  0E00               	andwf	((c:___xxtofl@arg)),c,w
  4173  000712  1432               	movwf	(??___xxtofl+0+0)&0ffh,c
  4174  000714  6E2C               	movlw	0
  4175  000716  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
  4176  000718  1433               	movwf	1+(??___xxtofl+0+0)&0ffh,c
  4177  00071A  6E2D               	
  4178                           	movlw	0
  4179  00071C  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
  4180  00071E  1434               	movwf	2+(??___xxtofl+0+0)&0ffh,c
  4181  000720  6E2E               	
  4182                           	movlw	0FFh
  4183  000722  0EFF               	andwf	((c:___xxtofl@arg+3)),c,w
  4184  000724  1435               	movwf	3+(??___xxtofl+0+0)&0ffh,c
  4185  000726  6E2F               	movf	(??___xxtofl+0+0),c,w
  4186  000728  502C               iorwf	(??___xxtofl+0+1),c,w
  4187  00072A  102D               iorwf	(??___xxtofl+0+2),c,w
  4188  00072C  102E               iorwf	(??___xxtofl+0+3),c,w
  4189  00072E  102F               	btfss	status,2
  4190  000730  A4D8               	goto	i1u132_21
  4191  000732  EF9D  F003         	goto	i1u132_20
  4192  000736  EF9F  F003         
  4193                           i1u132_21:
  4194  00073A                     	goto	i1l1755
  4195  00073A  EF7C  F003         i1u132_20:
  4196  00073E                     	goto	i1l1763
  4197  00073E  EFAB  F003         	
  4198                           i1l841:
  4199  000742                     	line	33
  4200                           	goto	i1l1763
  4201  000742  EFAB  F003         	
  4202                           i1l843:
  4203  000746                     	line	34
  4204                           	
  4205                           i1l1761:
  4206  000746                     	decf	((c:___xxtofl@exp)),c
  4207  000746  0631               	line	35
  4208                           	bcf	status,0
  4209  000748  90D8               	rlcf	((c:___xxtofl@arg)),c
  4210  00074A  3632               	rlcf	((c:___xxtofl@arg+1)),c
  4211  00074C  3633               	rlcf	((c:___xxtofl@arg+2)),c
  4212  00074E  3634               	rlcf	((c:___xxtofl@arg+3)),c
  4213  000750  3635               	goto	i1l1763
  4214  000752  EFAB  F003         	line	36
  4215                           	
  4216                           i1l842:
  4217  000756                     	line	33
  4218                           	
  4219                           i1l1763:
  4220  000756                     	
  4221                           	btfsc	((c:___xxtofl@arg+2)),c,(23)&7
  4222  000756  BE34               	goto	i1u133_21
  4223  000758  EFB0  F003         	goto	i1u133_20
  4224  00075C  EFB2  F003         i1u133_21:
  4225  000760                     	goto	i1l846
  4226  000760  EFBC  F003         i1u133_20:
  4227  000764                     	
  4228                           i1l1765:
  4229  000764                     		movlw	02h-0
  4230  000764  0E02               	cpfslt	((c:___xxtofl@exp)),c
  4231  000766  6031               	goto	i1u134_21
  4232  000768  EFB8  F003         	goto	i1u134_20
  4233  00076C  EFBA  F003         
  4234                           i1u134_21:
  4235  000770                     	goto	i1l1761
  4236  000770  EFA3  F003         i1u134_20:
  4237  000774                     	goto	i1l846
  4238  000774  EFBC  F003         	
  4239                           i1l845:
  4240  000778                     	
  4241                           i1l846:
  4242  000778                     	line	37
  4243                           	
  4244                           	btfsc	((c:___xxtofl@exp)),c,(0)&7
  4245  000778  B031               	goto	i1u135_21
  4246  00077A  EFC1  F003         	goto	i1u135_20
  4247  00077E  EFC3  F003         i1u135_21:
  4248  000782                     	goto	i1l1769
  4249  000782  EFC6  F003         i1u135_20:
  4250  000786                     	line	38
  4251                           	
  4252                           i1l1767:
  4253  000786                     	bcf	(0+(23/8)+(c:___xxtofl@arg)),c,(23)&7
  4254  000786  9E34               	goto	i1l1769
  4255  000788  EFC6  F003         	
  4256                           i1l847:
  4257  00078C                     	line	39
  4258                           	
  4259                           i1l1769:
  4260  00078C                     	bcf status,0
  4261  00078C  90D8               	rrcf	((c:___xxtofl@exp)),c
  4262  00078E  3231               
  4263                           	line	40
  4264                           	
  4265                           i1l1771:
  4266  000790                     	movff	(c:___xxtofl@exp),??___xxtofl+0+0
  4267  000790  C031  F02C         	clrf	(??___xxtofl+0+0+1)&0ffh,c
  4268  000794  6A2D               	clrf	(??___xxtofl+0+0+2)&0ffh,c
  4269  000796  6A2E               	clrf	(??___xxtofl+0+0+3)&0ffh,c
  4270  000798  6A2F               	movff	??___xxtofl+0+0,??___xxtofl+0+3
  4271  00079A  C02C  F02F         	clrf	(??___xxtofl+0+2),c
  4272  00079E  6A2E               	clrf	(??___xxtofl+0+1),c
  4273  0007A0  6A2D               	clrf	(??___xxtofl+0+0),c
  4274  0007A2  6A2C               	movf	(??___xxtofl+0+0),c,w
  4275  0007A4  502C               	iorwf	((c:___xxtofl@arg)),c
  4276  0007A6  1232               	movf	(??___xxtofl+0+1),c,w
  4277  0007A8  502D               	iorwf	((c:___xxtofl@arg+1)),c
  4278  0007AA  1233               	movf	(??___xxtofl+0+2),c,w
  4279  0007AC  502E               	iorwf	((c:___xxtofl@arg+2)),c
  4280  0007AE  1234               	movf	(??___xxtofl+0+3),c,w
  4281  0007B0  502F               	iorwf	((c:___xxtofl@arg+3)),c
  4282  0007B2  1235               
  4283                           	line	41
  4284                           	
  4285                           i1l1773:
  4286  0007B4                     	movf	((c:___xxtofl@sign)),c,w
  4287  0007B4  5030               	btfsc	status,2
  4288  0007B6  B4D8               	goto	i1u136_21
  4289  0007B8  EFE0  F003         	goto	i1u136_20
  4290  0007BC  EFE2  F003         i1u136_21:
  4291  0007C0                     	goto	i1l1779
  4292  0007C0  EFEC  F003         i1u136_20:
  4293  0007C4                     	
  4294                           i1l1775:
  4295  0007C4                     	btfsc	((c:___xxtofl@val+3)),c,7
  4296  0007C4  BE2B               	goto	i1u137_20
  4297  0007C6  EFE9  F003         	goto	i1u137_21
  4298  0007CA  EFE7  F003         
  4299                           i1u137_21:
  4300  0007CE                     	goto	i1l1779
  4301  0007CE  EFEC  F003         i1u137_20:
  4302  0007D2                     	line	42
  4303                           	
  4304                           i1l1777:
  4305  0007D2                     	bsf	(0+(31/8)+(c:___xxtofl@arg)),c,(31)&7
  4306  0007D2  8E35               	goto	i1l1779
  4307  0007D4  EFEC  F003         	
  4308                           i1l848:
  4309  0007D8                     	line	43
  4310                           	
  4311                           i1l1779:
  4312  0007D8                     	movff	(c:___xxtofl@arg),(c:?___xxtofl)
  4313  0007D8  C032  F028         	movff	(c:___xxtofl@arg+1),(c:?___xxtofl+1)
  4314  0007DC  C033  F029         	movff	(c:___xxtofl@arg+2),(c:?___xxtofl+2)
  4315  0007E0  C034  F02A         	movff	(c:___xxtofl@arg+3),(c:?___xxtofl+3)
  4316  0007E4  C035  F02B         	goto	i1l835
  4317  0007E8  EFF6  F003         	
  4318                           i1l1781:
  4319  0007EC                     	line	44
  4320                           	
  4321                           i1l835:
  4322  0007EC                     	return	;funcret
  4323  0007EC  0012               	opt stack 0
  4324                           GLOBAL	__end_of___xxtofl
  4325                           	__end_of___xxtofl:
  4326  0007EE                     	signat	___xxtofl,8316
  4327                           	global	___wmul
  4328                           
  4329 ;; *************** function ___wmul *****************
  4330 ;; Defined at:
  4331 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  multiplier      2   26[COMRAM] unsigned int 
  4334 ;;  multiplicand    2   28[COMRAM] unsigned int 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  product         2   30[COMRAM] unsigned int 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  2   26[COMRAM] unsigned int 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0, prodl, prodh
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4346 ;;      Params:         4       0       0       0       0       0       0
  4347 ;;      Locals:         2       0       0       0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0
  4349 ;;      Totals:         6       0       0       0       0       0       0
  4350 ;;Total ram usage:        6 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    3
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_Lo_ISR
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           psect	text17,class=CODE,space=0,reloc=2,group=1
  4360                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4361                           	line	15
  4362                           global __ptext17
  4363                           __ptext17:
  4364  0014DA                     psect	text17
  4365                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  4366                           	line	15
  4367                           	global	__size_of___wmul
  4368                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  4369  0000                     	
  4370                           ___wmul:
  4371  0014DA                     ;incstack = 0
  4372                           	opt	stack 24
  4373                           	line	37
  4374                           	
  4375                           i1l1709:
  4376  0014DA                     	movf	((c:___wmul@multiplier)),c,w
  4377  0014DA  501B               	mulwf	((c:___wmul@multiplicand)),c
  4378  0014DC  021D               	movff	prodl,(c:___wmul@product)
  4379  0014DE  CFF3 F01F          	movff	prodh,(c:___wmul@product+1)
  4380  0014E2  CFF4 F020          	line	38
  4381                           	movf	((c:___wmul@multiplier)),c,w
  4382  0014E6  501B               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  4383  0014E8  021E               	movf	(prodl),c,w
  4384  0014EA  50F3               	addwf	((c:___wmul@product+1)),c
  4385  0014EC  2620               
  4386                           	line	39
  4387                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  4388  0014EE  501C               	mulwf	((c:___wmul@multiplicand)),c
  4389  0014F0  021D               	movf	(prodl),c,w
  4390  0014F2  50F3               	addwf	((c:___wmul@product+1)),c
  4391  0014F4  2620               
  4392                           	line	52
  4393                           	
  4394                           i1l1711:
  4395  0014F6                     	movff	(c:___wmul@product),(c:?___wmul)
  4396  0014F6  C01F  F01B         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  4397  0014FA  C020  F01C         	goto	i1l177
  4398  0014FE  EF81  F00A         	
  4399                           i1l1713:
  4400  001502                     	line	53
  4401                           	
  4402                           i1l177:
  4403  001502                     	return	;funcret
  4404  001502  0012               	opt stack 0
  4405                           GLOBAL	__end_of___wmul
  4406                           	__end_of___wmul:
  4407  001504                     	signat	___wmul,8314
  4408                           	global	___lwdiv
  4409                           
  4410 ;; *************** function ___lwdiv *****************
  4411 ;; Defined at:
  4412 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  dividend        2   32[COMRAM] unsigned int 
  4415 ;;  divisor         2   34[COMRAM] unsigned int 
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  quotient        2   36[COMRAM] unsigned int 
  4418 ;;  counter         1   38[COMRAM] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  2   32[COMRAM] unsigned int 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4428 ;;      Params:         4       0       0       0       0       0       0
  4429 ;;      Locals:         3       0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0
  4431 ;;      Totals:         7       0       0       0       0       0       0
  4432 ;;Total ram usage:        7 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    3
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_Lo_ISR
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           psect	text18,class=CODE,space=0,reloc=2,group=1
  4442                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  4443                           	line	7
  4444                           global __ptext18
  4445                           __ptext18:
  4446  0010B6                     psect	text18
  4447                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\lwdiv.c"
  4448                           	line	7
  4449                           	global	__size_of___lwdiv
  4450                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4451  0000                     	
  4452                           ___lwdiv:
  4453  0010B6                     ;incstack = 0
  4454                           	opt	stack 24
  4455                           	line	13
  4456                           	
  4457                           i1l1715:
  4458  0010B6                     	movlw	high(0)
  4459  0010B6  0E00               	movwf	((c:___lwdiv@quotient+1)),c
  4460  0010B8  6E26               	movlw	low(0)
  4461  0010BA  0E00               	movwf	((c:___lwdiv@quotient)),c
  4462  0010BC  6E25               	line	14
  4463                           	
  4464                           i1l1717:
  4465  0010BE                     	movf	((c:___lwdiv@divisor)),c,w
  4466  0010BE  5023               iorwf	((c:___lwdiv@divisor+1)),c,w
  4467  0010C0  1024               	btfsc	status,2
  4468  0010C2  B4D8               	goto	i1u125_21
  4469  0010C4  EF66  F008         	goto	i1u125_20
  4470  0010C8  EF68  F008         
  4471                           i1u125_21:
  4472  0010CC                     	goto	i1l668
  4473  0010CC  EF9A  F008         i1u125_20:
  4474  0010D0                     	line	15
  4475                           	
  4476                           i1l1719:
  4477  0010D0                     	movlw	low(01h)
  4478  0010D0  0E01               	movwf	((c:___lwdiv@counter)),c
  4479  0010D2  6E27               	line	16
  4480                           	goto	i1l1723
  4481  0010D4  EF72  F008         	
  4482                           i1l670:
  4483  0010D8                     	line	17
  4484                           	
  4485                           i1l1721:
  4486  0010D8                     	bcf	status,0
  4487  0010D8  90D8               	rlcf	((c:___lwdiv@divisor)),c
  4488  0010DA  3623               	rlcf	((c:___lwdiv@divisor+1)),c
  4489  0010DC  3624               	line	18
  4490                           	incf	((c:___lwdiv@counter)),c
  4491  0010DE  2A27               	goto	i1l1723
  4492  0010E0  EF72  F008         	line	19
  4493                           	
  4494                           i1l669:
  4495  0010E4                     	line	16
  4496                           	
  4497                           i1l1723:
  4498  0010E4                     	
  4499                           	btfss	((c:___lwdiv@divisor+1)),c,(15)&7
  4500  0010E4  AE24               	goto	i1u126_21
  4501  0010E6  EF77  F008         	goto	i1u126_20
  4502  0010EA  EF79  F008         i1u126_21:
  4503  0010EE                     	goto	i1l1721
  4504  0010EE  EF6C  F008         i1u126_20:
  4505  0010F2                     	goto	i1l1725
  4506  0010F2  EF7D  F008         	
  4507                           i1l671:
  4508  0010F6                     	goto	i1l1725
  4509  0010F6  EF7D  F008         	line	20
  4510                           	
  4511                           i1l672:
  4512  0010FA                     	line	21
  4513                           	
  4514                           i1l1725:
  4515  0010FA                     	bcf	status,0
  4516  0010FA  90D8               	rlcf	((c:___lwdiv@quotient)),c
  4517  0010FC  3625               	rlcf	((c:___lwdiv@quotient+1)),c
  4518  0010FE  3626               	line	22
  4519                           	
  4520                           i1l1727:
  4521  001100                     		movf	((c:___lwdiv@divisor)),c,w
  4522  001100  5023               	subwf	((c:___lwdiv@dividend)),c,w
  4523  001102  5C21               	movf	((c:___lwdiv@divisor+1)),c,w
  4524  001104  5024               	subwfb	((c:___lwdiv@dividend+1)),c,w
  4525  001106  5822               	btfss	status,0
  4526  001108  A0D8               	goto	i1u127_21
  4527  00110A  EF89  F008         	goto	i1u127_20
  4528  00110E  EF8B  F008         
  4529                           i1u127_21:
  4530  001112                     	goto	i1l1733
  4531  001112  EF92  F008         i1u127_20:
  4532  001116                     	line	23
  4533                           	
  4534                           i1l1729:
  4535  001116                     	movf	((c:___lwdiv@divisor)),c,w
  4536  001116  5023               	subwf	((c:___lwdiv@dividend)),c
  4537  001118  5E21               	movf	((c:___lwdiv@divisor+1)),c,w
  4538  00111A  5024               	subwfb	((c:___lwdiv@dividend+1)),c
  4539  00111C  5A22               
  4540                           	line	24
  4541                           	
  4542                           i1l1731:
  4543  00111E                     	bsf	(0+(0/8)+(c:___lwdiv@quotient)),c,(0)&7
  4544  00111E  8025               	goto	i1l1733
  4545  001120  EF92  F008         	line	25
  4546                           	
  4547                           i1l673:
  4548  001124                     	line	26
  4549                           	
  4550                           i1l1733:
  4551  001124                     	bcf	status,0
  4552  001124  90D8               	rrcf	((c:___lwdiv@divisor+1)),c
  4553  001126  3224               	rrcf	((c:___lwdiv@divisor)),c
  4554  001128  3223               	line	27
  4555                           	
  4556                           i1l1735:
  4557  00112A                     	decfsz	((c:___lwdiv@counter)),c
  4558  00112A  2E27               	
  4559                           	goto	i1l1725
  4560  00112C  EF7D  F008         	goto	i1l668
  4561  001130  EF9A  F008         	
  4562                           i1l674:
  4563  001134                     	line	28
  4564                           	
  4565                           i1l668:
  4566  001134                     	line	29
  4567                           	movff	(c:___lwdiv@quotient),(c:?___lwdiv)
  4568  001134  C025  F021         	movff	(c:___lwdiv@quotient+1),(c:?___lwdiv+1)
  4569  001138  C026  F022         	line	30
  4570                           	
  4571                           i1l675:
  4572  00113C                     	return	;funcret
  4573  00113C  0012               	opt stack 0
  4574                           GLOBAL	__end_of___lwdiv
  4575                           	__end_of___lwdiv:
  4576  00113E                     	signat	___lwdiv,8314
  4577                           	global	_MyusartRead
  4578                           
  4579 ;; *************** function _MyusartRead *****************
  4580 ;; Defined at:
  4581 ;;		line 250 in file "Prob1.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;		None
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;		None
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  1    wreg      void 
  4588 ;; Registers used:
  4589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 0/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4595 ;;      Params:         0       0       0       0       0       0       0
  4596 ;;      Locals:         0       0       0       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0       0       0
  4598 ;;      Totals:         0       0       0       0       0       0       0
  4599 ;;Total ram usage:        0 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    4
  4602 ;; This function calls:
  4603 ;;		_UART_Write
  4604 ;;		___awmod
  4605 ;; This function is called by:
  4606 ;;		_Lo_ISR
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           psect	text19,class=CODE,space=0,reloc=2,group=0
  4610                           	file	"Prob1.c"
  4611                           	line	250
  4612                           global __ptext19
  4613                           __ptext19:
  4614  00141C                     psect	text19
  4615                           	file	"Prob1.c"
  4616                           	line	250
  4617                           	global	__size_of_MyusartRead
  4618                           	__size_of_MyusartRead	equ	__end_of_MyusartRead-_MyusartRead
  4619  0000                     	
  4620                           _MyusartRead:
  4621  00141C                     ;incstack = 0
  4622                           	opt	stack 23
  4623                           	line	252
  4624                           	
  4625                           i1l1699:
  4626  00141C                     ;Prob1.c: 252:     mystring[lenStr] = RCREG;
  4627                           	movlw	low(_mystring)
  4628  00141C  0ED1               	addwf	((c:_lenStr)),c,w
  4629  00141E  2456               	movwf	c:fsr2l
  4630  001420  6ED9               	movlw	high(_mystring)
  4631  001422  0E00               	addwfc	((c:_lenStr+1)),c,w
  4632  001424  2057               	movwf	1+c:fsr2l
  4633  001426  6EDA               	movff	(c:4014),indf2	;volatile
  4634  001428  CFAE FFDF          
  4635                           	line	253
  4636                           	
  4637                           i1l1701:
  4638  00142C                     ;Prob1.c: 253:     UART_Write(mystring[lenStr]);
  4639                           	movlw	low(_mystring)
  4640  00142C  0ED1               	addwf	((c:_lenStr)),c,w
  4641  00142E  2456               	movwf	c:fsr2l
  4642  001430  6ED9               	movlw	high(_mystring)
  4643  001432  0E00               	addwfc	((c:_lenStr+1)),c,w
  4644  001434  2057               	movwf	1+c:fsr2l
  4645  001436  6EDA               	movf	indf2,w
  4646  001438  50DF               	
  4647                           	call	_UART_Write
  4648  00143A  EC93  F00A         	line	254
  4649                           	
  4650                           i1l1703:
  4651  00143E                     ;Prob1.c: 254:     lenStr++;
  4652                           	infsnz	((c:_lenStr)),c
  4653  00143E  4A56               	incf	((c:_lenStr+1)),c
  4654  001440  2A57               	line	255
  4655                           	
  4656                           i1l1705:
  4657  001442                     ;Prob1.c: 255:     lenStr %= 10;
  4658                           	movff	(c:_lenStr),(c:___awmod@dividend)
  4659  001442  C056  F01B         	movff	(c:_lenStr+1),(c:___awmod@dividend+1)
  4660  001446  C057  F01C         	movlw	high(0Ah)
  4661  00144A  0E00               	movwf	((c:___awmod@divisor+1)),c
  4662  00144C  6E1E               	movlw	low(0Ah)
  4663  00144E  0E0A               	movwf	((c:___awmod@divisor)),c
  4664  001450  6E1D               	call	___awmod	;wreg free
  4665  001452  ECE3  F006         	movff	0+?___awmod,(c:_lenStr)
  4666  001456  C01B  F056         	movff	1+?___awmod,(c:_lenStr+1)
  4667  00145A  C01C  F057         	goto	i1l154
  4668  00145E  EF31  F00A         	line	258
  4669                           	
  4670                           i1l1707:
  4671  001462                     	line	259
  4672                           ;Prob1.c: 258:     return ;
  4673                           	
  4674                           i1l154:
  4675  001462                     	return	;funcret
  4676  001462  0012               	opt stack 0
  4677                           GLOBAL	__end_of_MyusartRead
  4678                           	__end_of_MyusartRead:
  4679  001464                     	signat	_MyusartRead,89
  4680                           	global	___awmod
  4681                           
  4682 ;; *************** function ___awmod *****************
  4683 ;; Defined at:
  4684 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  dividend        2   26[COMRAM] int 
  4687 ;;  divisor         2   28[COMRAM] int 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  sign            1   31[COMRAM] unsigned char 
  4690 ;;  counter         1   30[COMRAM] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2   26[COMRAM] int 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4700 ;;      Params:         4       0       0       0       0       0       0
  4701 ;;      Locals:         2       0       0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0
  4703 ;;      Totals:         6       0       0       0       0       0       0
  4704 ;;Total ram usage:        6 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    3
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_MyusartRead
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           psect	text20,class=CODE,space=0,reloc=2,group=1
  4714                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  4715                           	line	7
  4716                           global __ptext20
  4717                           __ptext20:
  4718  000DC6                     psect	text20
  4719                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  4720                           	line	7
  4721                           	global	__size_of___awmod
  4722                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  4723  0000                     	
  4724                           ___awmod:
  4725  000DC6                     ;incstack = 0
  4726                           	opt	stack 23
  4727                           	line	12
  4728                           	
  4729                           i1l1451:
  4730  000DC6                     	movlw	low(0)
  4731  000DC6  0E00               	movwf	((c:___awmod@sign)),c
  4732  000DC8  6E20               	line	13
  4733                           	
  4734                           i1l1453:
  4735  000DCA                     	btfsc	((c:___awmod@dividend+1)),c,7
  4736  000DCA  BE1C               	goto	i1u87_20
  4737  000DCC  EFEC  F006         	goto	i1u87_21
  4738  000DD0  EFEA  F006         
  4739                           i1u87_21:
  4740  000DD4                     	goto	i1l1459
  4741  000DD4  EFF4  F006         i1u87_20:
  4742  000DD8                     	line	14
  4743                           	
  4744                           i1l1455:
  4745  000DD8                     	negf	((c:___awmod@dividend)),c
  4746  000DD8  6C1B               	comf	((c:___awmod@dividend+1)),c
  4747  000DDA  1E1C               	btfsc	status,0
  4748  000DDC  B0D8               	incf	((c:___awmod@dividend+1)),c
  4749  000DDE  2A1C               	line	15
  4750                           	
  4751                           i1l1457:
  4752  000DE0                     	movlw	low(01h)
  4753  000DE0  0E01               	movwf	((c:___awmod@sign)),c
  4754  000DE2  6E20               	goto	i1l1459
  4755  000DE4  EFF4  F006         	line	16
  4756                           	
  4757                           i1l411:
  4758  000DE8                     	line	17
  4759                           	
  4760                           i1l1459:
  4761  000DE8                     	btfsc	((c:___awmod@divisor+1)),c,7
  4762  000DE8  BE1E               	goto	i1u88_20
  4763  000DEA  EFFB  F006         	goto	i1u88_21
  4764  000DEE  EFF9  F006         
  4765                           i1u88_21:
  4766  000DF2                     	goto	i1l1463
  4767  000DF2  EF01  F007         i1u88_20:
  4768  000DF6                     	line	18
  4769                           	
  4770                           i1l1461:
  4771  000DF6                     	negf	((c:___awmod@divisor)),c
  4772  000DF6  6C1D               	comf	((c:___awmod@divisor+1)),c
  4773  000DF8  1E1E               	btfsc	status,0
  4774  000DFA  B0D8               	incf	((c:___awmod@divisor+1)),c
  4775  000DFC  2A1E               	goto	i1l1463
  4776  000DFE  EF01  F007         	
  4777                           i1l412:
  4778  000E02                     	line	19
  4779                           	
  4780                           i1l1463:
  4781  000E02                     	movf	((c:___awmod@divisor)),c,w
  4782  000E02  501D               iorwf	((c:___awmod@divisor+1)),c,w
  4783  000E04  101E               	btfsc	status,2
  4784  000E06  B4D8               	goto	i1u89_21
  4785  000E08  EF08  F007         	goto	i1u89_20
  4786  000E0C  EF0A  F007         
  4787                           i1u89_21:
  4788  000E10                     	goto	i1l1479
  4789  000E10  EF3A  F007         i1u89_20:
  4790  000E14                     	line	20
  4791                           	
  4792                           i1l1465:
  4793  000E14                     	movlw	low(01h)
  4794  000E14  0E01               	movwf	((c:___awmod@counter)),c
  4795  000E16  6E1F               	line	21
  4796                           	goto	i1l1469
  4797  000E18  EF14  F007         	
  4798                           i1l415:
  4799  000E1C                     	line	22
  4800                           	
  4801                           i1l1467:
  4802  000E1C                     	bcf	status,0
  4803  000E1C  90D8               	rlcf	((c:___awmod@divisor)),c
  4804  000E1E  361D               	rlcf	((c:___awmod@divisor+1)),c
  4805  000E20  361E               	line	23
  4806                           	incf	((c:___awmod@counter)),c
  4807  000E22  2A1F               	goto	i1l1469
  4808  000E24  EF14  F007         	line	24
  4809                           	
  4810                           i1l414:
  4811  000E28                     	line	21
  4812                           	
  4813                           i1l1469:
  4814  000E28                     	
  4815                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
  4816  000E28  AE1E               	goto	i1u90_21
  4817  000E2A  EF19  F007         	goto	i1u90_20
  4818  000E2E  EF1B  F007         i1u90_21:
  4819  000E32                     	goto	i1l1467
  4820  000E32  EF0E  F007         i1u90_20:
  4821  000E36                     	goto	i1l1471
  4822  000E36  EF1F  F007         	
  4823                           i1l416:
  4824  000E3A                     	goto	i1l1471
  4825  000E3A  EF1F  F007         	line	25
  4826                           	
  4827                           i1l417:
  4828  000E3E                     	line	26
  4829                           	
  4830                           i1l1471:
  4831  000E3E                     		movf	((c:___awmod@divisor)),c,w
  4832  000E3E  501D               	subwf	((c:___awmod@dividend)),c,w
  4833  000E40  5C1B               	movf	((c:___awmod@divisor+1)),c,w
  4834  000E42  501E               	subwfb	((c:___awmod@dividend+1)),c,w
  4835  000E44  581C               	btfss	status,0
  4836  000E46  A0D8               	goto	i1u91_21
  4837  000E48  EF28  F007         	goto	i1u91_20
  4838  000E4C  EF2A  F007         
  4839                           i1u91_21:
  4840  000E50                     	goto	i1l1475
  4841  000E50  EF30  F007         i1u91_20:
  4842  000E54                     	line	27
  4843                           	
  4844                           i1l1473:
  4845  000E54                     	movf	((c:___awmod@divisor)),c,w
  4846  000E54  501D               	subwf	((c:___awmod@dividend)),c
  4847  000E56  5E1B               	movf	((c:___awmod@divisor+1)),c,w
  4848  000E58  501E               	subwfb	((c:___awmod@dividend+1)),c
  4849  000E5A  5A1C               
  4850                           	goto	i1l1475
  4851  000E5C  EF30  F007         	
  4852                           i1l418:
  4853  000E60                     	line	28
  4854                           	
  4855                           i1l1475:
  4856  000E60                     	bcf	status,0
  4857  000E60  90D8               	rrcf	((c:___awmod@divisor+1)),c
  4858  000E62  321E               	rrcf	((c:___awmod@divisor)),c
  4859  000E64  321D               	line	29
  4860                           	
  4861                           i1l1477:
  4862  000E66                     	decfsz	((c:___awmod@counter)),c
  4863  000E66  2E1F               	
  4864                           	goto	i1l1471
  4865  000E68  EF1F  F007         	goto	i1l1479
  4866  000E6C  EF3A  F007         	
  4867                           i1l419:
  4868  000E70                     	goto	i1l1479
  4869  000E70  EF3A  F007         	line	30
  4870                           	
  4871                           i1l413:
  4872  000E74                     	line	31
  4873                           	
  4874                           i1l1479:
  4875  000E74                     	movf	((c:___awmod@sign)),c,w
  4876  000E74  5020               	btfsc	status,2
  4877  000E76  B4D8               	goto	i1u92_21
  4878  000E78  EF40  F007         	goto	i1u92_20
  4879  000E7C  EF42  F007         i1u92_21:
  4880  000E80                     	goto	i1l1483
  4881  000E80  EF48  F007         i1u92_20:
  4882  000E84                     	line	32
  4883                           	
  4884                           i1l1481:
  4885  000E84                     	negf	((c:___awmod@dividend)),c
  4886  000E84  6C1B               	comf	((c:___awmod@dividend+1)),c
  4887  000E86  1E1C               	btfsc	status,0
  4888  000E88  B0D8               	incf	((c:___awmod@dividend+1)),c
  4889  000E8A  2A1C               	goto	i1l1483
  4890  000E8C  EF48  F007         	
  4891                           i1l420:
  4892  000E90                     	line	33
  4893                           	
  4894                           i1l1483:
  4895  000E90                     	movff	(c:___awmod@dividend),(c:?___awmod)
  4896  000E90  C01B  F01B         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
  4897  000E94  C01C  F01C         	goto	i1l421
  4898  000E98  EF4E  F007         	
  4899                           i1l1485:
  4900  000E9C                     	line	34
  4901                           	
  4902                           i1l421:
  4903  000E9C                     	return	;funcret
  4904  000E9C  0012               	opt stack 0
  4905                           GLOBAL	__end_of___awmod
  4906                           	__end_of___awmod:
  4907  000E9E                     	signat	___awmod,8314
  4908                           	global	_UART_Write
  4909                           
  4910 ;; *************** function _UART_Write *****************
  4911 ;; Defined at:
  4912 ;;		line 233 in file "Prob1.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  data            1    wreg     unsigned char 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  data            1   26[COMRAM] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4926 ;;      Params:         0       0       0       0       0       0       0
  4927 ;;      Locals:         1       0       0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0
  4929 ;;      Totals:         1       0       0       0       0       0       0
  4930 ;;Total ram usage:        1 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    3
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_MyusartRead
  4937 ;;		_UART_Write_Text
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           psect	text21,class=CODE,space=0,reloc=2,group=0
  4941                           	file	"Prob1.c"
  4942                           	line	233
  4943                           global __ptext21
  4944                           __ptext21:
  4945  001526                     psect	text21
  4946                           	file	"Prob1.c"
  4947                           	line	233
  4948                           	global	__size_of_UART_Write
  4949                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
  4950  0000                     	
  4951                           _UART_Write:
  4952  001526                     ;incstack = 0
  4953                           	opt	stack 23
  4954                           ;UART_Write@data stored from wreg
  4955                           	movwf	((c:UART_Write@data)),c
  4956  001526  6E1B               	line	235
  4957                           	
  4958                           i1l1447:
  4959  001528                     ;Prob1.c: 233: void UART_Write(unsigned char data);Prob1.c: 234: {;Prob1.c: 235:     whi
                                 le(!TXSTAbits.TRMT);
  4960                           	goto	i1l137
  4961  001528  EF96  F00A         	
  4962                           i1l138:
  4963  00152C                     	
  4964                           i1l137:
  4965  00152C                     	btfss	((c:4012)),c,1	;volatile
  4966  00152C  A2AC               	goto	i1u86_21
  4967  00152E  EF9B  F00A         	goto	i1u86_20
  4968  001532  EF9D  F00A         i1u86_21:
  4969  001536                     	goto	i1l137
  4970  001536  EF96  F00A         i1u86_20:
  4971  00153A                     	goto	i1l1449
  4972  00153A  EF9F  F00A         	
  4973                           i1l139:
  4974  00153E                     	line	236
  4975                           	
  4976                           i1l1449:
  4977  00153E                     ;Prob1.c: 236:     TXREG = data;
  4978                           	movff	(c:UART_Write@data),(c:4013)	;volatile
  4979  00153E  C01B  FFAD         	line	237
  4980                           	
  4981                           i1l140:
  4982  001542                     	return	;funcret
  4983  001542  0012               	opt stack 0
  4984                           GLOBAL	__end_of_UART_Write
  4985                           	__end_of_UART_Write:
  4986  001544                     	signat	_UART_Write,4217
  4987                           	global	_Hi_ISR
  4988                           
  4989 ;; *************** function _Hi_ISR *****************
  4990 ;; Defined at:
  4991 ;;		line 160 in file "Prob1.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5005 ;;      Params:         0       0       0       0       0       0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0
  5007 ;;      Temps:          7       0       0       0       0       0       0
  5008 ;;      Totals:         7       0       0       0       0       0       0
  5009 ;;Total ram usage:        7 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    2
  5012 ;; This function calls:
  5013 ;;		i2_strstr
  5014 ;; This function is called by:
  5015 ;;		Interrupt level 2
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           psect	intcode,class=CODE,space=0,reloc=2
  5019                           global __pintcode
  5020                           __pintcode:
  5021  000008                     psect	intcode
  5022                           	file	"Prob1.c"
  5023                           	line	160
  5024                           	global	__size_of_Hi_ISR
  5025                           	__size_of_Hi_ISR	equ	__end_of_Hi_ISR-_Hi_ISR
  5026  0000                     	
  5027                           _Hi_ISR:
  5028  000008                     ;incstack = 0
  5029                           	opt	stack 23
  5030                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  5031  000008  825A               	global	int_func
  5032                           	call	int_func,f	;refresh shadow registers
  5033  00000A  EDF7  F003         psect	intcode_body,class=CODE,space=0,reloc=2
  5034                           global __pintcode_body
  5035                           __pintcode_body:
  5036  0007EE                     int_func:
  5037  0007EE                     
  5038                           	pop	; remove dummy address from shadow register refresh
  5039  0007EE  0006               	movff	fsr2l+0,??_Hi_ISR+1
  5040  0007F0  CFD9 F015          	movff	fsr2h+0,??_Hi_ISR+2
  5041  0007F4  CFDA F016          	movff	tblptrl+0,??_Hi_ISR+3
  5042  0007F8  CFF6 F017          	movff	tblptrh+0,??_Hi_ISR+4
  5043  0007FC  CFF7 F018          	movff	tblptru+0,??_Hi_ISR+5
  5044  000800  CFF8 F019          	movff	tablat+0,??_Hi_ISR+6
  5045  000804  CFF5 F01A          	line	162
  5046                           	
  5047                           i2l1839:
  5048  000808                     ;Prob1.c: 162:     if(TMR1IF){
  5049                           	btfss	c:(31984/8),(31984)&7	;volatile
  5050  000808  A09E               	goto	i2u148_41
  5051  00080A  EF09  F004         	goto	i2u148_40
  5052  00080E  EF0B  F004         i2u148_41:
  5053  000812                     	goto	i2l123
  5054  000812  EF7F  F004         i2u148_40:
  5055  000816                     	line	163
  5056                           	
  5057                           i2l1841:
  5058  000816                     ;Prob1.c: 163:         PIR1bits.TMR1IF = 0;
  5059                           	bcf	((c:3998)),c,0	;volatile
  5060  000816  909E               	line	164
  5061                           	
  5062                           i2l1843:
  5063  000818                     ;Prob1.c: 164:         count++;
  5064                           	infsnz	((c:_count)),c
  5065  000818  4A54               	incf	((c:_count+1)),c
  5066  00081A  2A55               	line	165
  5067                           	
  5068                           i2l1845:
  5069  00081C                     ;Prob1.c: 165:         if(strstr(mystring, "q") != ((void*)0))
  5070                           		movlw	low(_mystring)
  5071  00081C  0ED1               	movwf	((c:i2strstr@h)),c
  5072  00081E  6E0E               	movlw	high(_mystring)
  5073  000820  0E00               	movwf	((c:i2strstr@h+1)),c
  5074  000822  6E0F               
  5075                           		movlw	low(STR_3)
  5076  000824  0E0E               	movwf	((c:i2strstr@n)),c
  5077  000826  6E10               	movlw	high(STR_3)
  5078  000828  0E06               	movwf	((c:i2strstr@n+1)),c
  5079  00082A  6E11               
  5080                           	call	i2_strstr	;wreg free
  5081  00082C  EC4F  F007         	movf	(0+?i2_strstr),c,w
  5082  000830  500E               iorwf	(1+?i2_strstr),c,w
  5083  000832  100F               	btfsc	status,2
  5084  000834  B4D8               	goto	i2u149_41
  5085  000836  EF1F  F004         	goto	i2u149_40
  5086  00083A  EF21  F004         
  5087                           i2u149_41:
  5088  00083E                     	goto	i2l1849
  5089  00083E  EF28  F004         i2u149_40:
  5090  000842                     	line	167
  5091                           	
  5092                           i2l1847:
  5093  000842                     ;Prob1.c: 166:         {;Prob1.c: 167:             TMR1ON = 0;
  5094                           	bcf	c:(32360/8),(32360)&7	;volatile
  5095  000842  90CD               	line	168
  5096                           ;Prob1.c: 168:             LATDbits.LATD0 = 0;
  5097                           	bcf	((c:3980)),c,0	;volatile
  5098  000844  908C               	line	169
  5099                           ;Prob1.c: 169:             LATDbits.LATD1 = 0;
  5100                           	bcf	((c:3980)),c,1	;volatile
  5101  000846  928C               	line	170
  5102                           ;Prob1.c: 170:             LATDbits.LATD2 = 0;
  5103                           	bcf	((c:3980)),c,2	;volatile
  5104  000848  948C               	line	171
  5105                           ;Prob1.c: 171:             LATDbits.LATD3 = 0;
  5106                           	bcf	((c:3980)),c,3	;volatile
  5107  00084A  968C               	line	172
  5108                           ;Prob1.c: 172:             return;
  5109                           	goto	i2l123
  5110  00084C  EF7F  F004         	line	173
  5111                           ;Prob1.c: 173:         }
  5112                           	
  5113                           i2l122:
  5114  000850                     	line	174
  5115                           	
  5116                           i2l1849:
  5117  000850                     ;Prob1.c: 174:         if(count >= max_count)
  5118                           		movf	((c:_max_count)),c,w
  5119  000850  5058               	subwf	((c:_count)),c,w
  5120  000852  5C54               	movf	((c:_count+1)),c,w
  5121  000854  5055               	xorlw	80h
  5122  000856  0A80               	movwf	(??_Hi_ISR+0+0)&0ffh,c
  5123  000858  6E14               	movf	((c:_max_count+1)),c,w
  5124  00085A  5059               	xorlw	80h
  5125  00085C  0A80               	subwfb	(??_Hi_ISR+0+0)&0ffh,c,w
  5126  00085E  5814               	btfss	status,0
  5127  000860  A0D8               	goto	i2u150_41
  5128  000862  EF35  F004         	goto	i2u150_40
  5129  000866  EF37  F004         
  5130                           i2u150_41:
  5131  00086A                     	goto	i2l123
  5132  00086A  EF7F  F004         i2u150_40:
  5133  00086E                     	line	177
  5134                           	
  5135                           i2l1851:
  5136  00086E                     ;Prob1.c: 175:         {;Prob1.c: 177:             if(num_led>=1)
  5137                           	movlb	0	; () banked
  5138  00086E  0100               	btfsc	((_num_led+1))&0ffh,7
  5139  000870  BFBD               	goto	i2u151_41
  5140  000872  EF43  F004         	movf	((_num_led+1))&0ffh,w
  5141  000876  51BD               	bnz	i2u151_40
  5142  000878  E108               	decf	((_num_led))&0ffh,w
  5143  00087A  05BC               	btfss	status,0
  5144  00087C  A0D8               	goto	i2u151_41
  5145  00087E  EF43  F004         	goto	i2u151_40
  5146  000882  EF45  F004         
  5147                           i2u151_41:
  5148  000886                     	goto	i2l125
  5149  000886  EF46  F004         i2u151_40:
  5150  00088A                     	line	178
  5151                           	
  5152                           i2l1853:; BSR set to: 0
  5153  00088A                     
  5154                           ;Prob1.c: 178:                 LATDbits.LATD0 ^= 1;
  5155                           	btg	((c:3980)),c,0	;volatile
  5156  00088A  708C               	
  5157                           i2l125:; BSR set to: 0
  5158  00088C                     
  5159                           	line	179
  5160                           ;Prob1.c: 179:             if(num_led>=2)
  5161                           	btfsc	((_num_led+1))&0ffh,7
  5162  00088C  BFBD               	goto	i2u152_41
  5163  00088E  EF52  F004         	movf	((_num_led+1))&0ffh,w
  5164  000892  51BD               	bnz	i2u152_40
  5165  000894  E109               	movlw	2
  5166  000896  0E02               	subwf	 ((_num_led))&0ffh,w
  5167  000898  5DBC               	btfss	status,0
  5168  00089A  A0D8               	goto	i2u152_41
  5169  00089C  EF52  F004         	goto	i2u152_40
  5170  0008A0  EF54  F004         
  5171                           i2u152_41:
  5172  0008A4                     	goto	i2l126
  5173  0008A4  EF55  F004         i2u152_40:
  5174  0008A8                     	line	180
  5175                           	
  5176                           i2l1855:; BSR set to: 0
  5177  0008A8                     
  5178                           ;Prob1.c: 180:                 LATDbits.LATD1 ^= 1;
  5179                           	btg	((c:3980)),c,1	;volatile
  5180  0008A8  728C               	
  5181                           i2l126:; BSR set to: 0
  5182  0008AA                     
  5183                           	line	181
  5184                           ;Prob1.c: 181:             if(num_led>=3)
  5185                           	btfsc	((_num_led+1))&0ffh,7
  5186  0008AA  BFBD               	goto	i2u153_41
  5187  0008AC  EF61  F004         	movf	((_num_led+1))&0ffh,w
  5188  0008B0  51BD               	bnz	i2u153_40
  5189  0008B2  E109               	movlw	3
  5190  0008B4  0E03               	subwf	 ((_num_led))&0ffh,w
  5191  0008B6  5DBC               	btfss	status,0
  5192  0008B8  A0D8               	goto	i2u153_41
  5193  0008BA  EF61  F004         	goto	i2u153_40
  5194  0008BE  EF63  F004         
  5195                           i2u153_41:
  5196  0008C2                     	goto	i2l127
  5197  0008C2  EF64  F004         i2u153_40:
  5198  0008C6                     	line	182
  5199                           	
  5200                           i2l1857:; BSR set to: 0
  5201  0008C6                     
  5202                           ;Prob1.c: 182:                 LATDbits.LATD2 ^= 1;
  5203                           	btg	((c:3980)),c,2	;volatile
  5204  0008C6  748C               	
  5205                           i2l127:; BSR set to: 0
  5206  0008C8                     
  5207                           	line	183
  5208                           ;Prob1.c: 183:             if(num_led>=4)
  5209                           	btfsc	((_num_led+1))&0ffh,7
  5210  0008C8  BFBD               	goto	i2u154_41
  5211  0008CA  EF70  F004         	movf	((_num_led+1))&0ffh,w
  5212  0008CE  51BD               	bnz	i2u154_40
  5213  0008D0  E109               	movlw	4
  5214  0008D2  0E04               	subwf	 ((_num_led))&0ffh,w
  5215  0008D4  5DBC               	btfss	status,0
  5216  0008D6  A0D8               	goto	i2u154_41
  5217  0008D8  EF70  F004         	goto	i2u154_40
  5218  0008DC  EF72  F004         
  5219                           i2u154_41:
  5220  0008E0                     	goto	i2l1861
  5221  0008E0  EF75  F004         i2u154_40:
  5222  0008E4                     	line	184
  5223                           	
  5224                           i2l1859:; BSR set to: 0
  5225  0008E4                     
  5226                           ;Prob1.c: 184:                 LATDbits.LATD3 ^= 1;
  5227                           	btg	((c:3980)),c,3	;volatile
  5228  0008E4  768C               	goto	i2l1861
  5229  0008E6  EF75  F004         	
  5230                           i2l128:; BSR set to: 0
  5231  0008EA                     
  5232                           	line	185
  5233                           	
  5234                           i2l1861:; BSR set to: 0
  5235  0008EA                     
  5236                           ;Prob1.c: 185:             count = 0;
  5237                           	movlw	high(0)
  5238  0008EA  0E00               	movwf	((c:_count+1)),c
  5239  0008EC  6E55               	movlw	low(0)
  5240  0008EE  0E00               	movwf	((c:_count)),c
  5241  0008F0  6E54               	goto	i2l123
  5242  0008F2  EF7F  F004         	line	186
  5243                           ;Prob1.c: 186:         }
  5244                           	
  5245                           i2l124:; BSR set to: 0
  5246  0008F6                     
  5247                           	goto	i2l123
  5248  0008F6  EF7F  F004         	line	187
  5249                           ;Prob1.c: 187:     }
  5250                           	
  5251                           i2l121:; BSR set to: 0
  5252  0008FA                     
  5253                           	goto	i2l123
  5254  0008FA  EF7F  F004         	line	189
  5255                           	
  5256                           i2l1863:; BSR set to: 0
  5257  0008FE                     
  5258                           	line	190
  5259                           ;Prob1.c: 189:     return ;
  5260                           	
  5261                           i2l123:
  5262  0008FE                     	movff	??_Hi_ISR+6,tablat+0
  5263  0008FE  C01A  FFF5         	movff	??_Hi_ISR+5,tblptru+0
  5264  000902  C019  FFF8         	movff	??_Hi_ISR+4,tblptrh+0
  5265  000906  C018  FFF7         	movff	??_Hi_ISR+3,tblptrl+0
  5266  00090A  C017  FFF6         	movff	??_Hi_ISR+2,fsr2h+0
  5267  00090E  C016  FFDA         	movff	??_Hi_ISR+1,fsr2l+0
  5268  000912  C015  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  5269  000916  925A               	retfie f
  5270  000918  0011               	opt stack 0
  5271                           GLOBAL	__end_of_Hi_ISR
  5272                           	__end_of_Hi_ISR:
  5273  00091A                     	signat	_Hi_ISR,89
  5274                           	global	i2_strstr
  5275                           
  5276 ;; *************** function i2_strstr *****************
  5277 ;; Defined at:
  5278 ;;		line 143 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;  h               2   13[COMRAM] PTR const unsigned char 
  5281 ;;		 -> NULL(0), mystring(10), 
  5282 ;;  n               2   15[COMRAM] PTR const unsigned char 
  5283 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  strstr          2   17[COMRAM] unsigned int 
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  2   13[COMRAM] PTR unsigned char 
  5288 ;; Registers used:
  5289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5295 ;;      Params:         4       0       0       0       0       0       0
  5296 ;;      Locals:         2       0       0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0       0       0
  5298 ;;      Totals:         6       0       0       0       0       0       0
  5299 ;;Total ram usage:        6 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    1
  5302 ;; This function calls:
  5303 ;;		i2_strchr
  5304 ;;		i2_strlen
  5305 ;;		i2_strncmp
  5306 ;; This function is called by:
  5307 ;;		_Hi_ISR
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           psect	text23,class=CODE,space=0,reloc=2,group=0
  5311                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  5312                           	line	143
  5313                           global __ptext23
  5314                           __ptext23:
  5315  000E9E                     psect	text23
  5316                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strstr.c"
  5317                           	line	143
  5318                           	global	__size_ofi2_strstr
  5319                           	__size_ofi2_strstr	equ	__end_ofi2_strstr-i2_strstr
  5320  0000                     	
  5321                           i2_strstr:
  5322  000E9E                     ;incstack = 0
  5323                           	opt	stack 23
  5324                           	line	146
  5325                           	
  5326                           i2l1803:
  5327  000E9E                     	movf	((c:i2strstr@n)),c,w
  5328  000E9E  5010               iorwf	((c:i2strstr@n+1)),c,w
  5329  000EA0  1011               	btfsc	status,2
  5330  000EA2  B4D8               	goto	i2u142_41
  5331  000EA4  EF56  F007         	goto	i2u142_40
  5332  000EA8  EF58  F007         
  5333                           i2u142_41:
  5334  000EAC                     	goto	i2l1819
  5335  000EAC  EFB4  F007         i2u142_40:
  5336  000EB0                     	line	147
  5337                           	
  5338                           i2l1805:
  5339  000EB0                     		movff	(c:i2strstr@n),(c:i2strlen@s)
  5340  000EB0  C010  F001         	movff	(c:i2strstr@n+1),(c:i2strlen@s+1)
  5341  000EB4  C011  F002         
  5342                           	call	i2_strlen	;wreg free
  5343  000EB8  ECE3  F009         	movff	0+?i2_strlen,(c:i2strstr@nl)
  5344  000EBC  C001  F012         	movff	1+?i2_strlen,(c:i2strstr@nl+1)
  5345  000EC0  C002  F013         	line	148
  5346                           	goto	i2l1815
  5347  000EC4  EF99  F007         	
  5348                           i2l859:
  5349  000EC8                     	line	149
  5350                           	
  5351                           i2l1807:
  5352  000EC8                     		movff	(c:i2strstr@h),(c:i2strncmp@_l)
  5353  000EC8  C00E  F001         	movff	(c:i2strstr@h+1),(c:i2strncmp@_l+1)
  5354  000ECC  C00F  F002         
  5355                           		movff	(c:i2strstr@n),(c:i2strncmp@_r)
  5356  000ED0  C010  F003         	movff	(c:i2strstr@n+1),(c:i2strncmp@_r+1)
  5357  000ED4  C011  F004         
  5358                           	movff	(c:i2strstr@nl),(c:i2strncmp@n)
  5359  000ED8  C012  F005         	movff	(c:i2strstr@nl+1),(c:i2strncmp@n+1)
  5360  000EDC  C013  F006         	call	i2_strncmp	;wreg free
  5361  000EE0  EC8A  F005         	movf	(0+?i2_strncmp),c,w
  5362  000EE4  5001               iorwf	(1+?i2_strncmp),c,w
  5363  000EE6  1002               	btfss	status,2
  5364  000EE8  A4D8               	goto	i2u143_41
  5365  000EEA  EF79  F007         	goto	i2u143_40
  5366  000EEE  EF7B  F007         
  5367                           i2u143_41:
  5368  000EF2                     	goto	i2l1813
  5369  000EF2  EF83  F007         i2u143_40:
  5370  000EF6                     	line	150
  5371                           	
  5372                           i2l1809:
  5373  000EF6                     		movff	(c:i2strstr@h),(c:?i2_strstr)
  5374  000EF6  C00E  F00E         	movff	(c:i2strstr@h+1),(c:?i2_strstr+1)
  5375  000EFA  C00F  F00F         
  5376                           	goto	i2l861
  5377  000EFE  EFBA  F007         	
  5378                           i2l1811:
  5379  000F02                     	goto	i2l861
  5380  000F02  EFBA  F007         	
  5381                           i2l860:
  5382  000F06                     	line	151
  5383                           	
  5384                           i2l1813:
  5385  000F06                     	movlw	low(01h)
  5386  000F06  0E01               	addwf	((c:i2strstr@h)),c,w
  5387  000F08  240E               	movwf	((c:i2strchr@s)),c
  5388  000F0A  6E01               	movlw	high(01h)
  5389  000F0C  0E00               	addwfc	((c:i2strstr@h+1)),c,w
  5390  000F0E  200F               	movwf	1+((c:i2strchr@s)),c
  5391  000F10  6E02               	movff	(c:i2strstr@n),tblptrl
  5392  000F12  C010  FFF6         	movff	(c:i2strstr@n+1),tblptrh
  5393  000F16  C011  FFF7         	if	0	;tblptru may be non-zero
  5394  000F1A                     	clrf	tblptru
  5396  000F1A                     	if	0	;tblptru may be non-zero
  5397  000F1A                     	global __mediumconst
  5398                           movlw	low highword(__mediumconst)
  5401  000F1A                     	tblrd	*
  5402  000F1A  0008               	
  5403                           	movf	tablat,w
  5404  000F1C  50F5               
  5405                           	movwf	((c:i2strchr@c)),c
  5406  000F1E  6E03               	clrf	((c:i2strchr@c+1)),c
  5407  000F20  6A04               	call	i2_strchr	;wreg free
  5408  000F22  EC8C  F009         	movff	0+?i2_strchr,(c:i2strstr@h)
  5409  000F26  C001  F00E         	movff	1+?i2_strchr,(c:i2strstr@h+1)
  5410  000F2A  C002  F00F         	goto	i2l1815
  5411  000F2E  EF99  F007         	line	152
  5412                           	
  5413                           i2l858:
  5414  000F32                     	line	148
  5415                           	
  5416                           i2l1815:
  5417  000F32                     	movf	((c:i2strstr@h)),c,w
  5418  000F32  500E               iorwf	((c:i2strstr@h+1)),c,w
  5419  000F34  100F               	btfsc	status,2
  5420  000F36  B4D8               	goto	i2u144_41
  5421  000F38  EFA0  F007         	goto	i2u144_40
  5422  000F3C  EFA2  F007         
  5423                           i2u144_41:
  5424  000F40                     	goto	i2l1819
  5425  000F40  EFB4  F007         i2u144_40:
  5426  000F44                     	
  5427                           i2l1817:
  5428  000F44                     	movff	(c:i2strstr@h),fsr2l
  5429  000F44  C00E  FFD9         	movff	(c:i2strstr@h+1),fsr2h
  5430  000F48  C00F  FFDA         	movf	indf2,w
  5431  000F4C  50DF               	btfss	status,2
  5432  000F4E  A4D8               	goto	i2u145_41
  5433  000F50  EFAC  F007         	goto	i2u145_40
  5434  000F54  EFAE  F007         i2u145_41:
  5435  000F58                     	goto	i2l1807
  5436  000F58  EF64  F007         i2u145_40:
  5437  000F5C                     	goto	i2l1819
  5438  000F5C  EFB4  F007         	
  5439                           i2l863:
  5440  000F60                     	goto	i2l1819
  5441  000F60  EFB4  F007         	
  5442                           i2l864:
  5443  000F64                     	goto	i2l1819
  5444  000F64  EFB4  F007         	line	153
  5445                           	
  5446                           i2l857:
  5447  000F68                     	line	154
  5448                           	
  5449                           i2l1819:
  5450  000F68                     		movlw	low(0)
  5451  000F68  0E00               	movwf	((c:?i2_strstr)),c
  5452  000F6A  6E0E               	movlw	high(0)
  5453  000F6C  0E00               	movwf	((c:?i2_strstr+1)),c
  5454  000F6E  6E0F               
  5455                           	goto	i2l861
  5456  000F70  EFBA  F007         	
  5457                           i2l1821:
  5458  000F74                     	line	171
  5459                           	
  5460                           i2l861:
  5461  000F74                     	return	;funcret
  5462  000F74  0012               	opt stack 0
  5463                           GLOBAL	__end_ofi2_strstr
  5464                           	__end_ofi2_strstr:
  5465  000F76                     	signat	i2_strstr,90
  5466                           	global	i2_strncmp
  5467                           
  5468 ;; *************** function i2_strncmp *****************
  5469 ;; Defined at:
  5470 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5473 ;;		 -> NULL(0), mystring(10), 
  5474 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5475 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  5476 ;;  n               2    4[COMRAM] unsigned int 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  strncmp         2   11[COMRAM] PTR const unsigned char 
  5479 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  5480 ;;  strncmp         2    9[COMRAM] PTR const unsigned char 
  5481 ;;		 -> NULL(0), mystring(10), 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  2    0[COMRAM] int 
  5484 ;; Registers used:
  5485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5491 ;;      Params:         6       0       0       0       0       0       0
  5492 ;;      Locals:         4       0       0       0       0       0       0
  5493 ;;      Temps:          3       0       0       0       0       0       0
  5494 ;;      Totals:        13       0       0       0       0       0       0
  5495 ;;Total ram usage:       13 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		i2_strstr
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           psect	text24,class=CODE,space=0,reloc=2,group=0
  5504                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  5505                           	line	3
  5506                           global __ptext24
  5507                           __ptext24:
  5508  000B14                     psect	text24
  5509                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strncmp.c"
  5510                           	line	3
  5511                           	global	__size_ofi2_strncmp
  5512                           	__size_ofi2_strncmp	equ	__end_ofi2_strncmp-i2_strncmp
  5513  0000                     	
  5514                           i2_strncmp:
  5515  000B14                     ;incstack = 0
  5516                           	opt	stack 23
  5517                           	line	5
  5518                           	
  5519                           i2l1593:
  5520  000B14                     		movff	(c:i2strncmp@_l),(c:i2strncmp@l)
  5521  000B14  C001  F00A         	movff	(c:i2strncmp@_l+1),(c:i2strncmp@l+1)
  5522  000B18  C002  F00B         
  5523                           		movff	(c:i2strncmp@_r),(c:i2strncmp@r)
  5524  000B1C  C003  F00C         	movff	(c:i2strncmp@_r+1),(c:i2strncmp@r+1)
  5525  000B20  C004  F00D         
  5526                           	line	6
  5527                           	decf	((c:i2strncmp@n)),c
  5528  000B24  0605               	btfss	status,0
  5529  000B26  A0D8               	decf	((c:i2strncmp@n+1)),c
  5530  000B28  0606               		incf	((c:i2strncmp@n)),c,w
  5531  000B2A  2805               	bnz	i2u112_41
  5532  000B2C  E106               	incf	((c:i2strncmp@n+1)),c,w
  5533  000B2E  2806               	btfss	status,2
  5534  000B30  A4D8               	goto	i2u112_41
  5535  000B32  EF9D  F005         	goto	i2u112_40
  5536  000B36  EF9F  F005         
  5537                           i2u112_41:
  5538  000B3A                     	goto	i2l1601
  5539  000B3A  EFB2  F005         i2u112_40:
  5540  000B3E                     	
  5541                           i2l1595:
  5542  000B3E                     	movlw	high(0)
  5543  000B3E  0E00               	movwf	((c:?i2_strncmp+1)),c
  5544  000B40  6E02               	movlw	low(0)
  5545  000B42  0E00               	movwf	((c:?i2_strncmp)),c
  5546  000B44  6E01               	goto	i2l880
  5547  000B46  EF07  F006         	
  5548                           i2l1597:
  5549  000B4A                     	goto	i2l880
  5550  000B4A  EF07  F006         	
  5551                           i2l879:
  5552  000B4E                     	line	7
  5553                           	goto	i2l1601
  5554  000B4E  EFB2  F005         	
  5555                           i2l882:
  5556  000B52                     	
  5557                           i2l1599:
  5558  000B52                     	infsnz	((c:i2strncmp@l)),c
  5559  000B52  4A0A               	incf	((c:i2strncmp@l+1)),c
  5560  000B54  2A0B               	infsnz	((c:i2strncmp@r)),c
  5561  000B56  4A0C               	incf	((c:i2strncmp@r+1)),c
  5562  000B58  2A0D               	decf	((c:i2strncmp@n)),c
  5563  000B5A  0605               	btfss	status,0
  5564  000B5C  A0D8               	decf	((c:i2strncmp@n+1)),c
  5565  000B5E  0606               	goto	i2l1601
  5566  000B60  EFB2  F005         	
  5567                           i2l881:
  5568  000B64                     	
  5569                           i2l1601:
  5570  000B64                     	movff	(c:i2strncmp@l),fsr2l
  5571  000B64  C00A  FFD9         	movff	(c:i2strncmp@l+1),fsr2h
  5572  000B68  C00B  FFDA         	movf	indf2,w
  5573  000B6C  50DF               	btfsc	status,2
  5574  000B6E  B4D8               	goto	i2u113_41
  5575  000B70  EFBC  F005         	goto	i2u113_40
  5576  000B74  EFBE  F005         i2u113_41:
  5577  000B78                     	goto	i2l1609
  5578  000B78  EFED  F005         i2u113_40:
  5579  000B7C                     	
  5580                           i2l1603:
  5581  000B7C                     	movff	(c:i2strncmp@r),tblptrl
  5582  000B7C  C00C  FFF6         	movff	(c:i2strncmp@r+1),tblptrh
  5583  000B80  C00D  FFF7         	if	0	;tblptru may be non-zero
  5584  000B84                     	clrf	tblptru
  5586  000B84                     	if	0	;tblptru may be non-zero
  5587  000B84                     	global __mediumconst
  5588                           movlw	low highword(__mediumconst)
  5591  000B84                     	tblrd	*
  5592  000B84  0008               	
  5593                           	movf	tablat,w
  5594  000B86  50F5               	iorlw	0
  5595  000B88  0900               	btfsc	status,2
  5596  000B8A  B4D8               	goto	i2u114_41
  5597  000B8C  EFCA  F005         	goto	i2u114_40
  5598  000B90  EFCC  F005         i2u114_41:
  5599  000B94                     	goto	i2l1609
  5600  000B94  EFED  F005         i2u114_40:
  5601  000B98                     	
  5602                           i2l1605:
  5603  000B98                     	movf	((c:i2strncmp@n)),c,w
  5604  000B98  5005               iorwf	((c:i2strncmp@n+1)),c,w
  5605  000B9A  1006               	btfsc	status,2
  5606  000B9C  B4D8               	goto	i2u115_41
  5607  000B9E  EFD3  F005         	goto	i2u115_40
  5608  000BA2  EFD5  F005         
  5609                           i2u115_41:
  5610  000BA6                     	goto	i2l1609
  5611  000BA6  EFED  F005         i2u115_40:
  5612  000BAA                     	
  5613                           i2l1607:
  5614  000BAA                     	movff	(c:i2strncmp@l),fsr2l
  5615  000BAA  C00A  FFD9         	movff	(c:i2strncmp@l+1),fsr2h
  5616  000BAE  C00B  FFDA         	movf	indf2,w
  5617  000BB2  50DF               	movwf	(??i2_strncmp+0+0)&0ffh,c
  5618  000BB4  6E07               	movff	(c:i2strncmp@r),tblptrl
  5619  000BB6  C00C  FFF6         	movff	(c:i2strncmp@r+1),tblptrh
  5620  000BBA  C00D  FFF7         	if	0	;tblptru may be non-zero
  5621  000BBE                     	clrf	tblptru
  5623  000BBE                     	if	0	;tblptru may be non-zero
  5624  000BBE                     	global __mediumconst
  5625                           movlw	low highword(__mediumconst)
  5628  000BBE                     	tblrd	*
  5629  000BBE  0008               	
  5630                           	movf	tablat,w
  5631  000BC0  50F5               	xorwf	((??i2_strncmp+0+0)),c,w
  5632  000BC2  1807               
  5633                           	btfsc	status,2
  5634  000BC4  B4D8               	goto	i2u116_41
  5635  000BC6  EFE7  F005         	goto	i2u116_40
  5636  000BCA  EFE9  F005         i2u116_41:
  5637  000BCE                     	goto	i2l1599
  5638  000BCE  EFA9  F005         i2u116_40:
  5639  000BD2                     	goto	i2l1609
  5640  000BD2  EFED  F005         	
  5641                           i2l884:
  5642  000BD6                     	goto	i2l1609
  5643  000BD6  EFED  F005         	
  5644                           i2l885:
  5645  000BDA                     	line	8
  5646                           	
  5647                           i2l1609:
  5648  000BDA                     	movff	(c:i2strncmp@r),tblptrl
  5649  000BDA  C00C  FFF6         	movff	(c:i2strncmp@r+1),tblptrh
  5650  000BDE  C00D  FFF7         	if	0	;tblptru may be non-zero
  5651  000BE2                     	clrf	tblptru
  5653  000BE2                     	if	0	;tblptru may be non-zero
  5654  000BE2                     	global __mediumconst
  5655                           movlw	low highword(__mediumconst)
  5658  000BE2                     	tblrd	*
  5659  000BE2  0008               	
  5660                           	movf	tablat,w
  5661  000BE4  50F5               	movwf	(??i2_strncmp+0+0)&0ffh,c
  5662  000BE6  6E07               	clrf	(??i2_strncmp+0+0+1)&0ffh,c
  5663  000BE8  6A08               
  5664                           	comf	(??i2_strncmp+0+0),c
  5665  000BEA  1E07               	comf	(??i2_strncmp+0+1),c
  5666  000BEC  1E08               	infsnz	(??i2_strncmp+0+0),c
  5667  000BEE  4A07               	incf	(??i2_strncmp+0+1),c
  5668  000BF0  2A08               	movff	(c:i2strncmp@l),fsr2l
  5669  000BF2  C00A  FFD9         	movff	(c:i2strncmp@l+1),fsr2h
  5670  000BF6  C00B  FFDA         	movf	indf2,w
  5671  000BFA  50DF               	movwf	(??i2_strncmp+2+0)&0ffh,c
  5672  000BFC  6E09               	movf	((??i2_strncmp+2+0)),c,w
  5673  000BFE  5009               	addwf	(??i2_strncmp+0+0),c,w
  5674  000C00  2407               	movwf	((c:?i2_strncmp)),c
  5675  000C02  6E01               	movlw	0
  5676  000C04  0E00               	addwfc	(??i2_strncmp+0+1),c,w
  5677  000C06  2008               	movwf	1+((c:?i2_strncmp)),c
  5678  000C08  6E02               	goto	i2l880
  5679  000C0A  EF07  F006         	
  5680                           i2l1611:
  5681  000C0E                     	line	9
  5682                           	
  5683                           i2l880:
  5684  000C0E                     	return	;funcret
  5685  000C0E  0012               	opt stack 0
  5686                           GLOBAL	__end_ofi2_strncmp
  5687                           	__end_ofi2_strncmp:
  5688  000C10                     	signat	i2_strncmp,90
  5689                           	global	i2_strlen
  5690                           
  5691 ;; *************** function i2_strlen *****************
  5692 ;; Defined at:
  5693 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5696 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  strlen          2    4[COMRAM] PTR const unsigned char 
  5699 ;;		 -> STR_4(2), STR_3(2), STR_2(6), STR_1(7), 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  2    0[COMRAM] unsigned int 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5709 ;;      Params:         2       0       0       0       0       0       0
  5710 ;;      Locals:         2       0       0       0       0       0       0
  5711 ;;      Temps:          2       0       0       0       0       0       0
  5712 ;;      Totals:         6       0       0       0       0       0       0
  5713 ;;Total ram usage:        6 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; This function calls:
  5716 ;;		Nothing
  5717 ;; This function is called by:
  5718 ;;		i2_strstr
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           psect	text25,class=CODE,space=0,reloc=2,group=0
  5722                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  5723                           	line	12
  5724                           global __ptext25
  5725                           __ptext25:
  5726  0013C6                     psect	text25
  5727                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  5728                           	line	12
  5729                           	global	__size_ofi2_strlen
  5730                           	__size_ofi2_strlen	equ	__end_ofi2_strlen-i2_strlen
  5731  0000                     	
  5732                           i2_strlen:
  5733  0013C6                     ;incstack = 0
  5734                           	opt	stack 23
  5735                           	line	14
  5736                           	
  5737                           i2l1563:
  5738  0013C6                     		movff	(c:i2strlen@s),(c:i2strlen@a)
  5739  0013C6  C001  F005         	movff	(c:i2strlen@s+1),(c:i2strlen@a+1)
  5740  0013CA  C002  F006         
  5741                           	line	16
  5742                           	goto	i2l1567
  5743  0013CE  EFED  F009         	
  5744                           i2l874:
  5745  0013D2                     	line	17
  5746                           	
  5747                           i2l1565:
  5748  0013D2                     	infsnz	((c:i2strlen@s)),c
  5749  0013D2  4A01               	incf	((c:i2strlen@s+1)),c
  5750  0013D4  2A02               	goto	i2l1567
  5751  0013D6  EFED  F009         	line	18
  5752                           	
  5753                           i2l873:
  5754  0013DA                     	line	16
  5755                           	
  5756                           i2l1567:
  5757  0013DA                     	movff	(c:i2strlen@s),tblptrl
  5758  0013DA  C001  FFF6         	movff	(c:i2strlen@s+1),tblptrh
  5759  0013DE  C002  FFF7         	if	0	;tblptru may be non-zero
  5760  0013E2                     	clrf	tblptru
  5762  0013E2                     	if	0	;tblptru may be non-zero
  5763  0013E2                     	global __mediumconst
  5764                           movlw	low highword(__mediumconst)
  5767  0013E2                     	tblrd	*
  5768  0013E2  0008               	
  5769                           	movf	tablat,w
  5770  0013E4  50F5               	iorlw	0
  5771  0013E6  0900               	btfss	status,2
  5772  0013E8  A4D8               	goto	i2u106_41
  5773  0013EA  EFF9  F009         	goto	i2u106_40
  5774  0013EE  EFFB  F009         i2u106_41:
  5775  0013F2                     	goto	i2l1565
  5776  0013F2  EFE9  F009         i2u106_40:
  5777  0013F6                     	goto	i2l1569
  5778  0013F6  EFFD  F009         	
  5779                           i2l875:
  5780  0013FA                     	line	25
  5781                           	
  5782                           i2l1569:
  5783  0013FA                     	movff	(c:i2strlen@a),??i2_strlen+0+0
  5784  0013FA  C005  F003         	movff	(c:i2strlen@a+1),??i2_strlen+0+0+1
  5785  0013FE  C006  F004         	comf	(??i2_strlen+0+0),c
  5786  001402  1E03               	comf	(??i2_strlen+0+1),c
  5787  001404  1E04               	infsnz	(??i2_strlen+0+0),c
  5788  001406  4A03               	incf	(??i2_strlen+0+1),c
  5789  001408  2A04               	movf	((c:i2strlen@s)),c,w
  5790  00140A  5001               	addwf	(??i2_strlen+0+0),c,w
  5791  00140C  2403               	movwf	((c:?i2_strlen)),c
  5792  00140E  6E01               	movf	((c:i2strlen@s+1)),c,w
  5793  001410  5002               	addwfc	(??i2_strlen+0+1),c,w
  5794  001412  2004               	movwf	1+((c:?i2_strlen)),c
  5795  001414  6E02               	goto	i2l876
  5796  001416  EF0D  F00A         	
  5797                           i2l1571:
  5798  00141A                     	line	26
  5799                           	
  5800                           i2l876:
  5801  00141A                     	return	;funcret
  5802  00141A  0012               	opt stack 0
  5803                           GLOBAL	__end_ofi2_strlen
  5804                           	__end_ofi2_strlen:
  5805  00141C                     	signat	i2_strlen,90
  5806                           	global	i2_strchr
  5807                           
  5808 ;; *************** function i2_strchr *****************
  5809 ;; Defined at:
  5810 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5813 ;;		 -> NULL(0), mystring(10), 
  5814 ;;  c               2    2[COMRAM] int 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;		None
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  2    0[COMRAM] PTR unsigned char 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5826 ;;      Params:         4       0       0       0       0       0       0
  5827 ;;      Locals:         0       0       0       0       0       0       0
  5828 ;;      Temps:          1       0       0       0       0       0       0
  5829 ;;      Totals:         5       0       0       0       0       0       0
  5830 ;;Total ram usage:        5 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; This function calls:
  5833 ;;		Nothing
  5834 ;; This function is called by:
  5835 ;;		i2_strstr
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           psect	text26,class=CODE,space=0,reloc=2,group=0
  5839                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  5840                           	line	7
  5841                           global __ptext26
  5842                           __ptext26:
  5843  001318                     psect	text26
  5844                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strchr.c"
  5845                           	line	7
  5846                           	global	__size_ofi2_strchr
  5847                           	__size_ofi2_strchr	equ	__end_ofi2_strchr-i2_strchr
  5848  0000                     	
  5849                           i2_strchr:
  5850  001318                     ;incstack = 0
  5851                           	opt	stack 23
  5852                           	line	13
  5853                           	
  5854                           i2l867:
  5855  001318                     	line	14
  5856                           	
  5857                           i2l1541:
  5858  001318                     	movff	(c:i2strchr@s),fsr2l
  5859  001318  C001  FFD9         	movff	(c:i2strchr@s+1),fsr2h
  5860  00131C  C002  FFDA         	movf	((c:i2strchr@c)),c,w
  5861  001320  5003               xorwf	postinc2,w
  5862  001322  18DE               	btfss	status,2
  5863  001324  A4D8               	goto	i2u103_41
  5864  001326  EF97  F009         	goto	i2u103_40
  5865  00132A  EF99  F009         
  5866                           i2u103_41:
  5867  00132E                     	goto	i2l1547
  5868  00132E  EFA1  F009         i2u103_40:
  5869  001332                     	line	15
  5870                           	
  5871                           i2l1543:
  5872  001332                     		movff	(c:i2strchr@s),(c:?i2_strchr)
  5873  001332  C001  F001         	movff	(c:i2strchr@s+1),(c:?i2_strchr+1)
  5874  001336  C002  F002         
  5875                           	goto	i2l869
  5876  00133A  EFB7  F009         	
  5877                           i2l1545:
  5878  00133E                     	goto	i2l869
  5879  00133E  EFB7  F009         	line	16
  5880                           	
  5881                           i2l868:
  5882  001342                     	line	17
  5883                           	
  5884                           i2l1547:
  5885  001342                     	movff	(c:i2strchr@s),fsr2l
  5886  001342  C001  FFD9         	movff	(c:i2strchr@s+1),fsr2h
  5887  001346  C002  FFDA         	infsnz	((c:i2strchr@s)),c
  5888  00134A  4A01               	incf	((c:i2strchr@s+1)),c
  5889  00134C  2A02               	movf	indf2,w
  5890  00134E  50DF               	btfss	status,2
  5891  001350  A4D8               	goto	i2u104_41
  5892  001352  EFAD  F009         	goto	i2u104_40
  5893  001356  EFAF  F009         i2u104_41:
  5894  00135A                     	goto	i2l867
  5895  00135A  EF8C  F009         i2u104_40:
  5896  00135E                     	goto	i2l1549
  5897  00135E  EFB1  F009         	
  5898                           i2l870:
  5899  001362                     	line	18
  5900                           	
  5901                           i2l1549:
  5902  001362                     		movlw	low(0)
  5903  001362  0E00               	movwf	((c:?i2_strchr)),c
  5904  001364  6E01               	movlw	high(0)
  5905  001366  0E00               	movwf	((c:?i2_strchr+1)),c
  5906  001368  6E02               
  5907                           	goto	i2l869
  5908  00136A  EFB7  F009         	
  5909                           i2l1551:
  5910  00136E                     	line	20
  5911                           	
  5912                           i2l869:
  5913  00136E                     	return	;funcret
  5914  00136E  0012               	opt stack 0
  5915                           GLOBAL	__end_ofi2_strchr
  5916                           	__end_ofi2_strchr:
  5917  001370                     	signat	i2_strchr,90
  5918                           psect	smallconst
  5919                           	db 0	; dummy byte at the end
  5920  000610  00                 	global	__smallconst
  5921                           	global	__mediumconst
  5922                           	GLOBAL	__activetblptr
  5923                           __activetblptr	EQU	1
  5924  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  5925                           	PSECT	rparam,class=COMRAM,space=1,noexec
  5926                           	GLOBAL	__Lrparam
  5927                           	FNCONF	rparam,??,?
  5928                           	GLOBAL	___rparam_used
  5929                           	___rparam_used EQU 1
  5930  0000                     	GLOBAL	___param_bank
  5931                           	___param_bank EQU 0
  5932  0000                     GLOBAL	__Lparam, __Hparam
  5933                           GLOBAL	__Lrparam, __Hrparam
  5934                           __Lparam	EQU	__Lrparam
  5935  0000                     __Hparam	EQU	__Hrparam
  5936  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  5937                           	global	btemp
  5938                           btemp:
  5939  00005A                     	ds	1
  5940  00005A                     	global	int$flags
  5941                           	int$flags	set btemp
  5942  0000                     	global	wtemp8
  5943                           	wtemp8 set btemp+1
  5944  0000                     	global	ttemp5
  5945                           	ttemp5 set btemp+1
  5946  0000                     	global	ttemp6
  5947                           	ttemp6 set btemp+4
  5948  0000                     	global	ttemp7
  5949                           	ttemp7 set btemp+8
  5950  0000                     	end


Data Sizes:
    Strings     15
    Constant    0
    Data        64
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     71      89
    BANK0           128     19      91
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(BANK0[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(BANK0[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(BANK0[10]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(BANK0[10]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(BANK0[10]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[6]), STR_1(CODE[7]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(BANK0[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->___xxtofl
    i1_strstr->i1_strncmp
    ___xxtofl->___lwdiv
    ___lwdiv->___wmul
    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->i2_strstr
    i2_strstr->i2_strncmp

Critical Paths under _main in BANK0

    _main->_strstr
    _strstr->_strncmp
    _ModeBreath->_ClearBuffer
    _ModeBlink->_ClearBuffer

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1789
                        _ClearBuffer
               _INTERRUPT_Initialize
                          _ModeBlink
                         _ModeBreath
                    _UART_Initialize
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     2      4    1585
                                             13 BANK0      6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                             13     7      6     453
                                              0 BANK0     13     7      6
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     166
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               5     1      4     240
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ModeBreath                                           0     0      0      68
                        _ClearBuffer
                           _LED_Init
 ---------------------------------------------------------------------------------
 (2) _LED_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ModeBlink                                            0     0      0      68
                        _ClearBuffer
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                              18    18      0    2502
                                             53 COMRAM    18    18      0
                        _MyusartRead
                            ___lwdiv
                             ___wmul
                           ___xxtofl
                           i1_strstr
 ---------------------------------------------------------------------------------
 (4) i1_strstr                                             6     2      4     833
                                             39 COMRAM     6     2      4
                           i1_strchr
                           i1_strlen
                          i1_strncmp
 ---------------------------------------------------------------------------------
 (5) i1_strncmp                                           13     7      6     303
                                             26 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (5) i1_strlen                                             6     4      2     116
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) i1_strchr                                             5     1      4     140
                                             26 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     398
                                             39 COMRAM    14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     463
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                             32 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          0     0      0     470
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                             26 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      22
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               7     7      0     833
                                             19 COMRAM     7     7      0
                           i2_strstr
 ---------------------------------------------------------------------------------
 (7) i2_strstr                                             6     2      4     833
                                             13 COMRAM     6     2      4
                           i2_strchr
                           i2_strlen
                          i2_strncmp
 ---------------------------------------------------------------------------------
 (8) i2_strncmp                                           13     7      6     303
                                              0 COMRAM    13     7      6
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             6     4      2     116
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) i2_strchr                                             5     1      4     140
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _INTERRUPT_Initialize
   _ModeBlink
     _ClearBuffer
   _ModeBreath
     _ClearBuffer
     _LED_Init
   _UART_Initialize
   _strstr
     _strchr
     _strlen
     _strncmp

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   ___xxtofl
     ___lwdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   i1_strstr
     i1_strchr
     i1_strlen
     i1_strncmp

 _Hi_ISR (ROOT)
   i2_strstr
     i2_strchr
     i2_strlen
     i2_strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     13      5B       5       71.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     47      59       1       70.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4      15        0.0%
DATA                 0      0      B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Dec 22 16:06:54 2018

                           l99 154C                             bsr 000FE0            ___wmul@multiplicand 001D  
                  __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                            l102 0FBE  
                          l103 0FE0                            l111 1036                            l104 1002  
                          l112 1068                            l105 1024                            l113 10AA  
                          l106 1024                            l114 10AE                            l131 1554  
                          l115 10B2                            l116 10B2                            l150 11A0  
                          l134 1524                            l151 11A8                            l171 14D8  
                          l149 116C                            l860 0C7C                            l861 0CEC  
                          l870 12B2                            l863 0CD8                            l880 0A16  
                          l864 0CDC                            l873 1222                            l881 096C  
                          l857 0CE0                            l874 1218                            l882 095A  
                          l858 0CA8                            l867 1266                            l875 1242  
                          l859 0C3C                            l868 1292                            l876 1264  
                          l884 09DE                            l869 12BE                            l885 09E2  
                          l879 0956                   __CFG_CPB$OFF 000000                            _PR2 000FCB  
                 __CFG_CPD$OFF 000000                            u840 1164                            u841 1160  
                          u850 119C                            u930 123E                            u851 1198  
                          u931 123A                            u940 0946                            u941 0942  
                          u950 0984                            u951 0980                            u960 09A0  
                          u961 099C                            u970 09B2                            u971 09AE  
                          u980 09DA                            u981 09D6                            u990 1282  
                          u991 127E                            _str 0048                   ___awmod@sign 0020  
                          wreg 000FE8                   __CFG_IESO$ON 000000                   __CFG_LVP$OFF 000000  
                 __CFG_WDT$OFF 000000                           l1401 113E                           l1411 1180  
                         l1403 1148                           l1405 1168                           l1413 11A0  
                         l1421 14AE                           l1501 0952                           l1407 116C  
                         l1431 14C0                           l1423 14B8                           l1415 14A2  
                         l1511 09B2                           l1503 095A                           l1409 117C  
                         l1441 14D2                           l1433 14C2                           l1425 14BA  
                         l1417 14A4                           l1521 128E                           l1513 09E2  
                         l1505 096C                           l1443 14D4                           l1435 14C4  
                         l1427 14BC                           l1419 14AC                           l1523 1292  
                         l1515 0A16                           l1507 0984                           l1621 0F7C  
                         l1445 14D6                           l1437 14C6                           l1429 14BE  
                         l1613 1544                           l1525 12B2                           l1517 1266  
                         l1509 09A0                           l1631 0F8E                           l1623 0F7E  
                         l1439 14C8                           l1615 1548                           l1527 12BE  
                         l1519 1282                           l1641 0FB8                           l1633 0F90  
                         l1625 0F80                           l1617 0F76                           l1651 1002  
                         l1643 0FBE                           l1635 0F92                           l1627 0F82  
                         l1619 0F7A                           l1491 1222                           l1653 101E  
                         l1645 0FDA                           l1637 0F94                           l1629 0F86  
                         l1661 1512                           l1493 1242                           l1655 154E  
                         l1647 0FE0                           l1639 0F9C                           l1671 151C  
                         l1663 1514                           l1495 1264                           l1487 120C  
                         l1831 1060                           l1823 1026                           l1649 0FFC  
                         l1673 151E                           l1665 1516                           l1657 1504  
                         l1489 1218                           l1497 091A                           l1681 0C24  
                         l1833 1068                           l1825 102A                           l1675 1520  
                         l1667 1518                           l1659 150E                           l1499 0946  
                         l1683 0C3C                           l1691 0CA8                           l1835 1092  
                         l1827 102E                           l1677 1522                           l1669 151A  
                         l1693 0CBC                           l1685 0C6C                           l1837 10A2  
                         l1829 1036                           l1687 0C78                           l1695 0CE0  
                         l1679 0C10                           l1697 0CEC                           l1689 0C7C  
                         STR_1 0601                           STR_2 0608                           STR_3 060E  
                         STR_4 060E                           u1000 12AE                           _CREN 007D5C  
                         u1001 12AA                           u1200 101E                           u1201 101A  
                         u1210 0C24                           u1211 0C20                           u1220 0C6C  
                         u1221 0C68                           u1230 0CBC                           u1231 0CB8  
                         u1240 0CD4                           u1241 0CD0                           u1170 0FB8  
                         u1171 0FB4                           u1180 0FDA                           u1181 0FD6  
                         u1190 0FFC                           u1191 0FF8                           u1460 1060  
                         u1461 105C                           u1470 1092                           u1471 108E  
                         _RCIF 007CF5                           _TMR1 000FCE                           _TMR2 000FCC  
                 __CFG_WDTPS$1 000000                           _main 1026                           _mode 0052  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         fsr2l 000FD9                           btemp 005A                           prodh 000FF4  
                         prodl 000FF3                           start 01FA                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000               ?_UART_Initialize 0001               __end_of_LED_Init 14DA  
                        ?_main 0001                          _ADRES 000FC3                __end_of___awmod 0E9E  
                        _T1CON 000FCD                          _T2CON 000FCA                          _IRCF0 007E9C  
                        _IRCF1 007E9D                          _IRCF2 007E9E                __end_of___lwdiv 113E  
                        i1l140 1542                          i1l160 006C                          i1l137 152C  
                        i1l161 01C6                          i1l138 152C                          i1l154 1462  
                        i1l162 00B4                          i1l139 153E                          i1l411 0DE8  
                        i1l163 01CA                          i1l420 0E90                          i1l412 0E02  
                        i1l164 00FC                          i1l421 0E9C                          i1l413 0E74  
                        i1l165 00F8                          i1l414 0E28                          i1l166 0146  
                        i1l415 0E1C                          i1l167 0142                          i1l159 0074  
                        i1l416 0E3A                          i1l168 013E                          i2l121 08FA  
                        i1l417 0E3E                          i1l177 1502                          i2l122 0850  
                        i1l418 0E60                          i2l123 08FE                          i1l419 0E70  
                        i2l124 08F6                          i2l125 088C                          i2l126 08AA  
                        i2l127 08C8                          i2l128 08EA                          i1l670 10D8  
                        i1l671 10F6                          i1l672 10FA                          i1l840 06F8  
                        i1l832 0668                          i1l673 1124                          i1l841 0742  
                        i1l833 067C                          i1l674 1134                          i1l842 0756  
                        i1l834 06AA                          i1l675 113C                          i1l843 0746  
                        i1l835 07EC                          i1l668 1134                          i1l836 06C2  
                        i1l860 0D56                          i1l669 10E4                          i1l845 0778  
                        i1l837 06B2                          i1l861 0DC4                          i1l846 0778  
                        i1l838 06F4                          i1l870 130A                          i1l847 078C  
                        i1l839 0710                          i1l863 0DB0                          i1l848 07D8  
                        i1l880 0B12                          i1l864 0DB4                          i1l873 1384  
                        i1l881 0A68                          i1l857 0DB8                          i1l874 137C  
                        i1l882 0A56                          i1l858 0D82                          i1l867 12C0  
                        i1l875 13A4                          i1l859 0D18                          i1l868 12EA  
                        i1l876 13C4                          i1l884 0ADA                          i1l869 1316  
                        i1l885 0ADE                          i1l879 0A52                          i2l860 0F06  
                        i2l861 0F74                          i2l870 1362                          i2l863 0F60  
                        i2l880 0C0E                          i2l864 0F64                          i2l873 13DA  
                        i2l881 0B64                          i2l857 0F68                          i2l874 13D2  
                        i2l882 0B52                          i2l858 0F32                          i2l867 1318  
                        i2l875 13FA                          i2l859 0EC8                          i2l868 1342  
                        i2l876 141A                          i2l884 0BD6                          i2l869 136E  
                        i2l885 0BDA                          i2l879 0B4E                          _RCREG 000FAE  
                        _TMR1H 000FCF                          _TMR0L 000FD6                          _SPBRG 000FAF  
                        _TXREG 000FAD                  __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                    ?_UART_Write 0001  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                          _count 0054                    _ClearBuffer 113E  
                        tablat 000FF5                          ttemp5 005B                          ttemp6 005E  
                        ttemp7 0062                          status 000FD8                          wtemp8 005B  
              __end_of_strncmp 0A18                 __CFG_PBADEN$ON 000000               __end_ofi1_strchr 1318  
             __end_ofi1_strlen 13C6               __end_ofi1_strstr 0DC6               __end_ofi2_strchr 1370  
             __end_ofi2_strlen 141C               __end_ofi2_strstr 0F76                __initialization 11AA  
                 __end_of_main 10B6                     _ModeBreath 1544                         ??_main 00D1  
                  _Lo_ISR$1501 0046                  __activetblptr 000001                     i1strncmp@l 0024  
                   i1strncmp@n 001F                     i1strncmp@r 0026             __size_ofi1_strncmp 00FC  
           __size_ofi2_strncmp 00FC                     i1strstr@nl 002C                     i2strncmp@l 000A  
                   i2strncmp@n 0005                     i2strncmp@r 000C                     i2strstr@nl 0012  
                       _CCPR1L 000FBE                         i1l1451 0DC6                         i1l1531 12DA  
                       i1l1461 0DF6                         i1l1453 0DCA                         i1l1701 142C  
                       i1l1533 12E6                         i1l1447 1528                         i1l1471 0E3E  
                       i1l1463 0E02                         i1l1455 0DD8                         i1l1703 143E  
                       i1l1711 14F6                         i1l1535 12EA                         i1l1449 153E  
                       i1l1481 0E84                         i1l1473 0E54                         i1l1465 0E14  
                       i1l1457 0DE0                         i1l1705 1442                         i1l1721 10D8  
                       i1l1713 1502                         i1l1537 130A                         i1l1529 12C0  
                       i1l1561 13C4                         i1l1553 1370                         i1l1801 0DC4  
                       i1l1483 0E90                         i1l1475 0E60                         i1l1467 0E1C  
                       i1l1459 0DE8                         i1l1707 1462                         i1l1731 111E  
                       i1l1723 10E4                         i1l1715 10B6                         i1l1539 1316  
                       i1l1555 137C                         i1l1485 0E9C                         i1l1477 0E66  
                       i1l1469 0E28                         i1l1733 1124                         i1l1725 10FA  
                       i1l1717 10BE                         i1l1709 14DA                         i1l1741 0632  
                       i1l1557 1384                         i1l1581 0A68                         i1l1573 0A18  
                       i1l1901 011E                         i1l1479 0E74                         i1l1735 112A  
                       i1l1727 1100                         i1l1719 10D0                         i1l1751 06B2  
                       i1l1743 067C                         i1l1559 13A4                         i1l1591 0B12  
                       i1l1583 0A80                         i1l1575 0A42                         i1l1911 01CA  
                       i1l1903 0122                         i1l1729 1116                         i1l1761 0746  
                       i1l1753 06C2                         i1l1745 0692                         i1l1737 0614  
                       i1l1585 0A9C                         i1l1577 0A4E                         i1l1905 0132  
                       i1l1771 0790                         i1l1763 0756                         i1l1755 06F8  
                       i1l1747 06A6                         i1l1739 0624                         i1l1587 0AAE  
                       i1l1579 0A56                         i1l1907 0146                         i1l1781 07EC  
                       i1l1773 07B4                         i1l1765 0764                         i1l1757 06FA  
                       i1l1749 06AA                         i1l1589 0ADE                         i1l1909 0174  
                       i1l1775 07C4                         i1l1767 0786                         i1l1759 0706  
                       i1l1791 0D52                         i1l1783 0CEE                         i1l1777 07D2  
                       i1l1769 078C                         i1l1793 0D56                         i1l1785 0D00  
                       i1l1881 0074                         i1l1873 0046                         i1l1699 141C  
                       i1l1779 07D8                         i1l1787 0D18                         i1l1795 0D82  
                       i1l1891 00C6                         i1l1883 0082                         i1l1875 0054  
                       i1l1797 0D94                         i1l1789 0D46                         i1l1893 00D6  
                       i1l1885 0084                         i1l1877 0062                         i1l1799 0DB8  
                       i1l1895 00EC                         i1l1887 00AA                         i1l1879 006C  
                       i2l1601 0B64                         i1l1897 00FC                         i1l1889 00B4  
                       i2l1611 0C0E                         i2l1603 0B7C                         i1l1899 010E  
                       i2l1541 1318                         i2l1605 0B98                         i2l1551 136E  
                       i2l1543 1332                         i2l1607 0BAA                         i2l1545 133E  
                       i2l1609 0BDA                         i2l1547 1342                         i2l1571 141A  
                       i2l1563 13C6                         i2l1811 0F02                         i2l1803 0E9E  
                       i2l1549 1362                         i2l1565 13D2                         i2l1821 0F74  
                       i2l1813 0F06                         i2l1805 0EB0                         i2l1567 13DA  
                       i2l1807 0EC8                         i2l1815 0F32                         i2l1569 13FA  
                       i2l1593 0B14                         i2l1817 0F44                         i2l1809 0EF6  
                       i2l1841 0816                         i2l1595 0B3E                         i2l1819 0F68  
                       i2l1851 086E                         i2l1843 0818                         i2l1597 0B4A  
                       i2l1861 08EA                         i2l1853 088A                         i2l1845 081C  
                       i2l1599 0B52                         i2l1863 08FE                         i2l1855 08A8  
                       i2l1847 0842                         i2l1839 0808                         i2l1857 08C6  
                       i2l1849 0850                         i2l1859 08E4                         _TMR1IF 007CF0  
                       _TMR1ON 007E68                         _TMR2ON 007E52               __end_of___xxtofl 07EE  
           __size_of_ModeBlink 00B0                         _Hi_ISR 0008                         _Lo_ISR 0018  
               __CFG_XINST$OFF 000000            __size_of_UART_Write 001E                         ___wmul 14DA  
               __CFG_STVREN$ON 000000                      ??___awmod 001F                      ??___lwdiv 0025  
                       _lenStr 0056                         clear_0 11E8                         clear_1 11F4  
              ___awmod@divisor 001D                ___awmod@counter 001F                         _strchr 1266  
                       _strlen 120C                         _strstr 0C10                   __pdataCOMRAM 0058  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                      ??_strncmp 00C4  __size_of_INTERRUPT_Initialize 0008  
                 ___xxtofl@arg 0032                   ___xxtofl@exp 0031                   ___xxtofl@val 0028  
                   __accesstop 0080        __end_of__initialization 11FA                      ?_LED_Init 0001  
                ___rparam_used 000001              __end_ofi1_strncmp 0B14              __end_ofi2_strncmp 0C10  
               __pcstackCOMRAM 0001                   __pidataBANK0 1464                    ?_ModeBreath 0001  
            __end_of_ModeBlink 1026                  ??_MyusartRead 0021                      ?i1_strchr 001B  
                    ?i1_strlen 001B                      ?i1_strstr 0028                      ?i2_strchr 0001  
                    ?i2_strlen 0001                      ?i2_strstr 000E                     __pbssBANK0 00D1  
                  i1strncmp@_l 001B                    i1strncmp@_r 001D                     ??_LED_Init 00BE  
                      ?_Hi_ISR 0001                        ?_Lo_ISR 0001                    i2strncmp@_l 0001  
                  i2strncmp@_r 0003                        ?___wmul 001B                        ?_strchr 00BE  
                      ?_strlen 00BE                        ?_strstr 00CB                      ?___xxtofl 0028  
                 ??_UART_Write 001B                        i1u90_20 0E36                        i1u90_21 0E32  
                      i1u91_20 0E54                        i1u91_21 0E50                        i1u92_20 0E84  
                      i1u92_21 0E80                        i1u86_20 153A                        i1u86_21 1536  
                   ??i1_strchr 001F                        i1u87_20 0DD8                        i1u87_21 0DD4  
                      i1u88_20 0DF6                        i1u88_21 0DF2                        i1u89_20 0E14  
                      i1u89_21 0E10                     ??i1_strlen 001D                     ??i1_strstr 002C  
                   ??i2_strchr 0005                     ??i2_strlen 0003                     ??i2_strstr 0012  
                 ?_ClearBuffer 0001            __size_of_ModeBreath 000A            __end_of_MyusartRead 1464  
              __size_of_Hi_ISR 0912                __size_of_Lo_ISR 01E2                        __Hparam 0000  
                      __Lparam 0000                        ___awmod 0DC6                __size_of___wmul 002A  
           __end_of_UART_Write 1544                        ___lwdiv 10B6                   __psmallconst 0600  
                      __pcinit 11AA                        __ramtop 0600                        __ptext0 1026  
                      __ptext1 0C10                        __ptext2 091A                        __ptext3 120C  
                      __ptext4 1266                        __ptext5 1504                        __ptext6 1544  
                      __ptext7 14A2                        __ptext8 0F76                        __ptext9 113E  
              __size_of_strchr 005A                __size_of_strlen 005A                      _T1CONbits 000FCD  
              __size_of_strstr 00DE                     ??___xxtofl 002C               ___awmod@dividend 001B  
     __size_of_UART_Initialize 0022                        _num_led 00BC                        _strncmp 091A  
               __pintcode_body 07EE           end_of_initialization 11FA                        int_func 07EE  
                    _RCSTAbits 000FAB                        postdec1 000FE5                        postinc0 000FEE  
                      postinc2 000FDE                        strchr@c 00C0                        strchr@s 00BE  
                      strlen@a 00C2                        strlen@s 00BE                        strstr@h 00CB  
                      strstr@n 00CD                 UART_Write@data 001B                  ___xxtofl@sign 0030  
                    _TRISCbits 000F94                      _TRISDbits 000F95                    _MyusartRead 141C  
                  _CCP1CONbits 000FBD                      _TXSTAbits 000FAC                 __end_of_Hi_ISR 091A  
            __size_of_LED_Init 0038                 __end_of_Lo_ISR 01FA                      i1_strncmp 0A18  
                 ??_ModeBreath 00C0   __end_of_INTERRUPT_Initialize 1556                      i2_strncmp 0B14  
               __end_of___wmul 1504                    _BAUDCONbits 000FB8                  __pidataCOMRAM 1556  
               __end_of_strchr 12C0                 __end_of_strlen 1266                 __end_of_strstr 0CEE  
          start_initialization 11AA                      _ModeBlink 0F76                      i1strchr@c 001D  
                    i1strchr@s 001B                   ClearBuffer@i 00BE                      i1strlen@a 001F  
                    i1strlen@s 001B              __size_ofi1_strchr 0058              __size_ofi1_strlen 0056  
            __size_ofi1_strstr 00D8                      i2strchr@c 0003                      i2strchr@s 0001  
            __size_ofi2_strchr 0058              __size_ofi2_strlen 0056                      i1strstr@h 0028  
           __end_of_ModeBreath 154E                      i2strlen@a 0005                      i1strstr@n 002A  
                    i2strlen@s 0001              __size_ofi2_strstr 00D8              ??_UART_Initialize 00BE  
                    i2strstr@h 000E                      i2strstr@n 0010           __size_of_ClearBuffer 006C  
             __CFG_OSC$INTIO67 000000                       ??_Hi_ISR 0014                       ??_Lo_ISR 0036  
                   ?i1_strncmp 001B                       ??___wmul 001F                     ?i2_strncmp 0001  
                  __pdataBANK0 0080               __CFG_LPT1OSC$OFF 000000                       ??_strchr 00C2  
                     ??_strlen 00C0                       ??_strstr 00CF                    __pbssCOMRAM 0048  
                __pcstackBANK0 00BE                     ?_ModeBlink 0001              __size_of___xxtofl 01DC  
             ___lwdiv@dividend 0021              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
                     ?___awmod 001B                       ?___lwdiv 0021                    __pintcodelo 0018  
                  __smallconst 0600                      _max_count 0058               ___lwdiv@quotient 0025  
                     ?_strncmp 00BE           _INTERRUPT_Initialize 154E                 ___wmul@product 001F  
                     _LED_Init 14A2                       _LATCbits 000F8B                       _LATDbits 000F8C  
                     _IPR1bits 000F9F                       _PIE1bits 000F9D                       i1u101_20 12DA  
                     i1u101_21 12D6                       i1u102_20 1306                       i1u110_20 0AAE  
                     i1u102_21 1302                       i1u110_21 0AAA                       i1u111_20 0AD6  
                     i1u111_21 0AD2                       i1u105_20 13A0                       i1u105_21 139C  
                     i1u130_20 0692                       i1u130_21 068E                       i1u131_20 06F0  
                     i1u107_20 0A42                       i1u131_21 06EC                       i1u107_21 0A3E  
                     i1u132_20 073E                       i1u108_20 0A80                       i1u140_20 0D94  
                     i1u132_21 073A                       i1u108_21 0A7C                       i1u140_21 0D90  
                     i1u125_20 10D0                       i1u133_20 0764                       i1u109_20 0A9C  
                     i1u141_20 0DAC                       i1u125_21 10CC                       i1u133_21 0760  
                     i1u109_21 0A98                       i1u141_21 0DA8                       i1u126_20 10F2  
                     i1u134_20 0774                       i1u126_21 10EE                       i1u134_21 0770  
                     i1u127_20 1116                       i1u135_20 0786                       i1u127_21 1112  
                     i1u135_21 0782                       i1u136_20 07C4                       i1u128_20 0624  
                     i1u160_20 00C6                       i1u136_21 07C0                       i1u128_21 0620  
                     i1u160_21 00C2                       i1u137_20 07D2                       i1u129_20 0632  
                     i1u161_20 00D6                       i1u137_21 07CE                       i1u129_21 062E  
                     i1u161_21 00D2                       i1u138_20 0D00                       i1u162_20 00EC  
                     i1u138_21 0CFC                       i1u162_21 00E8                       i1u139_20 0D46  
                     i1u163_20 010E                       i1u139_21 0D42                       i1u163_21 010A  
                     i1u164_20 011E                       i1u156_20 0054                       i1u164_21 011A  
                     i1u156_21 0050                       i1u165_20 0132                       i1u157_20 0062  
                     i1u165_21 012E                       i1u157_21 005E                       i1u158_20 0082  
                     i1u158_21 007E                       i1u166_25 018C                       i1u159_20 00AA  
                     i1u159_21 00A6                       i2u103_40 1332                       i2u103_41 132E  
                     i2u104_40 135E                       i2u112_40 0B3E                       i2u104_41 135A  
                     i2u112_41 0B3A                       i2u113_40 0B7C                       i2u113_41 0B78  
                     i2u106_40 13F6                       i2u114_40 0B98                       i2u106_41 13F2  
                     i2u114_41 0B94                       i2u115_40 0BAA                       i2u115_41 0BA6  
                     i2u116_40 0BD2                       i2u116_41 0BCE                       i2u142_40 0EB0  
                     i2u150_40 086E                       i2u142_41 0EAC                       i2u150_41 086A  
                     i2u143_40 0EF6                       i2u151_40 088A                       i2u143_41 0EF2  
                     i2u151_41 0886                       i2u144_40 0F44                       i2u152_40 08A8  
                     i2u144_41 0F40                       i2u152_41 08A4                       i2u145_40 0F5C  
                     i2u153_40 08C6                       i2u145_41 0F58                       i2u153_41 08C2  
                     i2u154_40 08E4                       i2u154_41 08E0                       i2u148_40 0816  
                     i2u148_41 0812                       i2u149_40 0842                       i2u149_41 083E  
                     _PIR1bits 000F9E                       _RCONbits 000FD0                    ??i1_strncmp 0021  
                  ??i2_strncmp 0007              ___wmul@multiplier 001B                   ?_MyusartRead 0001  
                     i1_strchr 12C0                    ??_ModeBlink 00C0                       i1_strlen 1370  
                     i1_strstr 0CEE                       i2_strchr 1318                       i2_strlen 13C6  
                     i2_strstr 0E9E                      copy_data0 11BE          ?_INTERRUPT_Initialize 0001  
                     __Hrparam 0000                       __Lrparam 0000                   __Lsmallconst 0600  
           __CFG_BOREN$SBORDIS 000000               __size_of___awmod 00D8               __size_of___lwdiv 0088  
              _UART_Initialize 1504                       ___xxtofl 0612                ___lwdiv@divisor 0023  
              ___lwdiv@counter 0027                       __ptext10 154E                       __ptext20 0DC6  
                     __ptext12 0CEE                       __ptext21 1526                       __ptext13 0A18  
                     __ptext14 1370                       __ptext23 0E9E                       __ptext15 12C0  
                     __ptext24 0B14                       __ptext16 0612                       __ptext25 13C6  
                     __ptext17 14DA                       __ptext26 1318                       __ptext18 10B6  
                     __ptext19 141C               __size_of_strncmp 00FE                  __size_of_main 0090  
                     _per_arrp 0080                       int$flags 005A                       _mystring 00D1  
                   _INTCONbits 000FF2         ??_INTERRUPT_Initialize 00BE                  ??_ClearBuffer 00BE  
                     intlevel1 0000                       intlevel2 0000                      strncmp@_l 00BE  
                    strncmp@_r 00C0        __end_of_UART_Initialize 1526                     Lo_ISR@temp 0042  
                     strncmp@l 00C7                       strncmp@n 00C2                       strncmp@r 00C9  
                   _UART_Write 1526                       strstr@nl 00CF           __size_of_MyusartRead 0048  
          __end_of_ClearBuffer 11AA  
