

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Dec 06 16:15:59 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNROOT	_main
   384                           	FNCALL	intlevel2,_my_isr_routine
   385                           	global	intlevel2
   386                           	FNROOT	intlevel2
   387                           	global	_TRISCbits
   388                           _TRISCbits	set	0xF94
   389  0000                     	global	_CCP1CONbits
   390                           _CCP1CONbits	set	0xFBD
   391  0000                     	global	_CCPR1L
   392                           _CCPR1L	set	0xFBE
   393  0000                     	global	_PR2
   394                           _PR2	set	0xFCB
   395  0000                     	global	_RCONbits
   396                           _RCONbits	set	0xFD0
   397  0000                     	global	_TMR2
   398                           _TMR2	set	0xFCC
   399  0000                     	global	_T2CON
   400                           _T2CON	set	0xFCA
   401  0000                     	global	_OSCCONbits
   402                           _OSCCONbits	set	0xFD3
   403  0000                     	global	_INTCON2bits
   404                           _INTCON2bits	set	0xFF1
   405  0000                     	global	_INTCONbits
   406                           _INTCONbits	set	0xFF2
   407  0000                     ; #config settings
   408                           global __CFG_OSC$INTIO67
   409                           __CFG_OSC$INTIO67 equ 0x0
   410  0000                     global __CFG_FCMEN$OFF
   411                           __CFG_FCMEN$OFF equ 0x0
   412  0000                     global __CFG_IESO$OFF
   413                           __CFG_IESO$OFF equ 0x0
   414  0000                     global __CFG_PWRT$OFF
   415                           __CFG_PWRT$OFF equ 0x0
   416  0000                     global __CFG_BOREN$SBORDIS
   417                           __CFG_BOREN$SBORDIS equ 0x0
   418  0000                     global __CFG_BORV$3
   419                           __CFG_BORV$3 equ 0x0
   420  0000                     global __CFG_WDT$OFF
   421                           __CFG_WDT$OFF equ 0x0
   422  0000                     global __CFG_WDTPS$32768
   423                           __CFG_WDTPS$32768 equ 0x0
   424  0000                     global __CFG_CCP2MX$PORTC
   425                           __CFG_CCP2MX$PORTC equ 0x0
   426  0000                     global __CFG_PBADEN$OFF
   427                           __CFG_PBADEN$OFF equ 0x0
   428  0000                     global __CFG_LPT1OSC$OFF
   429                           __CFG_LPT1OSC$OFF equ 0x0
   430  0000                     global __CFG_MCLRE$ON
   431                           __CFG_MCLRE$ON equ 0x0
   432  0000                     global __CFG_STVREN$ON
   433                           __CFG_STVREN$ON equ 0x0
   434  0000                     global __CFG_LVP$OFF
   435                           __CFG_LVP$OFF equ 0x0
   436  0000                     global __CFG_XINST$OFF
   437                           __CFG_XINST$OFF equ 0x0
   438  0000                     global __CFG_CP0$OFF
   439                           __CFG_CP0$OFF equ 0x0
   440  0000                     global __CFG_CP1$OFF
   441                           __CFG_CP1$OFF equ 0x0
   442  0000                     global __CFG_CP2$OFF
   443                           __CFG_CP2$OFF equ 0x0
   444  0000                     global __CFG_CP3$OFF
   445                           __CFG_CP3$OFF equ 0x0
   446  0000                     global __CFG_CPB$OFF
   447                           __CFG_CPB$OFF equ 0x0
   448  0000                     global __CFG_CPD$OFF
   449                           __CFG_CPD$OFF equ 0x0
   450  0000                     global __CFG_WRT0$OFF
   451                           __CFG_WRT0$OFF equ 0x0
   452  0000                     global __CFG_WRT1$OFF
   453                           __CFG_WRT1$OFF equ 0x0
   454  0000                     global __CFG_WRT2$OFF
   455                           __CFG_WRT2$OFF equ 0x0
   456  0000                     global __CFG_WRT3$OFF
   457                           __CFG_WRT3$OFF equ 0x0
   458  0000                     global __CFG_WRTC$OFF
   459                           __CFG_WRTC$OFF equ 0x0
   460  0000                     global __CFG_WRTB$OFF
   461                           __CFG_WRTB$OFF equ 0x0
   462  0000                     global __CFG_WRTD$OFF
   463                           __CFG_WRTD$OFF equ 0x0
   464  0000                     global __CFG_EBTR0$OFF
   465                           __CFG_EBTR0$OFF equ 0x0
   466  0000                     global __CFG_EBTR1$OFF
   467                           __CFG_EBTR1$OFF equ 0x0
   468  0000                     global __CFG_EBTR2$OFF
   469                           __CFG_EBTR2$OFF equ 0x0
   470  0000                     global __CFG_EBTR3$OFF
   471                           __CFG_EBTR3$OFF equ 0x0
   472  0000                     global __CFG_EBTRB$OFF
   473                           __CFG_EBTRB$OFF equ 0x0
   474  0000                     	file	"C:\Users\febri\AppData\Local\Temp\sss4."
   475                           	line	#
   476                           psect	cinit,class=CODE,delta=1,reloc=2
   477                           global __pcinit
   478                           __pcinit:
   479  00015C                     global start_initialization
   480                           start_initialization:
   481  00015C                     
   482                           global __initialization
   483                           __initialization:
   484  00015C                     psect cinit,class=CODE,delta=1
   485                           global end_of_initialization,__end_of__initialization
   486                           
   487                           ;End of C runtime variable initialization code
   488                           
   489                           end_of_initialization:
   490  00015C                     __end_of__initialization:
   491  00015C                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   492  00015C  9003               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   493  00015E  9203               movlb 0
   494  000160  0100               goto _main	;jump to C main() function
   495  000162  EF94  F000         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   496                           global __pcstackCOMRAM
   497                           __pcstackCOMRAM:
   498  000001                     ?_main:	; 1 bytes @ 0x0
   499  000001                     ?_my_isr_routine:	; 1 bytes @ 0x0
   500  000001                     ??_my_isr_routine:	; 1 bytes @ 0x0
   501  000001                     	ds   2
   502  000001                     ??_main:	; 1 bytes @ 0x2
   503  000003                     ;!
   504                           ;!Data Sizes:
   505                           ;!    Strings     0
   506                           ;!    Constant    0
   507                           ;!    Data        0
   508                           ;!    BSS         0
   509                           ;!    Persistent  0
   510                           ;!    Stack       0
   511                           ;!
   512                           ;!Auto Spaces:
   513                           ;!    Space          Size  Autos    Used
   514                           ;!    COMRAM          126      2       2
   515                           ;!    BANK0           128      0       0
   516                           ;!    BANK1           256      0       0
   517                           ;!    BANK2           256      0       0
   518                           ;!    BANK3           256      0       0
   519                           ;!    BANK4           256      0       0
   520                           ;!    BANK5           244      0       0
   521                           
   522                           ;!
   523                           ;!Pointer List with Targets:
   524                           ;!
   525                           ;!    None.
   526                           
   527                           
   528                           ;!
   529                           ;!Critical Paths under _main in COMRAM
   530                           ;!
   531                           ;!    None.
   532                           ;!
   533                           ;!Critical Paths under _my_isr_routine in COMRAM
   534                           ;!
   535                           ;!    None.
   536                           ;!
   537                           ;!Critical Paths under _main in BANK0
   538                           ;!
   539                           ;!    None.
   540                           ;!
   541                           ;!Critical Paths under _my_isr_routine in BANK0
   542                           ;!
   543                           ;!    None.
   544                           ;!
   545                           ;!Critical Paths under _main in BANK1
   546                           ;!
   547                           ;!    None.
   548                           ;!
   549                           ;!Critical Paths under _my_isr_routine in BANK1
   550                           ;!
   551                           ;!    None.
   552                           ;!
   553                           ;!Critical Paths under _main in BANK2
   554                           ;!
   555                           ;!    None.
   556                           ;!
   557                           ;!Critical Paths under _my_isr_routine in BANK2
   558                           ;!
   559                           ;!    None.
   560                           ;!
   561                           ;!Critical Paths under _main in BANK3
   562                           ;!
   563                           ;!    None.
   564                           ;!
   565                           ;!Critical Paths under _my_isr_routine in BANK3
   566                           ;!
   567                           ;!    None.
   568                           ;!
   569                           ;!Critical Paths under _main in BANK4
   570                           ;!
   571                           ;!    None.
   572                           ;!
   573                           ;!Critical Paths under _my_isr_routine in BANK4
   574                           ;!
   575                           ;!    None.
   576                           ;!
   577                           ;!Critical Paths under _main in BANK5
   578                           ;!
   579                           ;!    None.
   580                           ;!
   581                           ;!Critical Paths under _my_isr_routine in BANK5
   582                           ;!
   583                           ;!    None.
   584                           
   585 ;;
   586 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   587 ;;
   588                           
   589                           ;!
   590                           ;!Call Graph Tables:
   591                           ;!
   592                           ;! ---------------------------------------------------------------------------------
   593                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   594                           ;! ---------------------------------------------------------------------------------
   595                           ;! (0) _main                                                 0     0      0       0
   596                           ;! ---------------------------------------------------------------------------------
   597                           ;! Estimated maximum stack depth 0
   598                           ;! ---------------------------------------------------------------------------------
   599                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   600                           ;! ---------------------------------------------------------------------------------
   601                           ;! (1) _my_isr_routine                                       2     2      0       0
   602                           ;!                                              0 COMRAM     2     2      0
   603                           ;! ---------------------------------------------------------------------------------
   604                           ;! Estimated maximum stack depth 1
   605                           ;! ---------------------------------------------------------------------------------
   606                           ;!
   607                           ;! Call Graph Graphs:
   608                           ;!
   609                           ;! _main (ROOT)
   610                           ;!
   611                           ;! _my_isr_routine (ROOT)
   612                           ;!
   613                           
   614                           ;! Address spaces:
   615                           
   616                           ;!Name               Size   Autos  Total    Cost      Usage
   617                           ;!BITCOMRAM           7E      0       0       0        0.0%
   618                           ;!EEDATA             100      0       0       0        0.0%
   619                           ;!NULL                 0      0       0       0        0.0%
   620                           ;!CODE                 0      0       0       0        0.0%
   621                           ;!COMRAM              7E      2       2       1        1.6%
   622                           ;!STACK                0      0       0       2        0.0%
   623                           ;!BITBANK0            80      0       0       3        0.0%
   624                           ;!BANK0               80      0       0       4        0.0%
   625                           ;!BITBANK1           100      0       0       5        0.0%
   626                           ;!BANK1              100      0       0       6        0.0%
   627                           ;!BITBANK2           100      0       0       7        0.0%
   628                           ;!BANK2              100      0       0       8        0.0%
   629                           ;!BITBANK3           100      0       0       9        0.0%
   630                           ;!BANK3              100      0       0      10        0.0%
   631                           ;!BITBANK4           100      0       0      11        0.0%
   632                           ;!BANK4              100      0       0      12        0.0%
   633                           ;!BANK5               F4      0       0      13        0.0%
   634                           ;!ABS                  0      0       0      14        0.0%
   635                           ;!BITBANK5            F4      0       0      15        0.0%
   636                           ;!BIGRAM             5F3      0       0      16        0.0%
   637                           ;!DATA                 0      0       0      17        0.0%
   638                           ;!BITSFR_5             0      0       0     200        0.0%
   639                           ;!SFR_5                0      0       0     200        0.0%
   640                           ;!BITSFR_4             0      0       0     200        0.0%
   641                           ;!SFR_4                0      0       0     200        0.0%
   642                           ;!BITSFR_3             0      0       0     200        0.0%
   643                           ;!SFR_3                0      0       0     200        0.0%
   644                           ;!BITSFR_2             0      0       0     200        0.0%
   645                           ;!SFR_2                0      0       0     200        0.0%
   646                           ;!BITSFR_1             0      0       0     200        0.0%
   647                           ;!SFR_1                0      0       0     200        0.0%
   648                           ;!BITSFR               0      0       0     200        0.0%
   649                           ;!SFR                  0      0       0     200        0.0%
   650                           
   651                           	global	_main
   652                           
   653 ;; *************** function _main *****************
   654 ;; Defined at:
   655 ;;		line 73 in file "lab9_classA.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   669 ;;      Params:         0       0       0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0       0       0
   672 ;;      Totals:         0       0       0       0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels required when called:    1
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		Startup code after reset
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           psect	text0,class=CODE,space=0,reloc=2,group=0
   682                           	file	"lab9_classA.c"
   683                           	line	73
   684                           global __ptext0
   685                           __ptext0:
   686  000128                     psect	text0
   687                           	file	"lab9_classA.c"
   688                           	line	73
   689                           	global	__size_of_main
   690                           	__size_of_main	equ	__end_of_main-_main
   691  0000                     	
   692                           _main:
   693  000128                     ;incstack = 0
   694                           	opt	stack 30
   695                           	line	75
   696                           	
   697                           l726:
   698  000128                     ;lab9_classA.c: 75:     TRISCbits.TRISC2 = 0;
   699                           	bcf	((c:3988)),c,2	;volatile
   700  000128  9494               	line	77
   701                           ;lab9_classA.c: 77:     OSCCONbits.IRCF0 = 1;
   702                           	bsf	((c:4051)),c,4	;volatile
   703  00012A  88D3               	line	78
   704                           ;lab9_classA.c: 78:     OSCCONbits.IRCF1 = 1;
   705                           	bsf	((c:4051)),c,5	;volatile
   706  00012C  8AD3               	line	79
   707                           ;lab9_classA.c: 79:     OSCCONbits.IRCF2 = 0;
   708                           	bcf	((c:4051)),c,6	;volatile
   709  00012E  9CD3               	line	81
   710                           	
   711                           l728:
   712  000130                     ;lab9_classA.c: 81:     T2CON = 0x07;
   713                           	movlw	low(07h)
   714  000130  0E07               	movwf	((c:4042)),c	;volatile
   715  000132  6ECA               	line	82
   716                           ;lab9_classA.c: 82:     TMR2 = 0;
   717                           	movlw	low(0)
   718  000134  0E00               	movwf	((c:4044)),c	;volatile
   719  000136  6ECC               	line	87
   720                           	
   721                           l730:
   722  000138                     ;lab9_classA.c: 87:     RCONbits.IPEN = 1;
   723                           	bsf	((c:4048)),c,7	;volatile
   724  000138  8ED0               	line	88
   725                           	
   726                           l732:
   727  00013A                     ;lab9_classA.c: 88:     INTCONbits.GIE = 1;
   728                           	bsf	((c:4082)),c,7	;volatile
   729  00013A  8EF2               	line	90
   730                           ;lab9_classA.c: 90:     PR2 = 155;
   731                           	movlw	low(09Bh)
   732  00013C  0E9B               	movwf	((c:4043)),c	;volatile
   733  00013E  6ECB               	line	91
   734                           ;lab9_classA.c: 91:     CCPR1L = 4;
   735                           	movlw	low(04h)
   736  000140  0E04               	movwf	((c:4030)),c	;volatile
   737  000142  6EBE               	line	92
   738                           	
   739                           l734:
   740  000144                     ;lab9_classA.c: 92:     CCP1CONbits.DC1B1 = 0;
   741                           	bcf	((c:4029)),c,5	;volatile
   742  000144  9ABD               	line	93
   743                           	
   744                           l736:
   745  000146                     ;lab9_classA.c: 93:     CCP1CONbits.DC1B0 = 0;
   746                           	bcf	((c:4029)),c,4	;volatile
   747  000146  98BD               	line	95
   748                           	
   749                           l738:
   750  000148                     ;lab9_classA.c: 95:     CCP1CONbits.CCP1M3 = 1;
   751                           	bsf	((c:4029)),c,3	;volatile
   752  000148  86BD               	line	96
   753                           	
   754                           l740:
   755  00014A                     ;lab9_classA.c: 96:     CCP1CONbits.CCP1M2 = 1;
   756                           	bsf	((c:4029)),c,2	;volatile
   757  00014A  84BD               	line	97
   758                           	
   759                           l742:
   760  00014C                     ;lab9_classA.c: 97:     CCP1CONbits.CCP1M1 = 0;
   761                           	bcf	((c:4029)),c,1	;volatile
   762  00014C  92BD               	line	98
   763                           	
   764                           l744:
   765  00014E                     ;lab9_classA.c: 98:     CCP1CONbits.CCP1M0 = 0;
   766                           	bcf	((c:4029)),c,0	;volatile
   767  00014E  90BD               	line	101
   768                           	
   769                           l746:
   770  000150                     ;lab9_classA.c: 101:     INTCONbits.INT0IE = 1;
   771                           	bsf	((c:4082)),c,4	;volatile
   772  000150  88F2               	line	102
   773                           	
   774                           l748:
   775  000152                     ;lab9_classA.c: 102:     INTCON2bits.INTEDG0 = 0;
   776                           	bcf	((c:4081)),c,6	;volatile
   777  000152  9CF1               	line	104
   778                           ;lab9_classA.c: 104:     while(1);
   779                           	
   780                           l25:
   781  000154                     	
   782                           l26:
   783  000154                     	goto	l25
   784  000154  EFAA  F000         	
   785                           l27:
   786  000158                     	line	105
   787                           	
   788                           l28:
   789  000158                     	global	start
   790                           	goto	start
   791  000158  EF07  F000         	opt stack 0
   792                           GLOBAL	__end_of_main
   793                           	__end_of_main:
   794  00015C                     	signat	_main,89
   795                           	global	_my_isr_routine
   796                           
   797 ;; *************** function _my_isr_routine *****************
   798 ;; Defined at:
   799 ;;		line 108 in file "lab9_classA.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   813 ;;      Params:         0       0       0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0       0       0
   815 ;;      Temps:          2       0       0       0       0       0       0
   816 ;;      Totals:         2       0       0       0       0       0       0
   817 ;;Total ram usage:        2 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		Interrupt level 2
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           psect	intcode,class=CODE,space=0,reloc=2
   826                           global __pintcode
   827                           __pintcode:
   828  000008                     psect	intcode
   829                           	file	"lab9_classA.c"
   830                           	line	108
   831                           	global	__size_of_my_isr_routine
   832                           	__size_of_my_isr_routine	equ	__end_of_my_isr_routine-_my_isr_routine
   833  0000                     	
   834                           _my_isr_routine:
   835  000008                     ;incstack = 0
   836                           	opt	stack 30
   837                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
   838  000008  8203               	global	int_func
   839                           	call	int_func,f	;refresh shadow registers
   840  00000A  ED09  F000         psect	intcode_body,class=CODE,space=0,reloc=2
   841                           global __pintcode_body
   842                           __pintcode_body:
   843  000012                     int_func:
   844  000012                     
   845                           	pop	; remove dummy address from shadow register refresh
   846  000012  0006               	line	110
   847                           	
   848                           i2l750:
   849  000014                     ;lab9_classA.c: 110:     if(INTCONbits.INT0IF){
   850                           	btfss	((c:4082)),c,1	;volatile
   851  000014  A2F2               	goto	i2u1_41
   852  000016  EF0F  F000         	goto	i2u1_40
   853  00001A  EF11  F000         i2u1_41:
   854  00001E                     	goto	i2l50
   855  00001E  EF92  F000         i2u1_40:
   856  000022                     	line	111
   857                           	
   858                           i2l752:
   859  000022                     ;lab9_classA.c: 111:         INTCONbits.INT0IF = 0;
   860                           	bcf	((c:4082)),c,1	;volatile
   861  000022  92F2               	line	112
   862                           ;lab9_classA.c: 112:         INTCONbits.INT0IE = 0;
   863                           	bcf	((c:4082)),c,4	;volatile
   864  000024  98F2               	line	113
   865                           	
   866                           i2l754:
   867  000026                     ;lab9_classA.c: 113:         if(CCPR1L == 0x04)
   868                           		movlw	4
   869  000026  0E04               	xorwf	((c:4030)),c,w	;volatile
   870  000028  18BE               	btfss	status,2
   871  00002A  A4D8               	goto	i2u2_41
   872  00002C  EF1A  F000         	goto	i2u2_40
   873  000030  EF1C  F000         
   874                           i2u2_41:
   875  000034                     	goto	i2l766
   876  000034  EF4C  F000         i2u2_40:
   877  000038                     	goto	i2l764
   878  000038  EF40  F000         	line	116
   879                           	
   880                           i2l756:
   881  00003C                     ;lab9_classA.c: 114:         {;lab9_classA.c: 116:             while(CCPR1L<18)
   882                           	goto	i2l764
   883  00003C  EF40  F000         	
   884                           i2l36:
   885  000040                     	line	118
   886                           ;lab9_classA.c: 117:             {;lab9_classA.c: 118:                 while(CCP1CONbits
                                 .DC1B<3)
   887                           	goto	i2l37
   888  000040  EF2F  F000         	
   889                           i2l38:
   890  000044                     	line	119
   891                           	
   892                           i2l758:
   893  000044                     ;lab9_classA.c: 119:                     CCP1CONbits.DC1B++;
   894                           	movlw	(01h)&0ffh
   895  000044  0E01               	movwf	(??_my_isr_routine+0+0)&0ffh,c
   896  000046  6E01               	swapf	((c:4029)),c,w	;volatile
   897  000048  38BD               	andlw	(1<<2)-1
   898  00004A  0B03               	movwf	(??_my_isr_routine+1+0)&0ffh,c
   899  00004C  6E02               	movf	((??_my_isr_routine+0+0)),c,w
   900  00004E  5001               	addwf	(??_my_isr_routine+1+0),c
   901  000050  2602               	swapf	(??_my_isr_routine+1+0)&0ffh,c
   902  000052  3A02               	movf	((c:4029)),c,w	;volatile
   903  000054  50BD               	xorwf	(??_my_isr_routine+1+0)&0ffh,c,w
   904  000056  1802               	andlw	not (((1<<2)-1)<<4)
   905  000058  0BCF               	xorwf	(??_my_isr_routine+1+0)&0ffh,c,w
   906  00005A  1802               	movwf	((c:4029)),c	;volatile
   907  00005C  6EBD               	
   908                           i2l37:
   909  00005E                     	line	118
   910                           ;lab9_classA.c: 118:                 while(CCP1CONbits.DC1B<3)
   911                           	swapf	((c:4029)),c,w	;volatile
   912  00005E  38BD               	andlw	(1<<2)-1
   913  000060  0B03               	xorlw	03h
   914  000062  0A03               	btfss	status,2
   915  000064  A4D8               	goto	i2u3_41
   916  000066  EF37  F000         	goto	i2u3_40
   917  00006A  EF39  F000         i2u3_41:
   918  00006E                     	goto	i2l758
   919  00006E  EF22  F000         i2u3_40:
   920  000072                     	goto	i2l760
   921  000072  EF3B  F000         	
   922                           i2l39:
   923  000076                     	line	120
   924                           	
   925                           i2l760:
   926  000076                     ;lab9_classA.c: 120:                 CCP1CONbits.DC1B = 0;
   927                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
   928  000076  0ECF               	andwf	((c:4029)),c	;volatile
   929  000078  16BD               	line	121
   930                           	
   931                           i2l762:
   932  00007A                     ;lab9_classA.c: 121:                 CCPR1L++;
   933                           	incf	((c:4030)),c	;volatile
   934  00007A  2ABE               	goto	i2l764
   935  00007C  EF40  F000         	line	122
   936                           ;lab9_classA.c: 122:             }
   937                           	
   938                           i2l35:
   939  000080                     	line	116
   940                           	
   941                           i2l764:
   942  000080                     ;lab9_classA.c: 116:             while(CCPR1L<18)
   943                           		movlw	012h-1
   944  000080  0E11               	cpfsgt	((c:4030)),c	;volatile
   945  000082  64BE               	goto	i2u4_41
   946  000084  EF46  F000         	goto	i2u4_40
   947  000088  EF48  F000         
   948                           i2u4_41:
   949  00008C                     	goto	i2l37
   950  00008C  EF2F  F000         i2u4_40:
   951  000090                     	goto	i2l41
   952  000090  EF8F  F000         	
   953                           i2l40:
   954  000094                     	line	123
   955                           ;lab9_classA.c: 123:         }
   956                           	goto	i2l41
   957  000094  EF8F  F000         	line	135
   958                           ;lab9_classA.c: 135:         else if(CCPR1L == 0x12)
   959                           	
   960                           i2l34:
   961  000098                     	
   962                           i2l766:
   963  000098                     		movlw	18
   964  000098  0E12               	xorwf	((c:4030)),c,w	;volatile
   965  00009A  18BE               	btfss	status,2
   966  00009C  A4D8               	goto	i2u5_41
   967  00009E  EF53  F000         	goto	i2u5_40
   968  0000A2  EF55  F000         
   969                           i2u5_41:
   970  0000A6                     	goto	i2l41
   971  0000A6  EF8F  F000         i2u5_40:
   972  0000AA                     	goto	i2l778
   973  0000AA  EF83  F000         	line	138
   974                           	
   975                           i2l768:
   976  0000AE                     ;lab9_classA.c: 136:         {;lab9_classA.c: 138:             while(CCPR1L>4)
   977                           	goto	i2l778
   978  0000AE  EF83  F000         	
   979                           i2l44:
   980  0000B2                     	line	140
   981                           ;lab9_classA.c: 139:             {;lab9_classA.c: 140:                 while(CCP1CONbits
                                 .DC1B>0)
   982                           	goto	i2l45
   983  0000B2  EF68  F000         	
   984                           i2l46:
   985  0000B6                     	line	141
   986                           	
   987                           i2l770:
   988  0000B6                     ;lab9_classA.c: 141:                     CCP1CONbits.DC1B--;
   989                           	movlw	(01h)&0ffh
   990  0000B6  0E01               	movwf	(??_my_isr_routine+0+0)&0ffh,c
   991  0000B8  6E01               	swapf	((c:4029)),c,w	;volatile
   992  0000BA  38BD               	andlw	(1<<2)-1
   993  0000BC  0B03               	movwf	(??_my_isr_routine+1+0)&0ffh,c
   994  0000BE  6E02               	movf	((??_my_isr_routine+0+0)),c,w
   995  0000C0  5001               	subwf	(??_my_isr_routine+1+0),c
   996  0000C2  5E02               	swapf	(??_my_isr_routine+1+0)&0ffh,c
   997  0000C4  3A02               	movf	((c:4029)),c,w	;volatile
   998  0000C6  50BD               	xorwf	(??_my_isr_routine+1+0)&0ffh,c,w
   999  0000C8  1802               	andlw	not (((1<<2)-1)<<4)
  1000  0000CA  0BCF               	xorwf	(??_my_isr_routine+1+0)&0ffh,c,w
  1001  0000CC  1802               	movwf	((c:4029)),c	;volatile
  1002  0000CE  6EBD               	
  1003                           i2l45:
  1004  0000D0                     	line	140
  1005                           ;lab9_classA.c: 140:                 while(CCP1CONbits.DC1B>0)
  1006                           	swapf	((c:4029)),c,w	;volatile
  1007  0000D0  38BD               	andlw	(1<<2)-1
  1008  0000D2  0B03               	iorlw	0
  1009  0000D4  0900               	btfss	status,2
  1010  0000D6  A4D8               	goto	i2u6_41
  1011  0000D8  EF70  F000         	goto	i2u6_40
  1012  0000DC  EF72  F000         i2u6_41:
  1013  0000E0                     	goto	i2l770
  1014  0000E0  EF5B  F000         i2u6_40:
  1015  0000E4                     	goto	i2l772
  1016  0000E4  EF74  F000         	
  1017                           i2l47:
  1018  0000E8                     	line	142
  1019                           	
  1020                           i2l772:
  1021  0000E8                     ;lab9_classA.c: 142:                 CCPR1L--;
  1022                           	decf	((c:4030)),c	;volatile
  1023  0000E8  06BE               	line	143
  1024                           	
  1025                           i2l774:
  1026  0000EA                     ;lab9_classA.c: 143:                 if(CCPR1L>4) CCP1CONbits.DC1B = 3;
  1027                           		movlw	05h-1
  1028  0000EA  0E04               	cpfsgt	((c:4030)),c	;volatile
  1029  0000EC  64BE               	goto	i2u7_41
  1030  0000EE  EF7B  F000         	goto	i2u7_40
  1031  0000F2  EF7D  F000         
  1032                           i2u7_41:
  1033  0000F6                     	goto	i2l778
  1034  0000F6  EF83  F000         i2u7_40:
  1035  0000FA                     	
  1036                           i2l776:
  1037  0000FA                     	movlw	(03h & ((1<<2)-1))<<4
  1038  0000FA  0E30               	iorwf	((c:4029)),c	;volatile
  1039  0000FC  12BD               	goto	i2l778
  1040  0000FE  EF83  F000         	
  1041                           i2l48:
  1042  000102                     	goto	i2l778
  1043  000102  EF83  F000         	line	144
  1044                           ;lab9_classA.c: 144:             }
  1045                           	
  1046                           i2l43:
  1047  000106                     	line	138
  1048                           	
  1049                           i2l778:
  1050  000106                     ;lab9_classA.c: 138:             while(CCPR1L>4)
  1051                           		movlw	05h-0
  1052  000106  0E05               	cpfslt	((c:4030)),c	;volatile
  1053  000108  60BE               	goto	i2u8_41
  1054  00010A  EF89  F000         	goto	i2u8_40
  1055  00010E  EF8B  F000         
  1056                           i2u8_41:
  1057  000112                     	goto	i2l45
  1058  000112  EF68  F000         i2u8_40:
  1059  000116                     	goto	i2l41
  1060  000116  EF8F  F000         	
  1061                           i2l49:
  1062  00011A                     	goto	i2l41
  1063  00011A  EF8F  F000         	line	145
  1064                           ;lab9_classA.c: 145:         }
  1065                           	
  1066                           i2l42:
  1067  00011E                     	
  1068                           i2l41:
  1069  00011E                     	line	146
  1070                           ;lab9_classA.c: 146:         INTCONbits.INT0IE = 1;
  1071                           	bsf	((c:4082)),c,4	;volatile
  1072  00011E  88F2               	goto	i2l50
  1073  000120  EF92  F000         	line	147
  1074                           ;lab9_classA.c: 147:     }
  1075                           	
  1076                           i2l33:
  1077  000124                     	line	148
  1078                           	
  1079                           i2l50:
  1080  000124                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1081  000124  9203               	retfie f
  1082  000126  0011               	opt stack 0
  1083                           GLOBAL	__end_of_my_isr_routine
  1084                           	__end_of_my_isr_routine:
  1085  000128                     	signat	_my_isr_routine,89
  1086                           	GLOBAL	__activetblptr
  1087                           __activetblptr	EQU	0
  1088  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  1089                           	PSECT	rparam,class=COMRAM,space=1,noexec
  1090                           	GLOBAL	__Lrparam
  1091                           	FNCONF	rparam,??,?
  1092                           	GLOBAL	___rparam_used
  1093                           	___rparam_used EQU 1
  1094  0000                     	GLOBAL	___param_bank
  1095                           	___param_bank EQU 0
  1096  0000                     GLOBAL	__Lparam, __Hparam
  1097                           GLOBAL	__Lrparam, __Hrparam
  1098                           __Lparam	EQU	__Lrparam
  1099  0000                     __Hparam	EQU	__Hrparam
  1100  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  1101                           	global	btemp
  1102                           btemp:
  1103  000003                     	ds	1
  1104  000003                     	global	int$flags
  1105                           	int$flags	set btemp
  1106  0000                     	global	wtemp8
  1107                           	wtemp8 set btemp+1
  1108  0000                     	global	ttemp5
  1109                           	ttemp5 set btemp+1
  1110  0000                     	global	ttemp6
  1111                           	ttemp6 set btemp+4
  1112  0000                     	global	ttemp7
  1113                           	ttemp7 set btemp+8
  1114  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      2       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _my_isr_routine in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_isr_routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_isr_routine in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr_routine                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      2       2       1        1.6%
STACK                0      0       0       2        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BANK5               F4      0       0      13        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            F4      0       0      15        0.0%
BIGRAM             5F3      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Dec 06 16:15:59 2018

                     l25 0154                       l26 0154                       l27 0158  
                     l28 0158              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l730 0138                      l740 014A                      l732 013A  
                    l742 014C                      l734 0144                      l726 0128  
                    l744 014E                      l736 0146                      l728 0130  
                    l746 0150                      l738 0148                      l748 0152  
           __CFG_CPB$OFF 000000                      _PR2 000FCB             __CFG_CPD$OFF 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     i2l40 0094  
                   i2l33 0124                     i2l41 011E                     i2l42 011E  
                   i2l34 0098                     i2l50 0124                     i2l43 0106  
                   i2l35 0080                     i2l44 00B2                     i2l36 0040  
                   i2l45 00D0                     i2l37 005E                     i2l46 00B6  
                   i2l38 0044                     i2l47 00E8                     i2l39 0076  
                   i2l48 0102                     i2l49 011A                     _TMR2 000FCC  
                   _main 0128                     btemp 0003                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    _T2CON 000FCA                    i2l750 0014  
                  i2l760 0076                    i2l752 0022                    i2l770 00B6  
                  i2l762 007A                    i2l754 0026                    i2l772 00E8  
                  i2l756 003C                    i2l764 0080                    i2l774 00EA  
                  i2l758 0044                    i2l766 0098                    i2l776 00FA  
                  i2l768 00AE                    i2l778 0106            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    ttemp5 0004                    ttemp6 0007  
                  ttemp7 000B                    status 000FD8                    wtemp8 0004  
        __initialization 015C             __end_of_main 015C                   ??_main 0003  
          __activetblptr 000000                   _CCPR1L 000FBE                   i2u1_40 0022  
                 i2u1_41 001E                   i2u2_40 0038                   i2u2_41 0034  
                 i2u3_40 0072                   i2u3_41 006E                   i2u4_40 0090  
                 i2u4_41 008C                   i2u5_40 00AA                   i2u5_41 00A6  
                 i2u6_40 00E4                   i2u6_41 00E0                   i2u7_40 00FA  
                 i2u7_41 00F6                   i2u8_40 0116                   i2u8_41 0112  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000               __accesstop 0080  
__end_of__initialization 015C          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001  __size_of_my_isr_routine 0120                  __Hparam 0000  
                __Lparam 0000                  __pcinit 015C                  __ramtop 0600  
                __ptext0 0128           __pintcode_body 0012     end_of_initialization 015C  
                int_func 0012                _TRISCbits 000F94              _CCP1CONbits 000FBD  
    start_initialization 015C           _my_isr_routine 0008         __CFG_OSC$INTIO67 000000  
       __CFG_LPT1OSC$OFF 000000   __end_of_my_isr_routine 0128        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008          ?_my_isr_routine 0001                 _RCONbits 000FD0  
       __CFG_WDTPS$32768 000000              _INTCON2bits 000FF1                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000            __size_of_main 0034  
               int$flags 0003               _INTCONbits 000FF2                 intlevel2 0000  
             _OSCCONbits 000FD3         ??_my_isr_routine 0001  
