

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Dec 30 19:42:10 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_INTERRUPT_Initialize
   384                           	FNCALL	_main,_LEDInit
   385                           	FNCALL	_main,_Mode2
   386                           	FNCALL	_main,_UART_Initialize
   387                           	FNCALL	_Mode2,_adc_init
   388                           	FNCALL	_Mode2,_ccp2_init
   389                           	FNCALL	_Mode2,_tmr_init
   390                           	FNROOT	_main
   391                           	FNCALL	_Hi_ISR,_ADC_Read
   392                           	FNCALL	_Hi_ISR,_PrintDigital
   393                           	FNCALL	_Hi_ISR,_UART_Write
   394                           	FNCALL	_PrintDigital,_UART_Write
   395                           	FNCALL	_PrintDigital,___awdiv
   396                           	FNCALL	_PrintDigital,___wmul
   397                           	FNCALL	intlevel2,_Hi_ISR
   398                           	global	intlevel2
   399                           	FNROOT	intlevel2
   400                           	global	_data
   401                           	global	_LATCbits
   402                           _LATCbits	set	0xF8B
   403  0000                     	global	_LATDbits
   404                           _LATDbits	set	0xF8C
   405  0000                     	global	_TRISEbits
   406                           _TRISEbits	set	0xF96
   407  0000                     	global	_TRISD
   408                           _TRISD	set	0xF95
   409  0000                     	global	_TRISDbits
   410                           _TRISDbits	set	0xF95
   411  0000                     	global	_TRISCbits
   412                           _TRISCbits	set	0xF94
   413  0000                     	global	_CCPR2
   414                           _CCPR2	set	0xFBB
   415  0000                     	global	_ADRESL
   416                           _ADRESL	set	0xFC3
   417  0000                     	global	_ADRESH
   418                           _ADRESH	set	0xFC4
   419  0000                     	global	_PIR2bits
   420                           _PIR2bits	set	0xFA1
   421  0000                     	global	_T3CONbits
   422                           _T3CONbits	set	0xFB1
   423  0000                     	global	_ADCON2bits
   424                           _ADCON2bits	set	0xFC0
   425  0000                     	global	_ADCON0bits
   426                           _ADCON0bits	set	0xFC2
   427  0000                     	global	_ADCON1bits
   428                           _ADCON1bits	set	0xFC1
   429  0000                     	global	_TXREG
   430                           _TXREG	set	0xFAD
   431  0000                     	global	_IPR1bits
   432                           _IPR1bits	set	0xF9F
   433  0000                     	global	_PIE1bits
   434                           _PIE1bits	set	0xF9D
   435  0000                     	global	_PIR1bits
   436                           _PIR1bits	set	0xF9E
   437  0000                     	global	_RCSTAbits
   438                           _RCSTAbits	set	0xFAB
   439  0000                     	global	_SPBRG
   440                           _SPBRG	set	0xFAF
   441  0000                     	global	_BAUDCONbits
   442                           _BAUDCONbits	set	0xFB8
   443  0000                     	global	_TXSTAbits
   444                           _TXSTAbits	set	0xFAC
   445  0000                     	global	_RCONbits
   446                           _RCONbits	set	0xFD0
   447  0000                     	global	_TMR3ON
   448                           _TMR3ON	set	0x7D88
   449  0000                     	global	_T3CCP2
   450                           _T3CCP2	set	0x7D8E
   451  0000                     	global	_T3CCP1
   452                           _T3CCP1	set	0x7D8B
   453  0000                     	global	_CCP2IP
   454                           _CCP2IP	set	0x7D10
   455  0000                     	global	_CCP2IE
   456                           _CCP2IE	set	0x7D00
   457  0000                     	global	_CCP2M0
   458                           _CCP2M0	set	0x7DD0
   459  0000                     	global	_CCP2M1
   460                           _CCP2M1	set	0x7DD1
   461  0000                     	global	_CCP2M2
   462                           _CCP2M2	set	0x7DD2
   463  0000                     	global	_CCP2M3
   464                           _CCP2M3	set	0x7DD3
   465  0000                     	global	_INTCONbits
   466                           _INTCONbits	set	0xFF2
   467  0000                     ; #config settings
   468                           global __CFG_OSC$INTIO67
   469                           __CFG_OSC$INTIO67 equ 0x0
   470  0000                     global __CFG_FCMEN$OFF
   471                           __CFG_FCMEN$OFF equ 0x0
   472  0000                     global __CFG_IESO$ON
   473                           __CFG_IESO$ON equ 0x0
   474  0000                     global __CFG_PWRT$OFF
   475                           __CFG_PWRT$OFF equ 0x0
   476  0000                     global __CFG_BOREN$SBORDIS
   477                           __CFG_BOREN$SBORDIS equ 0x0
   478  0000                     global __CFG_BORV$3
   479                           __CFG_BORV$3 equ 0x0
   480  0000                     global __CFG_WDT$OFF
   481                           __CFG_WDT$OFF equ 0x0
   482  0000                     global __CFG_WDTPS$1
   483                           __CFG_WDTPS$1 equ 0x0
   484  0000                     global __CFG_CCP2MX$PORTC
   485                           __CFG_CCP2MX$PORTC equ 0x0
   486  0000                     global __CFG_PBADEN$ON
   487                           __CFG_PBADEN$ON equ 0x0
   488  0000                     global __CFG_LPT1OSC$OFF
   489                           __CFG_LPT1OSC$OFF equ 0x0
   490  0000                     global __CFG_MCLRE$ON
   491                           __CFG_MCLRE$ON equ 0x0
   492  0000                     global __CFG_STVREN$ON
   493                           __CFG_STVREN$ON equ 0x0
   494  0000                     global __CFG_LVP$OFF
   495                           __CFG_LVP$OFF equ 0x0
   496  0000                     global __CFG_XINST$OFF
   497                           __CFG_XINST$OFF equ 0x0
   498  0000                     global __CFG_CP0$OFF
   499                           __CFG_CP0$OFF equ 0x0
   500  0000                     global __CFG_CP1$OFF
   501                           __CFG_CP1$OFF equ 0x0
   502  0000                     global __CFG_CP2$OFF
   503                           __CFG_CP2$OFF equ 0x0
   504  0000                     global __CFG_CP3$OFF
   505                           __CFG_CP3$OFF equ 0x0
   506  0000                     global __CFG_CPB$OFF
   507                           __CFG_CPB$OFF equ 0x0
   508  0000                     global __CFG_CPD$OFF
   509                           __CFG_CPD$OFF equ 0x0
   510  0000                     global __CFG_WRT0$OFF
   511                           __CFG_WRT0$OFF equ 0x0
   512  0000                     global __CFG_WRT1$OFF
   513                           __CFG_WRT1$OFF equ 0x0
   514  0000                     global __CFG_WRT2$OFF
   515                           __CFG_WRT2$OFF equ 0x0
   516  0000                     global __CFG_WRT3$OFF
   517                           __CFG_WRT3$OFF equ 0x0
   518  0000                     global __CFG_WRTC$OFF
   519                           __CFG_WRTC$OFF equ 0x0
   520  0000                     global __CFG_WRTB$OFF
   521                           __CFG_WRTB$OFF equ 0x0
   522  0000                     global __CFG_WRTD$OFF
   523                           __CFG_WRTD$OFF equ 0x0
   524  0000                     global __CFG_EBTR0$OFF
   525                           __CFG_EBTR0$OFF equ 0x0
   526  0000                     global __CFG_EBTR1$OFF
   527                           __CFG_EBTR1$OFF equ 0x0
   528  0000                     global __CFG_EBTR2$OFF
   529                           __CFG_EBTR2$OFF equ 0x0
   530  0000                     global __CFG_EBTR3$OFF
   531                           __CFG_EBTR3$OFF equ 0x0
   532  0000                     global __CFG_EBTRB$OFF
   533                           __CFG_EBTRB$OFF equ 0x0
   534  0000                     	file	"C:\Users\febri\AppData\Local\Temp\shs4."
   535                           	line	#
   536                           psect	cinit,class=CODE,delta=1,reloc=2
   537                           global __pcinit
   538                           __pcinit:
   539  000938                     global start_initialization
   540                           start_initialization:
   541  000938                     
   542                           global __initialization
   543                           __initialization:
   544  000938                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   545                           global __pbssCOMRAM
   546                           __pbssCOMRAM:
   547  000001                     	global	_data
   548                           _data:
   549  000001                            ds      26
   550  000001                     	file	"C:\Users\febri\AppData\Local\Temp\shs4."
   551                           	line	#
   552                           psect	cinit
   553                           ; Clear objects allocated to COMRAM (26 bytes)
   554                           	global __pbssCOMRAM
   555                           lfsr	0,__pbssCOMRAM
   556  000938  EE00  F001         movlw	26
   557  00093C  0E1A               clear_0:
   558  00093E                     clrf	postinc0,c
   559  00093E  6AEE               decf	wreg
   560  000940  06E8               bnz	clear_0
   561  000942  E1FD               psect cinit,class=CODE,delta=1
   562                           global end_of_initialization,__end_of__initialization
   563                           
   564                           ;End of C runtime variable initialization code
   565                           
   566                           end_of_initialization:
   567  000944                     __end_of__initialization:
   568  000944                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   569  000944  9030               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   570  000946  9230               movlb 0
   571  000948  0100               goto _main	;jump to C main() function
   572  00094A  EF90  F004         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   573                           global __pcstackCOMRAM
   574                           __pcstackCOMRAM:
   575  00001B                     ?_INTERRUPT_Initialize:	; 1 bytes @ 0x0
   576  00001B                     ?_UART_Initialize:	; 1 bytes @ 0x0
   577  00001B                     ?_LEDInit:	; 1 bytes @ 0x0
   578  00001B                     ?_Mode2:	; 1 bytes @ 0x0
   579  00001B                     ?_adc_init:	; 1 bytes @ 0x0
   580  00001B                     ?_ccp2_init:	; 1 bytes @ 0x0
   581  00001B                     ?_tmr_init:	; 1 bytes @ 0x0
   582  00001B                     ?_main:	; 1 bytes @ 0x0
   583  00001B                     ?_UART_Write:	; 1 bytes @ 0x0
   584  00001B                     ??_UART_Write:	; 1 bytes @ 0x0
   585  00001B                     ?_Hi_ISR:	; 1 bytes @ 0x0
   586  00001B                     	global	?_ADC_Read
   587                           ?_ADC_Read:	; 2 bytes @ 0x0
   588  00001B                     	global	?___awdiv
   589                           ?___awdiv:	; 2 bytes @ 0x0
   590  00001B                     	global	UART_Write@data
   591                           UART_Write@data:	; 1 bytes @ 0x0
   592  00001B                     	global	ADC_Read@channel
   593                           ADC_Read@channel:	; 2 bytes @ 0x0
   594  00001B                     	global	___awdiv@dividend
   595                           ___awdiv@dividend:	; 2 bytes @ 0x0
   596  00001B                     	ds   2
   597  00001B                     ??_ADC_Read:	; 1 bytes @ 0x2
   598  00001D                     	global	___awdiv@divisor
   599                           ___awdiv@divisor:	; 2 bytes @ 0x2
   600  00001D                     	ds   2
   601  00001D                     ??___awdiv:	; 1 bytes @ 0x4
   602  00001F                     	global	___awdiv@counter
   603                           ___awdiv@counter:	; 1 bytes @ 0x4
   604  00001F                     	global	ADC_Read@digital
   605                           ADC_Read@digital:	; 2 bytes @ 0x4
   606  00001F                     	ds   1
   607  00001F                     	global	___awdiv@sign
   608                           ___awdiv@sign:	; 1 bytes @ 0x5
   609  000020                     	ds   1
   610  000020                     	global	___awdiv@quotient
   611                           ___awdiv@quotient:	; 2 bytes @ 0x6
   612  000021                     	ds   2
   613  000021                     	global	?___wmul
   614                           ?___wmul:	; 2 bytes @ 0x8
   615  000023                     	global	___wmul@multiplier
   616                           ___wmul@multiplier:	; 2 bytes @ 0x8
   617  000023                     	ds   2
   618  000023                     	global	___wmul@multiplicand
   619                           ___wmul@multiplicand:	; 2 bytes @ 0xA
   620  000025                     	ds   2
   621  000025                     ??___wmul:	; 1 bytes @ 0xC
   622  000027                     	global	___wmul@product
   623                           ___wmul@product:	; 2 bytes @ 0xC
   624  000027                     	ds   2
   625  000027                     ?_PrintDigital:	; 1 bytes @ 0xE
   626  000029                     	global	PrintDigital@digital
   627                           PrintDigital@digital:	; 2 bytes @ 0xE
   628  000029                     	ds   2
   629  000029                     ??_PrintDigital:	; 1 bytes @ 0x10
   630  00002B                     	global	PrintDigital@c
   631                           PrintDigital@c:	; 1 bytes @ 0x10
   632  00002B                     	ds   1
   633  00002B                     	global	PrintDigital@temp
   634                           PrintDigital@temp:	; 2 bytes @ 0x11
   635  00002C                     	ds   2
   636  00002C                     ??_Hi_ISR:	; 1 bytes @ 0x13
   637  00002E                     	ds   2
   638  00002E                     ??_INTERRUPT_Initialize:	; 1 bytes @ 0x15
   639  000030                     ??_UART_Initialize:	; 1 bytes @ 0x15
   640  000030                     ??_LEDInit:	; 1 bytes @ 0x15
   641  000030                     ??_Mode2:	; 1 bytes @ 0x15
   642  000030                     ??_adc_init:	; 1 bytes @ 0x15
   643  000030                     ??_ccp2_init:	; 1 bytes @ 0x15
   644  000030                     ??_tmr_init:	; 1 bytes @ 0x15
   645  000030                     ??_main:	; 1 bytes @ 0x15
   646  000030                     ;!
   647                           ;!Data Sizes:
   648                           ;!    Strings     0
   649                           ;!    Constant    0
   650                           ;!    Data        0
   651                           ;!    BSS         26
   652                           ;!    Persistent  0
   653                           ;!    Stack       0
   654                           ;!
   655                           ;!Auto Spaces:
   656                           ;!    Space          Size  Autos    Used
   657                           ;!    COMRAM          126     21      47
   658                           ;!    BANK0           128      0       0
   659                           ;!    BANK1           256      0       0
   660                           ;!    BANK2           256      0       0
   661                           ;!    BANK3           256      0       0
   662                           ;!    BANK4           256      0       0
   663                           ;!    BANK5           244      0       0
   664                           
   665                           ;!
   666                           ;!Pointer List with Targets:
   667                           ;!
   668                           ;!    None.
   669                           
   670                           
   671                           ;!
   672                           ;!Critical Paths under _main in COMRAM
   673                           ;!
   674                           ;!    None.
   675                           ;!
   676                           ;!Critical Paths under _Hi_ISR in COMRAM
   677                           ;!
   678                           ;!    _Hi_ISR->_PrintDigital
   679                           ;!    _PrintDigital->___wmul
   680                           ;!    ___wmul->___awdiv
   681                           ;!
   682                           ;!Critical Paths under _main in BANK0
   683                           ;!
   684                           ;!    None.
   685                           ;!
   686                           ;!Critical Paths under _Hi_ISR in BANK0
   687                           ;!
   688                           ;!    None.
   689                           ;!
   690                           ;!Critical Paths under _main in BANK1
   691                           ;!
   692                           ;!    None.
   693                           ;!
   694                           ;!Critical Paths under _Hi_ISR in BANK1
   695                           ;!
   696                           ;!    None.
   697                           ;!
   698                           ;!Critical Paths under _main in BANK2
   699                           ;!
   700                           ;!    None.
   701                           ;!
   702                           ;!Critical Paths under _Hi_ISR in BANK2
   703                           ;!
   704                           ;!    None.
   705                           ;!
   706                           ;!Critical Paths under _main in BANK3
   707                           ;!
   708                           ;!    None.
   709                           ;!
   710                           ;!Critical Paths under _Hi_ISR in BANK3
   711                           ;!
   712                           ;!    None.
   713                           ;!
   714                           ;!Critical Paths under _main in BANK4
   715                           ;!
   716                           ;!    None.
   717                           ;!
   718                           ;!Critical Paths under _Hi_ISR in BANK4
   719                           ;!
   720                           ;!    None.
   721                           ;!
   722                           ;!Critical Paths under _main in BANK5
   723                           ;!
   724                           ;!    None.
   725                           ;!
   726                           ;!Critical Paths under _Hi_ISR in BANK5
   727                           ;!
   728                           ;!    None.
   729                           
   730 ;;
   731 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   732 ;;
   733                           
   734                           ;!
   735                           ;!Call Graph Tables:
   736                           ;!
   737                           ;! ---------------------------------------------------------------------------------
   738                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   739                           ;! ---------------------------------------------------------------------------------
   740                           ;! (0) _main                                                 0     0      0       0
   741                           ;!               _INTERRUPT_Initialize
   742                           ;!                            _LEDInit
   743                           ;!                              _Mode2
   744                           ;!                    _UART_Initialize
   745                           ;! ---------------------------------------------------------------------------------
   746                           ;! (1) _UART_Initialize                                      0     0      0       0
   747                           ;! ---------------------------------------------------------------------------------
   748                           ;! (1) _Mode2                                                0     0      0       0
   749                           ;!                           _adc_init
   750                           ;!                          _ccp2_init
   751                           ;!                           _tmr_init
   752                           ;! ---------------------------------------------------------------------------------
   753                           ;! (2) _tmr_init                                             0     0      0       0
   754                           ;! ---------------------------------------------------------------------------------
   755                           ;! (2) _ccp2_init                                            0     0      0       0
   756                           ;! ---------------------------------------------------------------------------------
   757                           ;! (2) _adc_init                                             0     0      0       0
   758                           ;! ---------------------------------------------------------------------------------
   759                           ;! (1) _LEDInit                                              0     0      0       0
   760                           ;! ---------------------------------------------------------------------------------
   761                           ;! (1) _INTERRUPT_Initialize                                 0     0      0       0
   762                           ;! ---------------------------------------------------------------------------------
   763                           ;! Estimated maximum stack depth 2
   764                           ;! ---------------------------------------------------------------------------------
   765                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   766                           ;! ---------------------------------------------------------------------------------
   767                           ;! (3) _Hi_ISR                                               2     2      0    6376
   768                           ;!                                             19 COMRAM     2     2      0
   769                           ;!                           _ADC_Read
   770                           ;!                       _PrintDigital
   771                           ;!                         _UART_Write
   772                           ;! ---------------------------------------------------------------------------------
   773                           ;! (4) _PrintDigital                                         5     3      2    5328
   774                           ;!                                             14 COMRAM     5     3      2
   775                           ;!                         _UART_Write
   776                           ;!                            ___awdiv
   777                           ;!                             ___wmul
   778                           ;! ---------------------------------------------------------------------------------
   779                           ;! (5) ___wmul                                               6     2      4    1071
   780                           ;!                                              8 COMRAM     6     2      4
   781                           ;!                            ___awdiv (ARG)
   782                           ;! ---------------------------------------------------------------------------------
   783                           ;! (5) ___awdiv                                              8     4      4    2580
   784                           ;!                                              0 COMRAM     8     4      4
   785                           ;! ---------------------------------------------------------------------------------
   786                           ;! (4) _UART_Write                                           1     1      0      15
   787                           ;!                                              0 COMRAM     1     1      0
   788                           ;! ---------------------------------------------------------------------------------
   789                           ;! (4) _ADC_Read                                             6     4      2    1033
   790                           ;!                                              0 COMRAM     6     4      2
   791                           ;! ---------------------------------------------------------------------------------
   792                           ;! Estimated maximum stack depth 5
   793                           ;! ---------------------------------------------------------------------------------
   794                           ;!
   795                           ;! Call Graph Graphs:
   796                           ;!
   797                           ;! _main (ROOT)
   798                           ;!   _INTERRUPT_Initialize
   799                           ;!   _LEDInit
   800                           ;!   _Mode2
   801                           ;!     _adc_init
   802                           ;!     _ccp2_init
   803                           ;!     _tmr_init
   804                           ;!   _UART_Initialize
   805                           ;!
   806                           ;! _Hi_ISR (ROOT)
   807                           ;!   _ADC_Read
   808                           ;!   _PrintDigital
   809                           ;!     _UART_Write
   810                           ;!     ___awdiv
   811                           ;!     ___wmul
   812                           ;!       ___awdiv (ARG)
   813                           ;!   _UART_Write
   814                           ;!
   815                           
   816                           ;! Address spaces:
   817                           
   818                           ;!Name               Size   Autos  Total    Cost      Usage
   819                           ;!BIGRAM             5F3      0       0      16        0.0%
   820                           ;!EEDATA             100      0       0       0        0.0%
   821                           ;!BITBANK4           100      0       0      11        0.0%
   822                           ;!BANK4              100      0       0      12        0.0%
   823                           ;!BITBANK3           100      0       0       9        0.0%
   824                           ;!BANK3              100      0       0      10        0.0%
   825                           ;!BITBANK2           100      0       0       7        0.0%
   826                           ;!BANK2              100      0       0       8        0.0%
   827                           ;!BITBANK1           100      0       0       5        0.0%
   828                           ;!BANK1              100      0       0       6        0.0%
   829                           ;!BITBANK5            F4      0       0      15        0.0%
   830                           ;!BANK5               F4      0       0      13        0.0%
   831                           ;!BITBANK0            80      0       0       3        0.0%
   832                           ;!BANK0               80      0       0       4        0.0%
   833                           ;!BITCOMRAM           7E      0       0       0        0.0%
   834                           ;!COMRAM              7E     15      2F       1       37.3%
   835                           ;!BITSFR_5             0      0       0     200        0.0%
   836                           ;!SFR_5                0      0       0     200        0.0%
   837                           ;!BITSFR_4             0      0       0     200        0.0%
   838                           ;!SFR_4                0      0       0     200        0.0%
   839                           ;!BITSFR_3             0      0       0     200        0.0%
   840                           ;!SFR_3                0      0       0     200        0.0%
   841                           ;!BITSFR_2             0      0       0     200        0.0%
   842                           ;!SFR_2                0      0       0     200        0.0%
   843                           ;!BITSFR_1             0      0       0     200        0.0%
   844                           ;!SFR_1                0      0       0     200        0.0%
   845                           ;!BITSFR               0      0       0     200        0.0%
   846                           ;!SFR                  0      0       0     200        0.0%
   847                           ;!STACK                0      0       0       2        0.0%
   848                           ;!NULL                 0      0       0       0        0.0%
   849                           ;!ABS                  0      0      2F      14        0.0%
   850                           ;!DATA                 0      0      2F      17        0.0%
   851                           ;!CODE                 0      0       0       0        0.0%
   852                           
   853                           	global	_main
   854                           
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 82 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   871 ;;      Params:         0       0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels required when called:    5
   877 ;; This function calls:
   878 ;;		_INTERRUPT_Initialize
   879 ;;		_LEDInit
   880 ;;		_Mode2
   881 ;;		_UART_Initialize
   882 ;; This function is called by:
   883 ;;		Startup code after reset
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           psect	text0,class=CODE,space=0,reloc=2,group=0
   887                           	file	"main.c"
   888                           	line	82
   889                           global __ptext0
   890                           __ptext0:
   891  000920                     psect	text0
   892                           	file	"main.c"
   893                           	line	82
   894                           	global	__size_of_main
   895                           	__size_of_main	equ	__end_of_main-_main
   896  0000                     	
   897                           _main:
   898  000920                     ;incstack = 0
   899                           	opt	stack 26
   900                           	line	85
   901                           	
   902                           l1009:
   903  000920                     ;main.c: 85:     INTERRUPT_Initialize();
   904                           	call	_INTERRUPT_Initialize	;wreg free
   905  000920  ECC0  F004         	line	86
   906                           	
   907                           l1011:
   908  000924                     ;main.c: 86:     UART_Initialize();
   909                           	call	_UART_Initialize	;wreg free
   910  000924  EC62  F004         	line	87
   911                           	
   912                           l1013:
   913  000928                     ;main.c: 87:     LEDInit();
   914                           	call	_LEDInit	;wreg free
   915  000928  EC82  F004         	line	88
   916                           ;main.c: 88:     Mode2();
   917                           	call	_Mode2	;wreg free
   918  00092C  ECB2  F004         	line	90
   919                           ;main.c: 90:     while(1) {
   920                           	
   921                           l91:
   922  000930                     	line	91
   923                           ;main.c: 91:     }
   924                           	
   925                           l92:
   926  000930                     	goto	l91
   927  000930  EF98  F004         	
   928                           l93:
   929  000934                     	line	94
   930                           ;main.c: 92:     return;
   931                           	
   932                           l94:
   933  000934                     	global	start
   934                           	goto	start
   935  000934  EF07  F000         	opt stack 0
   936                           GLOBAL	__end_of_main
   937                           	__end_of_main:
   938  000938                     	signat	_main,89
   939                           	global	_UART_Initialize
   940                           
   941 ;; *************** function _UART_Initialize *****************
   942 ;; Defined at:
   943 ;;		line 103 in file "main.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   957 ;;      Params:         0       0       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    3
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           psect	text1,class=CODE,space=0,reloc=2,group=0
   971                           	line	103
   972                           global __ptext1
   973                           __ptext1:
   974  0008C4                     psect	text1
   975                           	file	"main.c"
   976                           	line	103
   977                           	global	__size_of_UART_Initialize
   978                           	__size_of_UART_Initialize	equ	__end_of_UART_Initialize-_UART_Initialize
   979  0000                     	
   980                           _UART_Initialize:
   981  0008C4                     ;incstack = 0
   982                           	opt	stack 27
   983                           	line	106
   984                           	
   985                           l919:
   986  0008C4                     ;main.c: 106:     TRISCbits.TRISC6 = 1;
   987                           	bsf	((c:3988)),c,6	;volatile
   988  0008C4  8C94               	line	107
   989                           ;main.c: 107:     TRISCbits.TRISC7 = 1;
   990                           	bsf	((c:3988)),c,7	;volatile
   991  0008C6  8E94               	line	118
   992                           ;main.c: 118:     TXSTAbits.SYNC = 0;
   993                           	bcf	((c:4012)),c,4	;volatile
   994  0008C8  98AC               	line	119
   995                           ;main.c: 119:     BAUDCONbits.BRG16 = 0 ;
   996                           	bcf	((c:4024)),c,3	;volatile
   997  0008CA  96B8               	line	120
   998                           ;main.c: 120:     TXSTAbits.BRGH = 1;
   999                           	bsf	((c:4012)),c,2	;volatile
  1000  0008CC  84AC               	line	121
  1001                           	
  1002                           l921:
  1003  0008CE                     ;main.c: 121:     SPBRG = 51;
  1004                           	movlw	low(033h)
  1005  0008CE  0E33               	movwf	((c:4015)),c	;volatile
  1006  0008D0  6EAF               	line	125
  1007                           	
  1008                           l923:
  1009  0008D2                     ;main.c: 125:     RCSTAbits.SPEN = 1;
  1010                           	bsf	((c:4011)),c,7	;volatile
  1011  0008D2  8EAB               	line	126
  1012                           	
  1013                           l925:
  1014  0008D4                     ;main.c: 126:     PIR1bits.TXIF = 1;
  1015                           	bsf	((c:3998)),c,4	;volatile
  1016  0008D4  889E               	line	127
  1017                           	
  1018                           l927:
  1019  0008D6                     ;main.c: 127:     PIR1bits.RCIF = 0;
  1020                           	bcf	((c:3998)),c,5	;volatile
  1021  0008D6  9A9E               	line	128
  1022                           	
  1023                           l929:
  1024  0008D8                     ;main.c: 128:     TXSTAbits.TXEN = 1;
  1025                           	bsf	((c:4012)),c,5	;volatile
  1026  0008D8  8AAC               	line	129
  1027                           	
  1028                           l931:
  1029  0008DA                     ;main.c: 129:     RCSTAbits.CREN = 0;
  1030                           	bcf	((c:4011)),c,4	;volatile
  1031  0008DA  98AB               	line	131
  1032                           	
  1033                           l933:
  1034  0008DC                     ;main.c: 131:     PIE1bits.TXIE = 0;
  1035                           	bcf	((c:3997)),c,4	;volatile
  1036  0008DC  989D               	line	132
  1037                           	
  1038                           l935:
  1039  0008DE                     ;main.c: 132:     IPR1bits.TXIP = 0;
  1040                           	bcf	((c:3999)),c,4	;volatile
  1041  0008DE  989F               	line	133
  1042                           	
  1043                           l937:
  1044  0008E0                     ;main.c: 133:     PIE1bits.RCIE = 0;
  1045                           	bcf	((c:3997)),c,5	;volatile
  1046  0008E0  9A9D               	line	134
  1047                           	
  1048                           l939:
  1049  0008E2                     ;main.c: 134:     IPR1bits.RCIP = 0;
  1050                           	bcf	((c:3999)),c,5	;volatile
  1051  0008E2  9A9F               	line	135
  1052                           	
  1053                           l100:
  1054  0008E4                     	return	;funcret
  1055  0008E4  0012               	opt stack 0
  1056                           GLOBAL	__end_of_UART_Initialize
  1057                           	__end_of_UART_Initialize:
  1058  0008E6                     	signat	_UART_Initialize,89
  1059                           	global	_Mode2
  1060                           
  1061 ;; *************** function _Mode2 *****************
  1062 ;; Defined at:
  1063 ;;		line 160 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1077 ;;      Params:         0       0       0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    4
  1084 ;; This function calls:
  1085 ;;		_adc_init
  1086 ;;		_ccp2_init
  1087 ;;		_tmr_init
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1093                           	line	160
  1094                           global __ptext2
  1095                           __ptext2:
  1096  000964                     psect	text2
  1097                           	file	"main.c"
  1098                           	line	160
  1099                           	global	__size_of_Mode2
  1100                           	__size_of_Mode2	equ	__end_of_Mode2-_Mode2
  1101  0000                     	
  1102                           _Mode2:
  1103  000964                     ;incstack = 0
  1104                           	opt	stack 26
  1105                           	line	161
  1106                           	
  1107                           l943:
  1108  000964                     ;main.c: 161:     TRISD = 0;
  1109                           	movlw	low(0)
  1110  000964  0E00               	movwf	((c:3989)),c	;volatile
  1111  000966  6E95               	line	163
  1112                           	
  1113                           l945:
  1114  000968                     ;main.c: 163:     adc_init();
  1115                           	call	_adc_init	;wreg free
  1116  000968  EC36  F004         	line	164
  1117                           	
  1118                           l947:
  1119  00096C                     ;main.c: 164:     ccp2_init();
  1120                           	call	_ccp2_init	;wreg free
  1121  00096C  ECA7  F004         	line	165
  1122                           	
  1123                           l949:
  1124  000970                     ;main.c: 165:     tmr_init();
  1125                           	call	_tmr_init	;wreg free
  1126  000970  ECBB  F004         	line	166
  1127                           	
  1128                           l112:
  1129  000974                     	return	;funcret
  1130  000974  0012               	opt stack 0
  1131                           GLOBAL	__end_of_Mode2
  1132                           	__end_of_Mode2:
  1133  000976                     	signat	_Mode2,89
  1134                           	global	_tmr_init
  1135                           
  1136 ;; *************** function _tmr_init *****************
  1137 ;; Defined at:
  1138 ;;		line 203 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		None
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1152 ;;      Params:         0       0       0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    3
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_Mode2
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1166                           	line	203
  1167                           global __ptext3
  1168                           __ptext3:
  1169  000976                     psect	text3
  1170                           	file	"main.c"
  1171                           	line	203
  1172                           	global	__size_of_tmr_init
  1173                           	__size_of_tmr_init	equ	__end_of_tmr_init-_tmr_init
  1174  0000                     	
  1175                           _tmr_init:
  1176  000976                     ;incstack = 0
  1177                           	opt	stack 26
  1178                           	line	205
  1179                           	
  1180                           l865:
  1181  000976                     ;main.c: 205:     T3CCP1 = 1;
  1182                           	bsf	c:(32139/8),(32139)&7	;volatile
  1183  000976  86B1               	line	206
  1184                           ;main.c: 206:     T3CCP2 = 0;
  1185                           	bcf	c:(32142/8),(32142)&7	;volatile
  1186  000978  9CB1               	line	207
  1187                           ;main.c: 207:     TMR3ON = 1;
  1188                           	bsf	c:(32136/8),(32136)&7	;volatile
  1189  00097A  80B1               	line	208
  1190                           ;main.c: 208:     T3CONbits.RD16 = 1;
  1191                           	bsf	((c:4017)),c,7	;volatile
  1192  00097C  8EB1               	line	212
  1193                           	
  1194                           l121:
  1195  00097E                     	return	;funcret
  1196  00097E  0012               	opt stack 0
  1197                           GLOBAL	__end_of_tmr_init
  1198                           	__end_of_tmr_init:
  1199  000980                     	signat	_tmr_init,89
  1200                           	global	_ccp2_init
  1201                           
  1202 ;; *************** function _ccp2_init *****************
  1203 ;; Defined at:
  1204 ;;		line 189 in file "main.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1218 ;;      Params:         0       0       0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    3
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_Mode2
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1232                           	line	189
  1233                           global __ptext4
  1234                           __ptext4:
  1235  00094E                     psect	text4
  1236                           	file	"main.c"
  1237                           	line	189
  1238                           	global	__size_of_ccp2_init
  1239                           	__size_of_ccp2_init	equ	__end_of_ccp2_init-_ccp2_init
  1240  0000                     	
  1241                           _ccp2_init:
  1242  00094E                     ;incstack = 0
  1243                           	opt	stack 26
  1244                           	line	192
  1245                           	
  1246                           l861:
  1247  00094E                     ;main.c: 192:     CCP2M3 = 0;
  1248                           	bcf	c:(32211/8),(32211)&7	;volatile
  1249  00094E  96BA               	line	193
  1250                           ;main.c: 193:     CCP2M2 = 0;
  1251                           	bcf	c:(32210/8),(32210)&7	;volatile
  1252  000950  94BA               	line	194
  1253                           ;main.c: 194:     CCP2M1 = 1;
  1254                           	bsf	c:(32209/8),(32209)&7	;volatile
  1255  000952  82BA               	line	195
  1256                           ;main.c: 195:     CCP2M0 = 0;
  1257                           	bcf	c:(32208/8),(32208)&7	;volatile
  1258  000954  90BA               	line	197
  1259                           ;main.c: 197:     CCP2IE = 1;
  1260                           	bsf	c:(32000/8),(32000)&7	;volatile
  1261  000956  80A0               	line	198
  1262                           ;main.c: 198:     CCP2IP = 1;
  1263                           	bsf	c:(32016/8),(32016)&7	;volatile
  1264  000958  80A2               	line	200
  1265                           	
  1266                           l863:
  1267  00095A                     ;main.c: 200:     CCPR2 = 10;
  1268                           	movlw	high(0Ah)
  1269  00095A  0E00               	movwf	((c:4027+1)),c	;volatile
  1270  00095C  6EBC               	movlw	low(0Ah)
  1271  00095E  0E0A               	movwf	((c:4027)),c	;volatile
  1272  000960  6EBB               	line	201
  1273                           	
  1274                           l118:
  1275  000962                     	return	;funcret
  1276  000962  0012               	opt stack 0
  1277                           GLOBAL	__end_of_ccp2_init
  1278                           	__end_of_ccp2_init:
  1279  000964                     	signat	_ccp2_init,89
  1280                           	global	_adc_init
  1281                           
  1282 ;; *************** function _adc_init *****************
  1283 ;; Defined at:
  1284 ;;		line 168 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1298 ;;      Params:         0       0       0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0       0       0
  1301 ;;      Totals:         0       0       0       0       0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    3
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_Mode2
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1312                           	line	168
  1313                           global __ptext5
  1314                           __ptext5:
  1315  00086C                     psect	text5
  1316                           	file	"main.c"
  1317                           	line	168
  1318                           	global	__size_of_adc_init
  1319                           	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
  1320  0000                     	
  1321                           _adc_init:
  1322  00086C                     ;incstack = 0
  1323                           	opt	stack 26
  1324                           	line	169
  1325                           	
  1326                           l849:
  1327  00086C                     ;main.c: 169:     ADCON1bits.VCFG1 = 0;
  1328                           	bcf	((c:4033)),c,5	;volatile
  1329  00086C  9AC1               	line	170
  1330                           ;main.c: 170:     ADCON1bits.VCFG0 = 0;
  1331                           	bcf	((c:4033)),c,4	;volatile
  1332  00086E  98C1               	line	171
  1333                           ;main.c: 171:     ADCON1bits.PCFG = 0;
  1334                           		
  1335                           	bcf	((c:4033)),c, 0+0	;volatile
  1336  000870  90C1               	bcf	((c:4033)),c, 0+1	;volatile
  1337  000872  92C1               	bcf	((c:4033)),c, 0+2	;volatile
  1338  000874  94C1               	bcf	((c:4033)),c, 0+3	;volatile
  1339  000876  96C1               
  1340                           	line	172
  1341                           	
  1342                           l851:
  1343  000878                     ;main.c: 172:     ADCON0bits.CHS = 7;
  1344                           	movf	((c:4034)),c,w	;volatile
  1345  000878  50C2               	andlw	not (((1<<4)-1)<<2)
  1346  00087A  0BC3               	iorlw	(07h & ((1<<4)-1))<<2
  1347  00087C  091C               	movwf	((c:4034)),c	;volatile
  1348  00087E  6EC2               	line	173
  1349                           	
  1350                           l853:
  1351  000880                     ;main.c: 173:     TRISEbits.TRISE2 = 1;
  1352                           	bsf	((c:3990)),c,2	;volatile
  1353  000880  8496               	line	175
  1354                           	
  1355                           l855:
  1356  000882                     ;main.c: 175:     ADCON2bits.ADFM = 1;
  1357                           	bsf	((c:4032)),c,7	;volatile
  1358  000882  8EC0               	line	177
  1359                           ;main.c: 177:     ADCON2bits.ACQT = 1;
  1360                           	movf	((c:4032)),c,w	;volatile
  1361  000884  50C0               	andlw	not (((1<<3)-1)<<3)
  1362  000886  0BC7               	iorlw	(01h & ((1<<3)-1))<<3
  1363  000888  0908               	movwf	((c:4032)),c	;volatile
  1364  00088A  6EC0               	line	178
  1365                           ;main.c: 178:     ADCON2bits.ADCS = 3;
  1366                           	movf	((c:4032)),c,w	;volatile
  1367  00088C  50C0               	andlw	not (((1<<3)-1)<<0)
  1368  00088E  0BF8               	iorlw	(03h & ((1<<3)-1))<<0
  1369  000890  0903               	movwf	((c:4032)),c	;volatile
  1370  000892  6EC0               	line	179
  1371                           	
  1372                           l857:
  1373  000894                     ;main.c: 179:     ADCON0bits.ADON = 1;
  1374                           	bsf	((c:4034)),c,0	;volatile
  1375  000894  80C2               	line	181
  1376                           	
  1377                           l859:
  1378  000896                     ;main.c: 181:     PIR1bits.ADIF = 0;
  1379                           	bcf	((c:3998)),c,6	;volatile
  1380  000896  9C9E               	line	187
  1381                           	
  1382                           l115:
  1383  000898                     	return	;funcret
  1384  000898  0012               	opt stack 0
  1385                           GLOBAL	__end_of_adc_init
  1386                           	__end_of_adc_init:
  1387  00089A                     	signat	_adc_init,89
  1388                           	global	_LEDInit
  1389                           
  1390 ;; *************** function _LEDInit *****************
  1391 ;; Defined at:
  1392 ;;		line 143 in file "main.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		None
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1406 ;;      Params:         0       0       0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0
  1409 ;;      Totals:         0       0       0       0       0       0       0
  1410 ;;Total ram usage:        0 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    3
  1413 ;; This function calls:
  1414 ;;		Nothing
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1420                           	line	143
  1421                           global __ptext6
  1422                           __ptext6:
  1423  000904                     psect	text6
  1424                           	file	"main.c"
  1425                           	line	143
  1426                           	global	__size_of_LEDInit
  1427                           	__size_of_LEDInit	equ	__end_of_LEDInit-_LEDInit
  1428  0000                     	
  1429                           _LEDInit:
  1430  000904                     ;incstack = 0
  1431                           	opt	stack 27
  1432                           	line	145
  1433                           	
  1434                           l941:
  1435  000904                     ;main.c: 145:     TRISDbits.TRISD0 = 0;
  1436                           	bcf	((c:3989)),c,0	;volatile
  1437  000904  9095               	line	146
  1438                           ;main.c: 146:     TRISDbits.TRISD1 = 0;
  1439                           	bcf	((c:3989)),c,1	;volatile
  1440  000906  9295               	line	147
  1441                           ;main.c: 147:     TRISDbits.TRISD2 = 0;
  1442                           	bcf	((c:3989)),c,2	;volatile
  1443  000908  9495               	line	148
  1444                           ;main.c: 148:     TRISDbits.TRISD3 = 0;
  1445                           	bcf	((c:3989)),c,3	;volatile
  1446  00090A  9695               	line	149
  1447                           ;main.c: 149:     TRISDbits.TRISD4 = 0;
  1448                           	bcf	((c:3989)),c,4	;volatile
  1449  00090C  9895               	line	150
  1450                           ;main.c: 150:     TRISDbits.TRISD5 = 0;
  1451                           	bcf	((c:3989)),c,5	;volatile
  1452  00090E  9A95               	line	151
  1453                           ;main.c: 151:     TRISDbits.TRISD6 = 0;
  1454                           	bcf	((c:3989)),c,6	;volatile
  1455  000910  9C95               	line	152
  1456                           ;main.c: 152:     TRISDbits.TRISD7 = 0;
  1457                           	bcf	((c:3989)),c,7	;volatile
  1458  000912  9E95               	line	153
  1459                           ;main.c: 153:     TRISCbits.TRISC0 = 0;
  1460                           	bcf	((c:3988)),c,0	;volatile
  1461  000914  9094               	line	154
  1462                           ;main.c: 154:     TRISCbits.TRISC2 = 0;
  1463                           	bcf	((c:3988)),c,2	;volatile
  1464  000916  9494               	line	155
  1465                           ;main.c: 155:     TRISCbits.TRISC3 = 0;
  1466                           	bcf	((c:3988)),c,3	;volatile
  1467  000918  9694               	line	156
  1468                           ;main.c: 156:     TRISCbits.TRISC4 = 0;
  1469                           	bcf	((c:3988)),c,4	;volatile
  1470  00091A  9894               	line	157
  1471                           ;main.c: 157:     TRISCbits.TRISC5 = 0;
  1472                           	bcf	((c:3988)),c,5	;volatile
  1473  00091C  9A94               	line	158
  1474                           	
  1475                           l109:
  1476  00091E                     	return	;funcret
  1477  00091E  0012               	opt stack 0
  1478                           GLOBAL	__end_of_LEDInit
  1479                           	__end_of_LEDInit:
  1480  000920                     	signat	_LEDInit,89
  1481                           	global	_INTERRUPT_Initialize
  1482                           
  1483 ;; *************** function _INTERRUPT_Initialize *****************
  1484 ;; Defined at:
  1485 ;;		line 96 in file "main.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		None
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1499 ;;      Params:         0       0       0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0
  1502 ;;      Totals:         0       0       0       0       0       0       0
  1503 ;;Total ram usage:        0 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    3
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           psect	text7,class=CODE,space=0,reloc=2,group=0
  1513                           	line	96
  1514                           global __ptext7
  1515                           __ptext7:
  1516  000980                     psect	text7
  1517                           	file	"main.c"
  1518                           	line	96
  1519                           	global	__size_of_INTERRUPT_Initialize
  1520                           	__size_of_INTERRUPT_Initialize	equ	__end_of_INTERRUPT_Initialize-_INTERRUPT_Initialize

  1521  0000                     	
  1522                           _INTERRUPT_Initialize:
  1523  000980                     ;incstack = 0
  1524                           	opt	stack 27
  1525                           	line	98
  1526                           	
  1527                           l917:
  1528  000980                     ;main.c: 98:     RCONbits.IPEN = 1;
  1529                           	bsf	((c:4048)),c,7	;volatile
  1530  000980  8ED0               	line	99
  1531                           ;main.c: 99:     INTCONbits.GIEH = 1;
  1532                           	bsf	((c:4082)),c,7	;volatile
  1533  000982  8EF2               	line	100
  1534                           ;main.c: 100:     INTCONbits.GIEL = 1;
  1535                           	bsf	((c:4082)),c,6	;volatile
  1536  000984  8CF2               	line	101
  1537                           	
  1538                           l97:
  1539  000986                     	return	;funcret
  1540  000986  0012               	opt stack 0
  1541                           GLOBAL	__end_of_INTERRUPT_Initialize
  1542                           	__end_of_INTERRUPT_Initialize:
  1543  000988                     	signat	_INTERRUPT_Initialize,89
  1544                           	global	_Hi_ISR
  1545                           
  1546 ;; *************** function _Hi_ISR *****************
  1547 ;; Defined at:
  1548 ;;		line 214 in file "main.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1562 ;;      Params:         0       0       0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0
  1564 ;;      Temps:          2       0       0       0       0       0       0
  1565 ;;      Totals:         2       0       0       0       0       0       0
  1566 ;;Total ram usage:        2 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    2
  1569 ;; This function calls:
  1570 ;;		_ADC_Read
  1571 ;;		_PrintDigital
  1572 ;;		_UART_Write
  1573 ;; This function is called by:
  1574 ;;		Interrupt level 2
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           psect	intcode,class=CODE,space=0,reloc=2
  1578                           global __pintcode
  1579                           __pintcode:
  1580  000008                     psect	intcode
  1581                           	file	"main.c"
  1582                           	line	214
  1583                           	global	__size_of_Hi_ISR
  1584                           	__size_of_Hi_ISR	equ	__end_of_Hi_ISR-_Hi_ISR
  1585  0000                     	
  1586                           _Hi_ISR:
  1587  000008                     ;incstack = 0
  1588                           	opt	stack 26
  1589                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  1590  000008  8230               	global	int_func
  1591                           	call	int_func,f	;refresh shadow registers
  1592  00000A  ED09  F000         psect	intcode_body,class=CODE,space=0,reloc=2
  1593                           global __pintcode_body
  1594                           __pintcode_body:
  1595  000012                     int_func:
  1596  000012                     
  1597                           	pop	; remove dummy address from shadow register refresh
  1598  000012  0006               	movff	prodl+0,??_Hi_ISR+0
  1599  000014  CFF3 F02E          	movff	prodh+0,??_Hi_ISR+1
  1600  000018  CFF4 F02F          	line	217
  1601                           	
  1602                           i2l1221:
  1603  00001C                     ;main.c: 217:     if(PIR1bits.ADIF){
  1604                           	btfss	((c:3998)),c,6	;volatile
  1605  00001C  AC9E               	goto	i2u37_41
  1606  00001E  EF13  F000         	goto	i2u37_40
  1607  000022  EF15  F000         i2u37_41:
  1608  000026                     	goto	i2l126
  1609  000026  EF19  F000         i2u37_40:
  1610  00002A                     	line	218
  1611                           	
  1612                           i2l1223:
  1613  00002A                     ;main.c: 218:         PIR1bits.ADIF = 0;
  1614                           	bcf	((c:3998)),c,6	;volatile
  1615  00002A  9C9E               	line	219
  1616                           ;main.c: 219:         ADCON0bits.ADON = 1;
  1617                           	bsf	((c:4034)),c,0	;volatile
  1618  00002C  80C2               	line	221
  1619                           ;main.c: 221:     }
  1620                           	goto	i2l155
  1621  00002E  EF22  F002         	line	222
  1622                           ;main.c: 222:     else if(PIR2bits.CCP2IF){
  1623                           	
  1624                           i2l126:
  1625  000032                     	btfss	((c:4001)),c,0	;volatile
  1626  000032  A0A1               	goto	i2u38_41
  1627  000034  EF1E  F000         	goto	i2u38_40
  1628  000038  EF20  F000         i2u38_41:
  1629  00003C                     	goto	i2l155
  1630  00003C  EF22  F002         i2u38_40:
  1631  000040                     	line	223
  1632                           	
  1633                           i2l1225:
  1634  000040                     ;main.c: 223:         PIR2bits.CCP2IF = 0;
  1635                           	bcf	((c:4001)),c,0	;volatile
  1636  000040  90A1               	line	224
  1637                           	
  1638                           i2l1227:
  1639  000042                     ;main.c: 224:         data[0]=ADC_Read(0);
  1640                           	movlw	high(0)
  1641  000042  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1642  000044  6E1C               	movlw	low(0)
  1643  000046  0E00               	movwf	((c:ADC_Read@channel)),c
  1644  000048  6E1B               	call	_ADC_Read	;wreg free
  1645  00004A  EC0E  F004         	movff	0+?_ADC_Read,(c:_data)
  1646  00004E  C01B  F001         	movff	1+?_ADC_Read,(c:_data+1)
  1647  000052  C01C  F002         	line	225
  1648                           ;main.c: 225:         data[1]=ADC_Read(1);
  1649                           	movlw	high(01h)
  1650  000056  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1651  000058  6E1C               	movlw	low(01h)
  1652  00005A  0E01               	movwf	((c:ADC_Read@channel)),c
  1653  00005C  6E1B               	call	_ADC_Read	;wreg free
  1654  00005E  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+02h)
  1655  000062  C01B  F003         	movff	1+?_ADC_Read,1+((c:_data)+02h)
  1656  000066  C01C  F004         	line	226
  1657                           ;main.c: 226:         data[2]=ADC_Read(2);
  1658                           	movlw	high(02h)
  1659  00006A  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1660  00006C  6E1C               	movlw	low(02h)
  1661  00006E  0E02               	movwf	((c:ADC_Read@channel)),c
  1662  000070  6E1B               	call	_ADC_Read	;wreg free
  1663  000072  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+04h)
  1664  000076  C01B  F005         	movff	1+?_ADC_Read,1+((c:_data)+04h)
  1665  00007A  C01C  F006         	line	227
  1666                           ;main.c: 227:         data[3]=ADC_Read(3);
  1667                           	movlw	high(03h)
  1668  00007E  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1669  000080  6E1C               	movlw	low(03h)
  1670  000082  0E03               	movwf	((c:ADC_Read@channel)),c
  1671  000084  6E1B               	call	_ADC_Read	;wreg free
  1672  000086  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+06h)
  1673  00008A  C01B  F007         	movff	1+?_ADC_Read,1+((c:_data)+06h)
  1674  00008E  C01C  F008         	line	228
  1675                           ;main.c: 228:         data[4]=ADC_Read(4);
  1676                           	movlw	high(04h)
  1677  000092  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1678  000094  6E1C               	movlw	low(04h)
  1679  000096  0E04               	movwf	((c:ADC_Read@channel)),c
  1680  000098  6E1B               	call	_ADC_Read	;wreg free
  1681  00009A  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+08h)
  1682  00009E  C01B  F009         	movff	1+?_ADC_Read,1+((c:_data)+08h)
  1683  0000A2  C01C  F00A         	line	229
  1684                           ;main.c: 229:         data[5]=ADC_Read(5);
  1685                           	movlw	high(05h)
  1686  0000A6  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1687  0000A8  6E1C               	movlw	low(05h)
  1688  0000AA  0E05               	movwf	((c:ADC_Read@channel)),c
  1689  0000AC  6E1B               	call	_ADC_Read	;wreg free
  1690  0000AE  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+0Ah)
  1691  0000B2  C01B  F00B         	movff	1+?_ADC_Read,1+((c:_data)+0Ah)
  1692  0000B6  C01C  F00C         	line	230
  1693                           ;main.c: 230:         data[6]=ADC_Read(6);
  1694                           	movlw	high(06h)
  1695  0000BA  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1696  0000BC  6E1C               	movlw	low(06h)
  1697  0000BE  0E06               	movwf	((c:ADC_Read@channel)),c
  1698  0000C0  6E1B               	call	_ADC_Read	;wreg free
  1699  0000C2  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+0Ch)
  1700  0000C6  C01B  F00D         	movff	1+?_ADC_Read,1+((c:_data)+0Ch)
  1701  0000CA  C01C  F00E         	line	231
  1702                           ;main.c: 231:         data[7]=ADC_Read(7);
  1703                           	movlw	high(07h)
  1704  0000CE  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1705  0000D0  6E1C               	movlw	low(07h)
  1706  0000D2  0E07               	movwf	((c:ADC_Read@channel)),c
  1707  0000D4  6E1B               	call	_ADC_Read	;wreg free
  1708  0000D6  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+0Eh)
  1709  0000DA  C01B  F00F         	movff	1+?_ADC_Read,1+((c:_data)+0Eh)
  1710  0000DE  C01C  F010         	line	232
  1711                           ;main.c: 232:         data[8]=ADC_Read(8);
  1712                           	movlw	high(08h)
  1713  0000E2  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1714  0000E4  6E1C               	movlw	low(08h)
  1715  0000E6  0E08               	movwf	((c:ADC_Read@channel)),c
  1716  0000E8  6E1B               	call	_ADC_Read	;wreg free
  1717  0000EA  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+010h)
  1718  0000EE  C01B  F011         	movff	1+?_ADC_Read,1+((c:_data)+010h)
  1719  0000F2  C01C  F012         	line	233
  1720                           ;main.c: 233:         data[9]=ADC_Read(9);
  1721                           	movlw	high(09h)
  1722  0000F6  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1723  0000F8  6E1C               	movlw	low(09h)
  1724  0000FA  0E09               	movwf	((c:ADC_Read@channel)),c
  1725  0000FC  6E1B               	call	_ADC_Read	;wreg free
  1726  0000FE  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+012h)
  1727  000102  C01B  F013         	movff	1+?_ADC_Read,1+((c:_data)+012h)
  1728  000106  C01C  F014         	line	234
  1729                           ;main.c: 234:         data[10]=ADC_Read(10);
  1730                           	movlw	high(0Ah)
  1731  00010A  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1732  00010C  6E1C               	movlw	low(0Ah)
  1733  00010E  0E0A               	movwf	((c:ADC_Read@channel)),c
  1734  000110  6E1B               	call	_ADC_Read	;wreg free
  1735  000112  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+014h)
  1736  000116  C01B  F015         	movff	1+?_ADC_Read,1+((c:_data)+014h)
  1737  00011A  C01C  F016         	line	235
  1738                           ;main.c: 235:         data[11]=ADC_Read(11);
  1739                           	movlw	high(0Bh)
  1740  00011E  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1741  000120  6E1C               	movlw	low(0Bh)
  1742  000122  0E0B               	movwf	((c:ADC_Read@channel)),c
  1743  000124  6E1B               	call	_ADC_Read	;wreg free
  1744  000126  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+016h)
  1745  00012A  C01B  F017         	movff	1+?_ADC_Read,1+((c:_data)+016h)
  1746  00012E  C01C  F018         	line	236
  1747                           ;main.c: 236:         data[12]=ADC_Read(12);
  1748                           	movlw	high(0Ch)
  1749  000132  0E00               	movwf	((c:ADC_Read@channel+1)),c
  1750  000134  6E1C               	movlw	low(0Ch)
  1751  000136  0E0C               	movwf	((c:ADC_Read@channel)),c
  1752  000138  6E1B               	call	_ADC_Read	;wreg free
  1753  00013A  EC0E  F004         	movff	0+?_ADC_Read,0+((c:_data)+018h)
  1754  00013E  C01B  F019         	movff	1+?_ADC_Read,1+((c:_data)+018h)
  1755  000142  C01C  F01A         	line	238
  1756                           	
  1757                           i2l1229:
  1758  000146                     ;main.c: 238:         if(data[0] < 1000)
  1759                           	btfsc	((c:_data+1)),c,7
  1760  000146  BE02               	goto	i2u39_40
  1761  000148  EFB1  F000         	movlw	232
  1762  00014C  0EE8               	subwf	 ((c:_data)),c,w
  1763  00014E  5C01               	movlw	3
  1764  000150  0E03               	subwfb	((c:_data+1)),c,w
  1765  000152  5802               	btfsc	status,0
  1766  000154  B0D8               	goto	i2u39_41
  1767  000156  EFAF  F000         	goto	i2u39_40
  1768  00015A  EFB1  F000         
  1769                           i2u39_41:
  1770  00015E                     	goto	i2l129
  1771  00015E  EFB4  F000         i2u39_40:
  1772  000162                     	line	239
  1773                           	
  1774                           i2l1231:
  1775  000162                     ;main.c: 239:             LATDbits.LATD0 = 1;
  1776                           	bsf	((c:3980)),c,0	;volatile
  1777  000162  808C               	goto	i2l1233
  1778  000164  EFB7  F000         	line	240
  1779                           ;main.c: 240:         else
  1780                           	
  1781                           i2l129:
  1782  000168                     	line	241
  1783                           ;main.c: 241:             LATDbits.LATD0 = 0;
  1784                           	bcf	((c:3980)),c,0	;volatile
  1785  000168  908C               	goto	i2l1233
  1786  00016A  EFB7  F000         	
  1787                           i2l130:
  1788  00016E                     	line	243
  1789                           	
  1790                           i2l1233:
  1791  00016E                     ;main.c: 243:         if(data[1] < 1000)
  1792                           	btfsc	(1+((c:_data)+02h)),c,7
  1793  00016E  BE04               	goto	i2u40_40
  1794  000170  EFC5  F000         	movlw	232
  1795  000174  0EE8               	subwf	 (0+((c:_data)+02h)),c,w
  1796  000176  5C03               	movlw	3
  1797  000178  0E03               	subwfb	(1+((c:_data)+02h)),c,w
  1798  00017A  5804               	btfsc	status,0
  1799  00017C  B0D8               	goto	i2u40_41
  1800  00017E  EFC3  F000         	goto	i2u40_40
  1801  000182  EFC5  F000         
  1802                           i2u40_41:
  1803  000186                     	goto	i2l131
  1804  000186  EFC8  F000         i2u40_40:
  1805  00018A                     	line	244
  1806                           	
  1807                           i2l1235:
  1808  00018A                     ;main.c: 244:             LATDbits.LATD1 = 1;
  1809                           	bsf	((c:3980)),c,1	;volatile
  1810  00018A  828C               	goto	i2l1237
  1811  00018C  EFCB  F000         	line	245
  1812                           ;main.c: 245:         else
  1813                           	
  1814                           i2l131:
  1815  000190                     	line	246
  1816                           ;main.c: 246:             LATDbits.LATD1 = 0;
  1817                           	bcf	((c:3980)),c,1	;volatile
  1818  000190  928C               	goto	i2l1237
  1819  000192  EFCB  F000         	
  1820                           i2l132:
  1821  000196                     	line	248
  1822                           	
  1823                           i2l1237:
  1824  000196                     ;main.c: 248:         if(data[2] < 1000)
  1825                           	btfsc	(1+((c:_data)+04h)),c,7
  1826  000196  BE06               	goto	i2u41_40
  1827  000198  EFD9  F000         	movlw	232
  1828  00019C  0EE8               	subwf	 (0+((c:_data)+04h)),c,w
  1829  00019E  5C05               	movlw	3
  1830  0001A0  0E03               	subwfb	(1+((c:_data)+04h)),c,w
  1831  0001A2  5806               	btfsc	status,0
  1832  0001A4  B0D8               	goto	i2u41_41
  1833  0001A6  EFD7  F000         	goto	i2u41_40
  1834  0001AA  EFD9  F000         
  1835                           i2u41_41:
  1836  0001AE                     	goto	i2l133
  1837  0001AE  EFDC  F000         i2u41_40:
  1838  0001B2                     	line	249
  1839                           	
  1840                           i2l1239:
  1841  0001B2                     ;main.c: 249:             LATDbits.LATD2 = 1;
  1842                           	bsf	((c:3980)),c,2	;volatile
  1843  0001B2  848C               	goto	i2l1241
  1844  0001B4  EFDF  F000         	line	250
  1845                           ;main.c: 250:         else
  1846                           	
  1847                           i2l133:
  1848  0001B8                     	line	251
  1849                           ;main.c: 251:             LATDbits.LATD2 = 0;
  1850                           	bcf	((c:3980)),c,2	;volatile
  1851  0001B8  948C               	goto	i2l1241
  1852  0001BA  EFDF  F000         	
  1853                           i2l134:
  1854  0001BE                     	line	253
  1855                           	
  1856                           i2l1241:
  1857  0001BE                     ;main.c: 253:         if(data[3] < 1000)
  1858                           	btfsc	(1+((c:_data)+06h)),c,7
  1859  0001BE  BE08               	goto	i2u42_40
  1860  0001C0  EFED  F000         	movlw	232
  1861  0001C4  0EE8               	subwf	 (0+((c:_data)+06h)),c,w
  1862  0001C6  5C07               	movlw	3
  1863  0001C8  0E03               	subwfb	(1+((c:_data)+06h)),c,w
  1864  0001CA  5808               	btfsc	status,0
  1865  0001CC  B0D8               	goto	i2u42_41
  1866  0001CE  EFEB  F000         	goto	i2u42_40
  1867  0001D2  EFED  F000         
  1868                           i2u42_41:
  1869  0001D6                     	goto	i2l135
  1870  0001D6  EFF0  F000         i2u42_40:
  1871  0001DA                     	line	254
  1872                           	
  1873                           i2l1243:
  1874  0001DA                     ;main.c: 254:             LATDbits.LATD3 = 1;
  1875                           	bsf	((c:3980)),c,3	;volatile
  1876  0001DA  868C               	goto	i2l1245
  1877  0001DC  EFF3  F000         	line	255
  1878                           ;main.c: 255:         else
  1879                           	
  1880                           i2l135:
  1881  0001E0                     	line	256
  1882                           ;main.c: 256:             LATDbits.LATD3 = 0;
  1883                           	bcf	((c:3980)),c,3	;volatile
  1884  0001E0  968C               	goto	i2l1245
  1885  0001E2  EFF3  F000         	
  1886                           i2l136:
  1887  0001E6                     	line	258
  1888                           	
  1889                           i2l1245:
  1890  0001E6                     ;main.c: 258:         if(data[4] < 1000)
  1891                           	btfsc	(1+((c:_data)+08h)),c,7
  1892  0001E6  BE0A               	goto	i2u43_40
  1893  0001E8  EF01  F001         	movlw	232
  1894  0001EC  0EE8               	subwf	 (0+((c:_data)+08h)),c,w
  1895  0001EE  5C09               	movlw	3
  1896  0001F0  0E03               	subwfb	(1+((c:_data)+08h)),c,w
  1897  0001F2  580A               	btfsc	status,0
  1898  0001F4  B0D8               	goto	i2u43_41
  1899  0001F6  EFFF  F000         	goto	i2u43_40
  1900  0001FA  EF01  F001         
  1901                           i2u43_41:
  1902  0001FE                     	goto	i2l137
  1903  0001FE  EF04  F001         i2u43_40:
  1904  000202                     	line	259
  1905                           	
  1906                           i2l1247:
  1907  000202                     ;main.c: 259:             LATDbits.LATD4 = 1;
  1908                           	bsf	((c:3980)),c,4	;volatile
  1909  000202  888C               	goto	i2l1249
  1910  000204  EF07  F001         	line	260
  1911                           ;main.c: 260:         else
  1912                           	
  1913                           i2l137:
  1914  000208                     	line	261
  1915                           ;main.c: 261:             LATDbits.LATD4 = 0;
  1916                           	bcf	((c:3980)),c,4	;volatile
  1917  000208  988C               	goto	i2l1249
  1918  00020A  EF07  F001         	
  1919                           i2l138:
  1920  00020E                     	line	263
  1921                           	
  1922                           i2l1249:
  1923  00020E                     ;main.c: 263:         if(data[5] < 1000)
  1924                           	btfsc	(1+((c:_data)+0Ah)),c,7
  1925  00020E  BE0C               	goto	i2u44_40
  1926  000210  EF15  F001         	movlw	232
  1927  000214  0EE8               	subwf	 (0+((c:_data)+0Ah)),c,w
  1928  000216  5C0B               	movlw	3
  1929  000218  0E03               	subwfb	(1+((c:_data)+0Ah)),c,w
  1930  00021A  580C               	btfsc	status,0
  1931  00021C  B0D8               	goto	i2u44_41
  1932  00021E  EF13  F001         	goto	i2u44_40
  1933  000222  EF15  F001         
  1934                           i2u44_41:
  1935  000226                     	goto	i2l139
  1936  000226  EF18  F001         i2u44_40:
  1937  00022A                     	line	264
  1938                           	
  1939                           i2l1251:
  1940  00022A                     ;main.c: 264:             LATDbits.LATD5 = 1;
  1941                           	bsf	((c:3980)),c,5	;volatile
  1942  00022A  8A8C               	goto	i2l1253
  1943  00022C  EF1B  F001         	line	265
  1944                           ;main.c: 265:         else
  1945                           	
  1946                           i2l139:
  1947  000230                     	line	266
  1948                           ;main.c: 266:             LATDbits.LATD5 = 0;
  1949                           	bcf	((c:3980)),c,5	;volatile
  1950  000230  9A8C               	goto	i2l1253
  1951  000232  EF1B  F001         	
  1952                           i2l140:
  1953  000236                     	line	268
  1954                           	
  1955                           i2l1253:
  1956  000236                     ;main.c: 268:         if(data[6] < 1000)
  1957                           	btfsc	(1+((c:_data)+0Ch)),c,7
  1958  000236  BE0E               	goto	i2u45_40
  1959  000238  EF29  F001         	movlw	232
  1960  00023C  0EE8               	subwf	 (0+((c:_data)+0Ch)),c,w
  1961  00023E  5C0D               	movlw	3
  1962  000240  0E03               	subwfb	(1+((c:_data)+0Ch)),c,w
  1963  000242  580E               	btfsc	status,0
  1964  000244  B0D8               	goto	i2u45_41
  1965  000246  EF27  F001         	goto	i2u45_40
  1966  00024A  EF29  F001         
  1967                           i2u45_41:
  1968  00024E                     	goto	i2l141
  1969  00024E  EF2C  F001         i2u45_40:
  1970  000252                     	line	269
  1971                           	
  1972                           i2l1255:
  1973  000252                     ;main.c: 269:             LATDbits.LATD6 = 1;
  1974                           	bsf	((c:3980)),c,6	;volatile
  1975  000252  8C8C               	goto	i2l1257
  1976  000254  EF2F  F001         	line	270
  1977                           ;main.c: 270:         else
  1978                           	
  1979                           i2l141:
  1980  000258                     	line	271
  1981                           ;main.c: 271:             LATDbits.LATD6 = 0;
  1982                           	bcf	((c:3980)),c,6	;volatile
  1983  000258  9C8C               	goto	i2l1257
  1984  00025A  EF2F  F001         	
  1985                           i2l142:
  1986  00025E                     	line	273
  1987                           	
  1988                           i2l1257:
  1989  00025E                     ;main.c: 273:         if(data[7] < 1000)
  1990                           	btfsc	(1+((c:_data)+0Eh)),c,7
  1991  00025E  BE10               	goto	i2u46_40
  1992  000260  EF3D  F001         	movlw	232
  1993  000264  0EE8               	subwf	 (0+((c:_data)+0Eh)),c,w
  1994  000266  5C0F               	movlw	3
  1995  000268  0E03               	subwfb	(1+((c:_data)+0Eh)),c,w
  1996  00026A  5810               	btfsc	status,0
  1997  00026C  B0D8               	goto	i2u46_41
  1998  00026E  EF3B  F001         	goto	i2u46_40
  1999  000272  EF3D  F001         
  2000                           i2u46_41:
  2001  000276                     	goto	i2l143
  2002  000276  EF40  F001         i2u46_40:
  2003  00027A                     	line	274
  2004                           	
  2005                           i2l1259:
  2006  00027A                     ;main.c: 274:             LATDbits.LATD7 = 1;
  2007                           	bsf	((c:3980)),c,7	;volatile
  2008  00027A  8E8C               	goto	i2l1261
  2009  00027C  EF43  F001         	line	275
  2010                           ;main.c: 275:         else
  2011                           	
  2012                           i2l143:
  2013  000280                     	line	276
  2014                           ;main.c: 276:             LATDbits.LATD7 = 0;
  2015                           	bcf	((c:3980)),c,7	;volatile
  2016  000280  9E8C               	goto	i2l1261
  2017  000282  EF43  F001         	
  2018                           i2l144:
  2019  000286                     	line	278
  2020                           	
  2021                           i2l1261:
  2022  000286                     ;main.c: 278:         if(data[8] < 1000)
  2023                           	btfsc	(1+((c:_data)+010h)),c,7
  2024  000286  BE12               	goto	i2u47_40
  2025  000288  EF51  F001         	movlw	232
  2026  00028C  0EE8               	subwf	 (0+((c:_data)+010h)),c,w
  2027  00028E  5C11               	movlw	3
  2028  000290  0E03               	subwfb	(1+((c:_data)+010h)),c,w
  2029  000292  5812               	btfsc	status,0
  2030  000294  B0D8               	goto	i2u47_41
  2031  000296  EF4F  F001         	goto	i2u47_40
  2032  00029A  EF51  F001         
  2033                           i2u47_41:
  2034  00029E                     	goto	i2l145
  2035  00029E  EF54  F001         i2u47_40:
  2036  0002A2                     	line	279
  2037                           	
  2038                           i2l1263:
  2039  0002A2                     ;main.c: 279:             LATCbits.LATC0 = 1;
  2040                           	bsf	((c:3979)),c,0	;volatile
  2041  0002A2  808B               	goto	i2l1265
  2042  0002A4  EF57  F001         	line	280
  2043                           ;main.c: 280:         else
  2044                           	
  2045                           i2l145:
  2046  0002A8                     	line	281
  2047                           ;main.c: 281:             LATCbits.LATC0 = 0;
  2048                           	bcf	((c:3979)),c,0	;volatile
  2049  0002A8  908B               	goto	i2l1265
  2050  0002AA  EF57  F001         	
  2051                           i2l146:
  2052  0002AE                     	line	283
  2053                           	
  2054                           i2l1265:
  2055  0002AE                     ;main.c: 283:         if(data[9] < 1000)
  2056                           	btfsc	(1+((c:_data)+012h)),c,7
  2057  0002AE  BE14               	goto	i2u48_40
  2058  0002B0  EF65  F001         	movlw	232
  2059  0002B4  0EE8               	subwf	 (0+((c:_data)+012h)),c,w
  2060  0002B6  5C13               	movlw	3
  2061  0002B8  0E03               	subwfb	(1+((c:_data)+012h)),c,w
  2062  0002BA  5814               	btfsc	status,0
  2063  0002BC  B0D8               	goto	i2u48_41
  2064  0002BE  EF63  F001         	goto	i2u48_40
  2065  0002C2  EF65  F001         
  2066                           i2u48_41:
  2067  0002C6                     	goto	i2l147
  2068  0002C6  EF68  F001         i2u48_40:
  2069  0002CA                     	line	284
  2070                           	
  2071                           i2l1267:
  2072  0002CA                     ;main.c: 284:             LATCbits.LATC2 = 1;
  2073                           	bsf	((c:3979)),c,2	;volatile
  2074  0002CA  848B               	goto	i2l1269
  2075  0002CC  EF6B  F001         	line	285
  2076                           ;main.c: 285:         else
  2077                           	
  2078                           i2l147:
  2079  0002D0                     	line	286
  2080                           ;main.c: 286:             LATCbits.LATC2 = 0;
  2081                           	bcf	((c:3979)),c,2	;volatile
  2082  0002D0  948B               	goto	i2l1269
  2083  0002D2  EF6B  F001         	
  2084                           i2l148:
  2085  0002D6                     	line	288
  2086                           	
  2087                           i2l1269:
  2088  0002D6                     ;main.c: 288:         if(data[10] < 1000)
  2089                           	btfsc	(1+((c:_data)+014h)),c,7
  2090  0002D6  BE16               	goto	i2u49_40
  2091  0002D8  EF79  F001         	movlw	232
  2092  0002DC  0EE8               	subwf	 (0+((c:_data)+014h)),c,w
  2093  0002DE  5C15               	movlw	3
  2094  0002E0  0E03               	subwfb	(1+((c:_data)+014h)),c,w
  2095  0002E2  5816               	btfsc	status,0
  2096  0002E4  B0D8               	goto	i2u49_41
  2097  0002E6  EF77  F001         	goto	i2u49_40
  2098  0002EA  EF79  F001         
  2099                           i2u49_41:
  2100  0002EE                     	goto	i2l149
  2101  0002EE  EF7C  F001         i2u49_40:
  2102  0002F2                     	line	289
  2103                           	
  2104                           i2l1271:
  2105  0002F2                     ;main.c: 289:             LATCbits.LATC3 = 1;
  2106                           	bsf	((c:3979)),c,3	;volatile
  2107  0002F2  868B               	goto	i2l1273
  2108  0002F4  EF7F  F001         	line	290
  2109                           ;main.c: 290:         else
  2110                           	
  2111                           i2l149:
  2112  0002F8                     	line	291
  2113                           ;main.c: 291:             LATCbits.LATC3 = 0;
  2114                           	bcf	((c:3979)),c,3	;volatile
  2115  0002F8  968B               	goto	i2l1273
  2116  0002FA  EF7F  F001         	
  2117                           i2l150:
  2118  0002FE                     	line	293
  2119                           	
  2120                           i2l1273:
  2121  0002FE                     ;main.c: 293:         if(data[11] < 1000)
  2122                           	btfsc	(1+((c:_data)+016h)),c,7
  2123  0002FE  BE18               	goto	i2u50_40
  2124  000300  EF8D  F001         	movlw	232
  2125  000304  0EE8               	subwf	 (0+((c:_data)+016h)),c,w
  2126  000306  5C17               	movlw	3
  2127  000308  0E03               	subwfb	(1+((c:_data)+016h)),c,w
  2128  00030A  5818               	btfsc	status,0
  2129  00030C  B0D8               	goto	i2u50_41
  2130  00030E  EF8B  F001         	goto	i2u50_40
  2131  000312  EF8D  F001         
  2132                           i2u50_41:
  2133  000316                     	goto	i2l151
  2134  000316  EF90  F001         i2u50_40:
  2135  00031A                     	line	294
  2136                           	
  2137                           i2l1275:
  2138  00031A                     ;main.c: 294:             LATCbits.LATC4 = 1;
  2139                           	bsf	((c:3979)),c,4	;volatile
  2140  00031A  888B               	goto	i2l1277
  2141  00031C  EF93  F001         	line	295
  2142                           ;main.c: 295:         else
  2143                           	
  2144                           i2l151:
  2145  000320                     	line	296
  2146                           ;main.c: 296:             LATCbits.LATC4 = 0;
  2147                           	bcf	((c:3979)),c,4	;volatile
  2148  000320  988B               	goto	i2l1277
  2149  000322  EF93  F001         	
  2150                           i2l152:
  2151  000326                     	line	298
  2152                           	
  2153                           i2l1277:
  2154  000326                     ;main.c: 298:         if(data[12] < 1000)
  2155                           	btfsc	(1+((c:_data)+018h)),c,7
  2156  000326  BE1A               	goto	i2u51_40
  2157  000328  EFA1  F001         	movlw	232
  2158  00032C  0EE8               	subwf	 (0+((c:_data)+018h)),c,w
  2159  00032E  5C19               	movlw	3
  2160  000330  0E03               	subwfb	(1+((c:_data)+018h)),c,w
  2161  000332  581A               	btfsc	status,0
  2162  000334  B0D8               	goto	i2u51_41
  2163  000336  EF9F  F001         	goto	i2u51_40
  2164  00033A  EFA1  F001         
  2165                           i2u51_41:
  2166  00033E                     	goto	i2l153
  2167  00033E  EFA4  F001         i2u51_40:
  2168  000342                     	line	299
  2169                           	
  2170                           i2l1279:
  2171  000342                     ;main.c: 299:             LATCbits.LATC5 = 1;
  2172                           	bsf	((c:3979)),c,5	;volatile
  2173  000342  8A8B               	goto	i2l1281
  2174  000344  EFA7  F001         	line	300
  2175                           ;main.c: 300:         else
  2176                           	
  2177                           i2l153:
  2178  000348                     	line	301
  2179                           ;main.c: 301:             LATCbits.LATC5 = 0;
  2180                           	bcf	((c:3979)),c,5	;volatile
  2181  000348  9A8B               	goto	i2l1281
  2182  00034A  EFA7  F001         	
  2183                           i2l154:
  2184  00034E                     	line	303
  2185                           	
  2186                           i2l1281:
  2187  00034E                     ;main.c: 303:         PrintDigital(data[0]);
  2188                           	movff	(c:_data),(c:PrintDigital@digital)
  2189  00034E  C001  F029         	movff	(c:_data+1),(c:PrintDigital@digital+1)
  2190  000352  C002  F02A         	call	_PrintDigital	;wreg free
  2191  000356  EC28  F002         	line	304
  2192                           	
  2193                           i2l1283:
  2194  00035A                     ;main.c: 304:         UART_Write(' ');
  2195                           	movlw	(020h)&0ffh
  2196  00035A  0E20               	
  2197                           	call	_UART_Write
  2198  00035C  EC73  F004         	line	305
  2199                           	
  2200                           i2l1285:
  2201  000360                     ;main.c: 305:         PrintDigital(data[1]);
  2202                           	movff	0+((c:_data)+02h),(c:PrintDigital@digital)
  2203  000360  C003  F029         	movff	1+((c:_data)+02h),(c:PrintDigital@digital+1)
  2204  000364  C004  F02A         	call	_PrintDigital	;wreg free
  2205  000368  EC28  F002         	line	306
  2206                           ;main.c: 306:         UART_Write(' ');
  2207                           	movlw	(020h)&0ffh
  2208  00036C  0E20               	
  2209                           	call	_UART_Write
  2210  00036E  EC73  F004         	line	307
  2211                           	
  2212                           i2l1287:
  2213  000372                     ;main.c: 307:         PrintDigital(data[2]);
  2214                           	movff	0+((c:_data)+04h),(c:PrintDigital@digital)
  2215  000372  C005  F029         	movff	1+((c:_data)+04h),(c:PrintDigital@digital+1)
  2216  000376  C006  F02A         	call	_PrintDigital	;wreg free
  2217  00037A  EC28  F002         	line	308
  2218                           	
  2219                           i2l1289:
  2220  00037E                     ;main.c: 308:         UART_Write(' ');
  2221                           	movlw	(020h)&0ffh
  2222  00037E  0E20               	
  2223                           	call	_UART_Write
  2224  000380  EC73  F004         	line	309
  2225                           ;main.c: 309:         PrintDigital(data[3]);
  2226                           	movff	0+((c:_data)+06h),(c:PrintDigital@digital)
  2227  000384  C007  F029         	movff	1+((c:_data)+06h),(c:PrintDigital@digital+1)
  2228  000388  C008  F02A         	call	_PrintDigital	;wreg free
  2229  00038C  EC28  F002         	line	310
  2230                           	
  2231                           i2l1291:
  2232  000390                     ;main.c: 310:         UART_Write(' ');
  2233                           	movlw	(020h)&0ffh
  2234  000390  0E20               	
  2235                           	call	_UART_Write
  2236  000392  EC73  F004         	line	311
  2237                           	
  2238                           i2l1293:
  2239  000396                     ;main.c: 311:         PrintDigital(data[4]);
  2240                           	movff	0+((c:_data)+08h),(c:PrintDigital@digital)
  2241  000396  C009  F029         	movff	1+((c:_data)+08h),(c:PrintDigital@digital+1)
  2242  00039A  C00A  F02A         	call	_PrintDigital	;wreg free
  2243  00039E  EC28  F002         	line	312
  2244                           ;main.c: 312:         UART_Write(' ');
  2245                           	movlw	(020h)&0ffh
  2246  0003A2  0E20               	
  2247                           	call	_UART_Write
  2248  0003A4  EC73  F004         	line	313
  2249                           	
  2250                           i2l1295:
  2251  0003A8                     ;main.c: 313:         PrintDigital(data[5]);
  2252                           	movff	0+((c:_data)+0Ah),(c:PrintDigital@digital)
  2253  0003A8  C00B  F029         	movff	1+((c:_data)+0Ah),(c:PrintDigital@digital+1)
  2254  0003AC  C00C  F02A         	call	_PrintDigital	;wreg free
  2255  0003B0  EC28  F002         	line	314
  2256                           	
  2257                           i2l1297:
  2258  0003B4                     ;main.c: 314:         UART_Write(' ');
  2259                           	movlw	(020h)&0ffh
  2260  0003B4  0E20               	
  2261                           	call	_UART_Write
  2262  0003B6  EC73  F004         	line	315
  2263                           ;main.c: 315:         PrintDigital(data[6]);
  2264                           	movff	0+((c:_data)+0Ch),(c:PrintDigital@digital)
  2265  0003BA  C00D  F029         	movff	1+((c:_data)+0Ch),(c:PrintDigital@digital+1)
  2266  0003BE  C00E  F02A         	call	_PrintDigital	;wreg free
  2267  0003C2  EC28  F002         	line	316
  2268                           	
  2269                           i2l1299:
  2270  0003C6                     ;main.c: 316:         UART_Write(' ');
  2271                           	movlw	(020h)&0ffh
  2272  0003C6  0E20               	
  2273                           	call	_UART_Write
  2274  0003C8  EC73  F004         	line	317
  2275                           	
  2276                           i2l1301:
  2277  0003CC                     ;main.c: 317:         PrintDigital(data[7]);
  2278                           	movff	0+((c:_data)+0Eh),(c:PrintDigital@digital)
  2279  0003CC  C00F  F029         	movff	1+((c:_data)+0Eh),(c:PrintDigital@digital+1)
  2280  0003D0  C010  F02A         	call	_PrintDigital	;wreg free
  2281  0003D4  EC28  F002         	line	318
  2282                           ;main.c: 318:         UART_Write(' ');
  2283                           	movlw	(020h)&0ffh
  2284  0003D8  0E20               	
  2285                           	call	_UART_Write
  2286  0003DA  EC73  F004         	line	319
  2287                           	
  2288                           i2l1303:
  2289  0003DE                     ;main.c: 319:         PrintDigital(data[8]);
  2290                           	movff	0+((c:_data)+010h),(c:PrintDigital@digital)
  2291  0003DE  C011  F029         	movff	1+((c:_data)+010h),(c:PrintDigital@digital+1)
  2292  0003E2  C012  F02A         	call	_PrintDigital	;wreg free
  2293  0003E6  EC28  F002         	line	320
  2294                           	
  2295                           i2l1305:
  2296  0003EA                     ;main.c: 320:         UART_Write(' ');
  2297                           	movlw	(020h)&0ffh
  2298  0003EA  0E20               	
  2299                           	call	_UART_Write
  2300  0003EC  EC73  F004         	line	321
  2301                           ;main.c: 321:         PrintDigital(data[9]);
  2302                           	movff	0+((c:_data)+012h),(c:PrintDigital@digital)
  2303  0003F0  C013  F029         	movff	1+((c:_data)+012h),(c:PrintDigital@digital+1)
  2304  0003F4  C014  F02A         	call	_PrintDigital	;wreg free
  2305  0003F8  EC28  F002         	line	322
  2306                           	
  2307                           i2l1307:
  2308  0003FC                     ;main.c: 322:         UART_Write(' ');
  2309                           	movlw	(020h)&0ffh
  2310  0003FC  0E20               	
  2311                           	call	_UART_Write
  2312  0003FE  EC73  F004         	line	323
  2313                           	
  2314                           i2l1309:
  2315  000402                     ;main.c: 323:         PrintDigital(data[10]);
  2316                           	movff	0+((c:_data)+014h),(c:PrintDigital@digital)
  2317  000402  C015  F029         	movff	1+((c:_data)+014h),(c:PrintDigital@digital+1)
  2318  000406  C016  F02A         	call	_PrintDigital	;wreg free
  2319  00040A  EC28  F002         	line	324
  2320                           ;main.c: 324:         UART_Write(' ');
  2321                           	movlw	(020h)&0ffh
  2322  00040E  0E20               	
  2323                           	call	_UART_Write
  2324  000410  EC73  F004         	line	325
  2325                           	
  2326                           i2l1311:
  2327  000414                     ;main.c: 325:         PrintDigital(data[11]);
  2328                           	movff	0+((c:_data)+016h),(c:PrintDigital@digital)
  2329  000414  C017  F029         	movff	1+((c:_data)+016h),(c:PrintDigital@digital+1)
  2330  000418  C018  F02A         	call	_PrintDigital	;wreg free
  2331  00041C  EC28  F002         	line	326
  2332                           	
  2333                           i2l1313:
  2334  000420                     ;main.c: 326:         UART_Write(' ');
  2335                           	movlw	(020h)&0ffh
  2336  000420  0E20               	
  2337                           	call	_UART_Write
  2338  000422  EC73  F004         	line	327
  2339                           ;main.c: 327:         PrintDigital(data[12]);
  2340                           	movff	0+((c:_data)+018h),(c:PrintDigital@digital)
  2341  000426  C019  F029         	movff	1+((c:_data)+018h),(c:PrintDigital@digital+1)
  2342  00042A  C01A  F02A         	call	_PrintDigital	;wreg free
  2343  00042E  EC28  F002         	line	328
  2344                           	
  2345                           i2l1315:
  2346  000432                     ;main.c: 328:         UART_Write('\n');
  2347                           	movlw	(0Ah)&0ffh
  2348  000432  0E0A               	
  2349                           	call	_UART_Write
  2350  000434  EC73  F004         	goto	i2l155
  2351  000438  EF22  F002         	line	332
  2352                           ;main.c: 332:     }
  2353                           	
  2354                           i2l128:
  2355  00043C                     	goto	i2l155
  2356  00043C  EF22  F002         	
  2357                           i2l127:
  2358  000440                     	goto	i2l155
  2359  000440  EF22  F002         	line	333
  2360                           	
  2361                           i2l1317:
  2362  000444                     	line	334
  2363                           ;main.c: 333:     return ;
  2364                           	
  2365                           i2l155:
  2366  000444                     	movff	??_Hi_ISR+1,prodh+0
  2367  000444  C02F  FFF4         	movff	??_Hi_ISR+0,prodl+0
  2368  000448  C02E  FFF3         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2369  00044C  9230               	retfie f
  2370  00044E  0011               	opt stack 0
  2371                           GLOBAL	__end_of_Hi_ISR
  2372                           	__end_of_Hi_ISR:
  2373  000450                     	signat	_Hi_ISR,89
  2374                           	global	_PrintDigital
  2375                           
  2376 ;; *************** function _PrintDigital *****************
  2377 ;; Defined at:
  2378 ;;		line 350 in file "main.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  digital         2   14[COMRAM] int 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  temp            2   17[COMRAM] int 
  2383 ;;  c               1   16[COMRAM] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2393 ;;      Params:         2       0       0       0       0       0       0
  2394 ;;      Locals:         3       0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0
  2396 ;;      Totals:         5       0       0       0       0       0       0
  2397 ;;Total ram usage:        5 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    1
  2400 ;; This function calls:
  2401 ;;		_UART_Write
  2402 ;;		___awdiv
  2403 ;;		___wmul
  2404 ;; This function is called by:
  2405 ;;		_Hi_ISR
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           psect	text9,class=CODE,space=0,reloc=2,group=0
  2409                           	line	350
  2410                           global __ptext9
  2411                           __ptext9:
  2412  000450                     psect	text9
  2413                           	file	"main.c"
  2414                           	line	350
  2415                           	global	__size_of_PrintDigital
  2416                           	__size_of_PrintDigital	equ	__end_of_PrintDigital-_PrintDigital
  2417  0000                     	
  2418                           _PrintDigital:
  2419  000450                     ;incstack = 0
  2420                           	opt	stack 26
  2421                           	line	352
  2422                           	
  2423                           i2l1175:
  2424  000450                     ;main.c: 350: void PrintDigital(int digital);main.c: 351: {;main.c: 352:     int temp = 
                                 digital;
  2425                           	movff	(c:PrintDigital@digital),(c:PrintDigital@temp)
  2426  000450  C029  F02C         	movff	(c:PrintDigital@digital+1),(c:PrintDigital@temp+1)
  2427  000454  C02A  F02D         	line	354
  2428                           	
  2429                           i2l1177:
  2430  000458                     ;main.c: 353:     char c;;main.c: 354:     if(temp/1000 > 0)
  2431                           	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2432  000458  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2433  00045C  C02D  F01C         	movlw	high(03E8h)
  2434  000460  0E03               	movwf	((c:___awdiv@divisor+1)),c
  2435  000462  6E1E               	movlw	low(03E8h)
  2436  000464  0EE8               	movwf	((c:___awdiv@divisor)),c
  2437  000466  6E1D               	call	___awdiv	;wreg free
  2438  000468  EC98  F003         	btfsc	(1+?___awdiv),c,7
  2439  00046C  BE1C               	goto	i2u34_41
  2440  00046E  EF41  F002         	movf	(1+?___awdiv),c,w
  2441  000472  501C               	bnz	i2u34_40
  2442  000474  E108               	decf	(0+?___awdiv),c,w
  2443  000476  041B               	btfss	status,0
  2444  000478  A0D8               	goto	i2u34_41
  2445  00047A  EF41  F002         	goto	i2u34_40
  2446  00047E  EF43  F002         
  2447                           i2u34_41:
  2448  000482                     	goto	i2l1195
  2449  000482  EFCF  F002         i2u34_40:
  2450  000486                     	line	356
  2451                           	
  2452                           i2l1179:
  2453  000486                     ;main.c: 355:     {;main.c: 356:         c = temp/1000 + '0';
  2454                           	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2455  000486  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2456  00048A  C02D  F01C         	movlw	high(03E8h)
  2457  00048E  0E03               	movwf	((c:___awdiv@divisor+1)),c
  2458  000490  6E1E               	movlw	low(03E8h)
  2459  000492  0EE8               	movwf	((c:___awdiv@divisor)),c
  2460  000494  6E1D               	call	___awdiv	;wreg free
  2461  000496  EC98  F003         	movf	(0+?___awdiv),c,w
  2462  00049A  501B               	addlw	low(030h)
  2463  00049C  0F30               	movwf	((c:PrintDigital@c)),c
  2464  00049E  6E2B               	line	357
  2465                           	
  2466                           i2l1181:
  2467  0004A0                     ;main.c: 357:         temp = temp - temp/1000*1000;
  2468                           	movlw	high(03E8h)
  2469  0004A0  0E03               	movwf	((c:___awdiv@divisor+1)),c
  2470  0004A2  6E1E               	movlw	low(03E8h)
  2471  0004A4  0EE8               	movwf	((c:___awdiv@divisor)),c
  2472  0004A6  6E1D               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2473  0004A8  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2474  0004AC  C02D  F01C         	call	___awdiv	;wreg free
  2475  0004B0  EC98  F003         	movff	0+?___awdiv,(c:___wmul@multiplier)
  2476  0004B4  C01B  F023         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  2477  0004B8  C01C  F024         	movlw	high(03E8h)
  2478  0004BC  0E03               	movwf	((c:___wmul@multiplicand+1)),c
  2479  0004BE  6E26               	movlw	low(03E8h)
  2480  0004C0  0EE8               	movwf	((c:___wmul@multiplicand)),c
  2481  0004C2  6E25               	call	___wmul	;wreg free
  2482  0004C4  EC4D  F004         	comf	(0+?___wmul),c
  2483  0004C8  1E23               	comf	(1+?___wmul),c
  2484  0004CA  1E24               	infsnz	(0+?___wmul),c
  2485  0004CC  4A23               	incf	(1+?___wmul),c
  2486  0004CE  2A24               	movf	((c:PrintDigital@temp)),c,w
  2487  0004D0  502C               	addwf	(0+?___wmul),c,w
  2488  0004D2  2423               	movwf	((c:PrintDigital@temp)),c
  2489  0004D4  6E2C               	movf	((c:PrintDigital@temp+1)),c,w
  2490  0004D6  502D               	addwfc	(1+?___wmul),c,w
  2491  0004D8  2024               	movwf	1+((c:PrintDigital@temp)),c
  2492  0004DA  6E2D               	line	358
  2493                           	
  2494                           i2l1183:
  2495  0004DC                     ;main.c: 358:         UART_Write(c);
  2496                           	movf	((c:PrintDigital@c)),c,w
  2497  0004DC  502B               	
  2498                           	call	_UART_Write
  2499  0004DE  EC73  F004         	line	360
  2500                           	
  2501                           i2l1185:
  2502  0004E2                     ;main.c: 360:         c = temp/100 + '0';
  2503                           	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2504  0004E2  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2505  0004E6  C02D  F01C         	movlw	high(064h)
  2506  0004EA  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2507  0004EC  6E1E               	movlw	low(064h)
  2508  0004EE  0E64               	movwf	((c:___awdiv@divisor)),c
  2509  0004F0  6E1D               	call	___awdiv	;wreg free
  2510  0004F2  EC98  F003         	movf	(0+?___awdiv),c,w
  2511  0004F6  501B               	addlw	low(030h)
  2512  0004F8  0F30               	movwf	((c:PrintDigital@c)),c
  2513  0004FA  6E2B               	line	361
  2514                           	
  2515                           i2l1187:
  2516  0004FC                     ;main.c: 361:         temp = temp - temp/100*100;
  2517                           	movlw	high(064h)
  2518  0004FC  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2519  0004FE  6E1E               	movlw	low(064h)
  2520  000500  0E64               	movwf	((c:___awdiv@divisor)),c
  2521  000502  6E1D               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2522  000504  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2523  000508  C02D  F01C         	call	___awdiv	;wreg free
  2524  00050C  EC98  F003         	movff	0+?___awdiv,(c:___wmul@multiplier)
  2525  000510  C01B  F023         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  2526  000514  C01C  F024         	movlw	high(064h)
  2527  000518  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  2528  00051A  6E26               	movlw	low(064h)
  2529  00051C  0E64               	movwf	((c:___wmul@multiplicand)),c
  2530  00051E  6E25               	call	___wmul	;wreg free
  2531  000520  EC4D  F004         	comf	(0+?___wmul),c
  2532  000524  1E23               	comf	(1+?___wmul),c
  2533  000526  1E24               	infsnz	(0+?___wmul),c
  2534  000528  4A23               	incf	(1+?___wmul),c
  2535  00052A  2A24               	movf	((c:PrintDigital@temp)),c,w
  2536  00052C  502C               	addwf	(0+?___wmul),c,w
  2537  00052E  2423               	movwf	((c:PrintDigital@temp)),c
  2538  000530  6E2C               	movf	((c:PrintDigital@temp+1)),c,w
  2539  000532  502D               	addwfc	(1+?___wmul),c,w
  2540  000534  2024               	movwf	1+((c:PrintDigital@temp)),c
  2541  000536  6E2D               	line	362
  2542                           ;main.c: 362:         UART_Write(c);
  2543                           	movf	((c:PrintDigital@c)),c,w
  2544  000538  502B               	
  2545                           	call	_UART_Write
  2546  00053A  EC73  F004         	line	364
  2547                           	
  2548                           i2l1189:
  2549  00053E                     ;main.c: 364:         c = temp/10 + '0';
  2550                           	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2551  00053E  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2552  000542  C02D  F01C         	movlw	high(0Ah)
  2553  000546  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2554  000548  6E1E               	movlw	low(0Ah)
  2555  00054A  0E0A               	movwf	((c:___awdiv@divisor)),c
  2556  00054C  6E1D               	call	___awdiv	;wreg free
  2557  00054E  EC98  F003         	movf	(0+?___awdiv),c,w
  2558  000552  501B               	addlw	low(030h)
  2559  000554  0F30               	movwf	((c:PrintDigital@c)),c
  2560  000556  6E2B               	line	365
  2561                           	
  2562                           i2l1191:
  2563  000558                     ;main.c: 365:         temp = temp - temp/10*10;
  2564                           	movlw	high(0Ah)
  2565  000558  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2566  00055A  6E1E               	movlw	low(0Ah)
  2567  00055C  0E0A               	movwf	((c:___awdiv@divisor)),c
  2568  00055E  6E1D               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2569  000560  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2570  000564  C02D  F01C         	call	___awdiv	;wreg free
  2571  000568  EC98  F003         	movff	0+?___awdiv,(c:___wmul@multiplier)
  2572  00056C  C01B  F023         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  2573  000570  C01C  F024         	movlw	high(0Ah)
  2574  000574  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  2575  000576  6E26               	movlw	low(0Ah)
  2576  000578  0E0A               	movwf	((c:___wmul@multiplicand)),c
  2577  00057A  6E25               	call	___wmul	;wreg free
  2578  00057C  EC4D  F004         	comf	(0+?___wmul),c
  2579  000580  1E23               	comf	(1+?___wmul),c
  2580  000582  1E24               	infsnz	(0+?___wmul),c
  2581  000584  4A23               	incf	(1+?___wmul),c
  2582  000586  2A24               	movf	((c:PrintDigital@temp)),c,w
  2583  000588  502C               	addwf	(0+?___wmul),c,w
  2584  00058A  2423               	movwf	((c:PrintDigital@temp)),c
  2585  00058C  6E2C               	movf	((c:PrintDigital@temp+1)),c,w
  2586  00058E  502D               	addwfc	(1+?___wmul),c,w
  2587  000590  2024               	movwf	1+((c:PrintDigital@temp)),c
  2588  000592  6E2D               	line	366
  2589                           	
  2590                           i2l1193:
  2591  000594                     ;main.c: 366:         UART_Write(c);
  2592                           	movf	((c:PrintDigital@c)),c,w
  2593  000594  502B               	
  2594                           	call	_UART_Write
  2595  000596  EC73  F004         	line	367
  2596                           ;main.c: 367:     }
  2597                           	goto	i2l1215
  2598  00059A  EF8F  F003         	line	368
  2599                           ;main.c: 368:     else if(temp/100 > 0)
  2600                           	
  2601                           i2l164:
  2602  00059E                     	
  2603                           i2l1195:
  2604  00059E                     	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2605  00059E  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2606  0005A2  C02D  F01C         	movlw	high(064h)
  2607  0005A6  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2608  0005A8  6E1E               	movlw	low(064h)
  2609  0005AA  0E64               	movwf	((c:___awdiv@divisor)),c
  2610  0005AC  6E1D               	call	___awdiv	;wreg free
  2611  0005AE  EC98  F003         	btfsc	(1+?___awdiv),c,7
  2612  0005B2  BE1C               	goto	i2u35_41
  2613  0005B4  EFE4  F002         	movf	(1+?___awdiv),c,w
  2614  0005B8  501C               	bnz	i2u35_40
  2615  0005BA  E108               	decf	(0+?___awdiv),c,w
  2616  0005BC  041B               	btfss	status,0
  2617  0005BE  A0D8               	goto	i2u35_41
  2618  0005C0  EFE4  F002         	goto	i2u35_40
  2619  0005C4  EFE6  F002         
  2620                           i2u35_41:
  2621  0005C8                     	goto	i2l1207
  2622  0005C8  EF44  F003         i2u35_40:
  2623  0005CC                     	line	370
  2624                           	
  2625                           i2l1197:
  2626  0005CC                     ;main.c: 369:     {;main.c: 370:         c = temp/100 + '0';
  2627                           	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2628  0005CC  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2629  0005D0  C02D  F01C         	movlw	high(064h)
  2630  0005D4  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2631  0005D6  6E1E               	movlw	low(064h)
  2632  0005D8  0E64               	movwf	((c:___awdiv@divisor)),c
  2633  0005DA  6E1D               	call	___awdiv	;wreg free
  2634  0005DC  EC98  F003         	movf	(0+?___awdiv),c,w
  2635  0005E0  501B               	addlw	low(030h)
  2636  0005E2  0F30               	movwf	((c:PrintDigital@c)),c
  2637  0005E4  6E2B               	line	371
  2638                           	
  2639                           i2l1199:
  2640  0005E6                     ;main.c: 371:         temp = temp - temp/100*100;
  2641                           	movlw	high(064h)
  2642  0005E6  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2643  0005E8  6E1E               	movlw	low(064h)
  2644  0005EA  0E64               	movwf	((c:___awdiv@divisor)),c
  2645  0005EC  6E1D               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2646  0005EE  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2647  0005F2  C02D  F01C         	call	___awdiv	;wreg free
  2648  0005F6  EC98  F003         	movff	0+?___awdiv,(c:___wmul@multiplier)
  2649  0005FA  C01B  F023         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  2650  0005FE  C01C  F024         	movlw	high(064h)
  2651  000602  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  2652  000604  6E26               	movlw	low(064h)
  2653  000606  0E64               	movwf	((c:___wmul@multiplicand)),c
  2654  000608  6E25               	call	___wmul	;wreg free
  2655  00060A  EC4D  F004         	comf	(0+?___wmul),c
  2656  00060E  1E23               	comf	(1+?___wmul),c
  2657  000610  1E24               	infsnz	(0+?___wmul),c
  2658  000612  4A23               	incf	(1+?___wmul),c
  2659  000614  2A24               	movf	((c:PrintDigital@temp)),c,w
  2660  000616  502C               	addwf	(0+?___wmul),c,w
  2661  000618  2423               	movwf	((c:PrintDigital@temp)),c
  2662  00061A  6E2C               	movf	((c:PrintDigital@temp+1)),c,w
  2663  00061C  502D               	addwfc	(1+?___wmul),c,w
  2664  00061E  2024               	movwf	1+((c:PrintDigital@temp)),c
  2665  000620  6E2D               	line	372
  2666                           	
  2667                           i2l1201:
  2668  000622                     ;main.c: 372:         UART_Write(c);
  2669                           	movf	((c:PrintDigital@c)),c,w
  2670  000622  502B               	
  2671                           	call	_UART_Write
  2672  000624  EC73  F004         	line	374
  2673                           	
  2674                           i2l1203:
  2675  000628                     ;main.c: 374:         c = temp/10 + '0';
  2676                           	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2677  000628  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2678  00062C  C02D  F01C         	movlw	high(0Ah)
  2679  000630  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2680  000632  6E1E               	movlw	low(0Ah)
  2681  000634  0E0A               	movwf	((c:___awdiv@divisor)),c
  2682  000636  6E1D               	call	___awdiv	;wreg free
  2683  000638  EC98  F003         	movf	(0+?___awdiv),c,w
  2684  00063C  501B               	addlw	low(030h)
  2685  00063E  0F30               	movwf	((c:PrintDigital@c)),c
  2686  000640  6E2B               	line	375
  2687                           	
  2688                           i2l1205:
  2689  000642                     ;main.c: 375:         temp = temp - temp/10*10;
  2690                           	movlw	high(0Ah)
  2691  000642  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2692  000644  6E1E               	movlw	low(0Ah)
  2693  000646  0E0A               	movwf	((c:___awdiv@divisor)),c
  2694  000648  6E1D               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2695  00064A  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2696  00064E  C02D  F01C         	call	___awdiv	;wreg free
  2697  000652  EC98  F003         	movff	0+?___awdiv,(c:___wmul@multiplier)
  2698  000656  C01B  F023         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  2699  00065A  C01C  F024         	movlw	high(0Ah)
  2700  00065E  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  2701  000660  6E26               	movlw	low(0Ah)
  2702  000662  0E0A               	movwf	((c:___wmul@multiplicand)),c
  2703  000664  6E25               	call	___wmul	;wreg free
  2704  000666  EC4D  F004         	comf	(0+?___wmul),c
  2705  00066A  1E23               	comf	(1+?___wmul),c
  2706  00066C  1E24               	infsnz	(0+?___wmul),c
  2707  00066E  4A23               	incf	(1+?___wmul),c
  2708  000670  2A24               	movf	((c:PrintDigital@temp)),c,w
  2709  000672  502C               	addwf	(0+?___wmul),c,w
  2710  000674  2423               	movwf	((c:PrintDigital@temp)),c
  2711  000676  6E2C               	movf	((c:PrintDigital@temp+1)),c,w
  2712  000678  502D               	addwfc	(1+?___wmul),c,w
  2713  00067A  2024               	movwf	1+((c:PrintDigital@temp)),c
  2714  00067C  6E2D               	line	376
  2715                           ;main.c: 376:         UART_Write(c);
  2716                           	movf	((c:PrintDigital@c)),c,w
  2717  00067E  502B               	
  2718                           	call	_UART_Write
  2719  000680  EC73  F004         	line	377
  2720                           ;main.c: 377:     }
  2721                           	goto	i2l1215
  2722  000684  EF8F  F003         	line	378
  2723                           ;main.c: 378:     else if(temp/10 > 0)
  2724                           	
  2725                           i2l166:
  2726  000688                     	
  2727                           i2l1207:
  2728  000688                     	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2729  000688  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2730  00068C  C02D  F01C         	movlw	high(0Ah)
  2731  000690  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2732  000692  6E1E               	movlw	low(0Ah)
  2733  000694  0E0A               	movwf	((c:___awdiv@divisor)),c
  2734  000696  6E1D               	call	___awdiv	;wreg free
  2735  000698  EC98  F003         	btfsc	(1+?___awdiv),c,7
  2736  00069C  BE1C               	goto	i2u36_41
  2737  00069E  EF59  F003         	movf	(1+?___awdiv),c,w
  2738  0006A2  501C               	bnz	i2u36_40
  2739  0006A4  E108               	decf	(0+?___awdiv),c,w
  2740  0006A6  041B               	btfss	status,0
  2741  0006A8  A0D8               	goto	i2u36_41
  2742  0006AA  EF59  F003         	goto	i2u36_40
  2743  0006AE  EF5B  F003         
  2744                           i2u36_41:
  2745  0006B2                     	goto	i2l1215
  2746  0006B2  EF8F  F003         i2u36_40:
  2747  0006B6                     	line	380
  2748                           	
  2749                           i2l1209:
  2750  0006B6                     ;main.c: 379:     {;main.c: 380:         c = temp/10 + '0';
  2751                           	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2752  0006B6  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2753  0006BA  C02D  F01C         	movlw	high(0Ah)
  2754  0006BE  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2755  0006C0  6E1E               	movlw	low(0Ah)
  2756  0006C2  0E0A               	movwf	((c:___awdiv@divisor)),c
  2757  0006C4  6E1D               	call	___awdiv	;wreg free
  2758  0006C6  EC98  F003         	movf	(0+?___awdiv),c,w
  2759  0006CA  501B               	addlw	low(030h)
  2760  0006CC  0F30               	movwf	((c:PrintDigital@c)),c
  2761  0006CE  6E2B               	line	381
  2762                           	
  2763                           i2l1211:
  2764  0006D0                     ;main.c: 381:         temp = temp - temp/10*10;
  2765                           	movlw	high(0Ah)
  2766  0006D0  0E00               	movwf	((c:___awdiv@divisor+1)),c
  2767  0006D2  6E1E               	movlw	low(0Ah)
  2768  0006D4  0E0A               	movwf	((c:___awdiv@divisor)),c
  2769  0006D6  6E1D               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  2770  0006D8  C02C  F01B         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  2771  0006DC  C02D  F01C         	call	___awdiv	;wreg free
  2772  0006E0  EC98  F003         	movff	0+?___awdiv,(c:___wmul@multiplier)
  2773  0006E4  C01B  F023         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  2774  0006E8  C01C  F024         	movlw	high(0Ah)
  2775  0006EC  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  2776  0006EE  6E26               	movlw	low(0Ah)
  2777  0006F0  0E0A               	movwf	((c:___wmul@multiplicand)),c
  2778  0006F2  6E25               	call	___wmul	;wreg free
  2779  0006F4  EC4D  F004         	comf	(0+?___wmul),c
  2780  0006F8  1E23               	comf	(1+?___wmul),c
  2781  0006FA  1E24               	infsnz	(0+?___wmul),c
  2782  0006FC  4A23               	incf	(1+?___wmul),c
  2783  0006FE  2A24               	movf	((c:PrintDigital@temp)),c,w
  2784  000700  502C               	addwf	(0+?___wmul),c,w
  2785  000702  2423               	movwf	((c:PrintDigital@temp)),c
  2786  000704  6E2C               	movf	((c:PrintDigital@temp+1)),c,w
  2787  000706  502D               	addwfc	(1+?___wmul),c,w
  2788  000708  2024               	movwf	1+((c:PrintDigital@temp)),c
  2789  00070A  6E2D               	line	382
  2790                           	
  2791                           i2l1213:
  2792  00070C                     ;main.c: 382:         UART_Write(c);
  2793                           	movf	((c:PrintDigital@c)),c,w
  2794  00070C  502B               	
  2795                           	call	_UART_Write
  2796  00070E  EC73  F004         	goto	i2l1215
  2797  000712  EF8F  F003         	line	383
  2798                           ;main.c: 383:     }
  2799                           	
  2800                           i2l168:
  2801  000716                     	goto	i2l1215
  2802  000716  EF8F  F003         	
  2803                           i2l167:
  2804  00071A                     	goto	i2l1215
  2805  00071A  EF8F  F003         	
  2806                           i2l165:
  2807  00071E                     	line	384
  2808                           	
  2809                           i2l1215:
  2810  00071E                     ;main.c: 384:     c = temp + '0';
  2811                           	movf	((c:PrintDigital@temp)),c,w
  2812  00071E  502C               	addlw	low(030h)
  2813  000720  0F30               	movwf	((c:PrintDigital@c)),c
  2814  000722  6E2B               	line	385
  2815                           	
  2816                           i2l1217:
  2817  000724                     ;main.c: 385:     UART_Write(c);
  2818                           	movf	((c:PrintDigital@c)),c,w
  2819  000724  502B               	
  2820                           	call	_UART_Write
  2821  000726  EC73  F004         	goto	i2l169
  2822  00072A  EF97  F003         	line	387
  2823                           	
  2824                           i2l1219:
  2825  00072E                     	line	388
  2826                           ;main.c: 387:     return ;
  2827                           	
  2828                           i2l169:
  2829  00072E                     	return	;funcret
  2830  00072E  0012               	opt stack 0
  2831                           GLOBAL	__end_of_PrintDigital
  2832                           	__end_of_PrintDigital:
  2833  000730                     	signat	_PrintDigital,4217
  2834                           	global	___wmul
  2835                           
  2836 ;; *************** function ___wmul *****************
  2837 ;; Defined at:
  2838 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  multiplier      2    8[COMRAM] unsigned int 
  2841 ;;  multiplicand    2   10[COMRAM] unsigned int 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  product         2   12[COMRAM] unsigned int 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  2    8[COMRAM] unsigned int 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0, prodl, prodh
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2853 ;;      Params:         4       0       0       0       0       0       0
  2854 ;;      Locals:         2       0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0
  2856 ;;      Totals:         6       0       0       0       0       0       0
  2857 ;;Total ram usage:        6 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; This function calls:
  2860 ;;		Nothing
  2861 ;; This function is called by:
  2862 ;;		_PrintDigital
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           psect	text10,class=CODE,space=0,reloc=2,group=1
  2866                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  2867                           	line	15
  2868                           global __ptext10
  2869                           __ptext10:
  2870  00089A                     psect	text10
  2871                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  2872                           	line	15
  2873                           	global	__size_of___wmul
  2874                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  2875  0000                     	
  2876                           ___wmul:
  2877  00089A                     ;incstack = 0
  2878                           	opt	stack 26
  2879                           	line	37
  2880                           	
  2881                           i2l1113:
  2882  00089A                     	movf	((c:___wmul@multiplier)),c,w
  2883  00089A  5023               	mulwf	((c:___wmul@multiplicand)),c
  2884  00089C  0225               	movff	prodl,(c:___wmul@product)
  2885  00089E  CFF3 F027          	movff	prodh,(c:___wmul@product+1)
  2886  0008A2  CFF4 F028          	line	38
  2887                           	movf	((c:___wmul@multiplier)),c,w
  2888  0008A6  5023               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  2889  0008A8  0226               	movf	(prodl),c,w
  2890  0008AA  50F3               	addwf	((c:___wmul@product+1)),c
  2891  0008AC  2628               
  2892                           	line	39
  2893                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  2894  0008AE  5024               	mulwf	((c:___wmul@multiplicand)),c
  2895  0008B0  0225               	movf	(prodl),c,w
  2896  0008B2  50F3               	addwf	((c:___wmul@product+1)),c
  2897  0008B4  2628               
  2898                           	line	52
  2899                           	
  2900                           i2l1115:
  2901  0008B6                     	movff	(c:___wmul@product),(c:?___wmul)
  2902  0008B6  C027  F023         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  2903  0008BA  C028  F024         	goto	i2l172
  2904  0008BE  EF61  F004         	
  2905                           i2l1117:
  2906  0008C2                     	line	53
  2907                           	
  2908                           i2l172:
  2909  0008C2                     	return	;funcret
  2910  0008C2  0012               	opt stack 0
  2911                           GLOBAL	__end_of___wmul
  2912                           	__end_of___wmul:
  2913  0008C4                     	signat	___wmul,8314
  2914                           	global	___awdiv
  2915                           
  2916 ;; *************** function ___awdiv *****************
  2917 ;; Defined at:
  2918 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  dividend        2    0[COMRAM] int 
  2921 ;;  divisor         2    2[COMRAM] int 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  quotient        2    6[COMRAM] int 
  2924 ;;  sign            1    5[COMRAM] unsigned char 
  2925 ;;  counter         1    4[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  2    0[COMRAM] int 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2935 ;;      Params:         4       0       0       0       0       0       0
  2936 ;;      Locals:         4       0       0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0
  2938 ;;      Totals:         8       0       0       0       0       0       0
  2939 ;;Total ram usage:        8 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_PrintDigital
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           psect	text11,class=CODE,space=0,reloc=2,group=1
  2948                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  2949                           	line	7
  2950                           global __ptext11
  2951                           __ptext11:
  2952  000730                     psect	text11
  2953                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  2954                           	line	7
  2955                           	global	__size_of___awdiv
  2956                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2957  0000                     	
  2958                           ___awdiv:
  2959  000730                     ;incstack = 0
  2960                           	opt	stack 26
  2961                           	line	13
  2962                           	
  2963                           i2l1119:
  2964  000730                     	movlw	low(0)
  2965  000730  0E00               	movwf	((c:___awdiv@sign)),c
  2966  000732  6E20               	line	14
  2967                           	
  2968                           i2l1121:
  2969  000734                     	btfsc	((c:___awdiv@divisor+1)),c,7
  2970  000734  BE1E               	goto	i2u27_40
  2971  000736  EFA1  F003         	goto	i2u27_41
  2972  00073A  EF9F  F003         
  2973                           i2u27_41:
  2974  00073E                     	goto	i2l1127
  2975  00073E  EFA9  F003         i2u27_40:
  2976  000742                     	line	15
  2977                           	
  2978                           i2l1123:
  2979  000742                     	negf	((c:___awdiv@divisor)),c
  2980  000742  6C1D               	comf	((c:___awdiv@divisor+1)),c
  2981  000744  1E1E               	btfsc	status,0
  2982  000746  B0D8               	incf	((c:___awdiv@divisor+1)),c
  2983  000748  2A1E               	line	16
  2984                           	
  2985                           i2l1125:
  2986  00074A                     	movlw	low(01h)
  2987  00074A  0E01               	movwf	((c:___awdiv@sign)),c
  2988  00074C  6E20               	goto	i2l1127
  2989  00074E  EFA9  F003         	line	17
  2990                           	
  2991                           i2l393:
  2992  000752                     	line	18
  2993                           	
  2994                           i2l1127:
  2995  000752                     	btfsc	((c:___awdiv@dividend+1)),c,7
  2996  000752  BE1C               	goto	i2u28_40
  2997  000754  EFB0  F003         	goto	i2u28_41
  2998  000758  EFAE  F003         
  2999                           i2u28_41:
  3000  00075C                     	goto	i2l1133
  3001  00075C  EFB8  F003         i2u28_40:
  3002  000760                     	line	19
  3003                           	
  3004                           i2l1129:
  3005  000760                     	negf	((c:___awdiv@dividend)),c
  3006  000760  6C1B               	comf	((c:___awdiv@dividend+1)),c
  3007  000762  1E1C               	btfsc	status,0
  3008  000764  B0D8               	incf	((c:___awdiv@dividend+1)),c
  3009  000766  2A1C               	line	20
  3010                           	
  3011                           i2l1131:
  3012  000768                     	movlw	(01h)&0ffh
  3013  000768  0E01               	xorwf	((c:___awdiv@sign)),c
  3014  00076A  1A20               	goto	i2l1133
  3015  00076C  EFB8  F003         	line	21
  3016                           	
  3017                           i2l394:
  3018  000770                     	line	22
  3019                           	
  3020                           i2l1133:
  3021  000770                     	movlw	high(0)
  3022  000770  0E00               	movwf	((c:___awdiv@quotient+1)),c
  3023  000772  6E22               	movlw	low(0)
  3024  000774  0E00               	movwf	((c:___awdiv@quotient)),c
  3025  000776  6E21               	line	23
  3026                           	
  3027                           i2l1135:
  3028  000778                     	movf	((c:___awdiv@divisor)),c,w
  3029  000778  501D               iorwf	((c:___awdiv@divisor+1)),c,w
  3030  00077A  101E               	btfsc	status,2
  3031  00077C  B4D8               	goto	i2u29_41
  3032  00077E  EFC3  F003         	goto	i2u29_40
  3033  000782  EFC5  F003         
  3034                           i2u29_41:
  3035  000786                     	goto	i2l1155
  3036  000786  EFF9  F003         i2u29_40:
  3037  00078A                     	line	24
  3038                           	
  3039                           i2l1137:
  3040  00078A                     	movlw	low(01h)
  3041  00078A  0E01               	movwf	((c:___awdiv@counter)),c
  3042  00078C  6E1F               	line	25
  3043                           	goto	i2l1141
  3044  00078E  EFCF  F003         	
  3045                           i2l397:
  3046  000792                     	line	26
  3047                           	
  3048                           i2l1139:
  3049  000792                     	bcf	status,0
  3050  000792  90D8               	rlcf	((c:___awdiv@divisor)),c
  3051  000794  361D               	rlcf	((c:___awdiv@divisor+1)),c
  3052  000796  361E               	line	27
  3053                           	incf	((c:___awdiv@counter)),c
  3054  000798  2A1F               	goto	i2l1141
  3055  00079A  EFCF  F003         	line	28
  3056                           	
  3057                           i2l396:
  3058  00079E                     	line	25
  3059                           	
  3060                           i2l1141:
  3061  00079E                     	
  3062                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  3063  00079E  AE1E               	goto	i2u30_41
  3064  0007A0  EFD4  F003         	goto	i2u30_40
  3065  0007A4  EFD6  F003         i2u30_41:
  3066  0007A8                     	goto	i2l1139
  3067  0007A8  EFC9  F003         i2u30_40:
  3068  0007AC                     	goto	i2l1143
  3069  0007AC  EFDA  F003         	
  3070                           i2l398:
  3071  0007B0                     	goto	i2l1143
  3072  0007B0  EFDA  F003         	line	29
  3073                           	
  3074                           i2l399:
  3075  0007B4                     	line	30
  3076                           	
  3077                           i2l1143:
  3078  0007B4                     	bcf	status,0
  3079  0007B4  90D8               	rlcf	((c:___awdiv@quotient)),c
  3080  0007B6  3621               	rlcf	((c:___awdiv@quotient+1)),c
  3081  0007B8  3622               	line	31
  3082                           	
  3083                           i2l1145:
  3084  0007BA                     		movf	((c:___awdiv@divisor)),c,w
  3085  0007BA  501D               	subwf	((c:___awdiv@dividend)),c,w
  3086  0007BC  5C1B               	movf	((c:___awdiv@divisor+1)),c,w
  3087  0007BE  501E               	subwfb	((c:___awdiv@dividend+1)),c,w
  3088  0007C0  581C               	btfss	status,0
  3089  0007C2  A0D8               	goto	i2u31_41
  3090  0007C4  EFE6  F003         	goto	i2u31_40
  3091  0007C8  EFE8  F003         
  3092                           i2u31_41:
  3093  0007CC                     	goto	i2l1151
  3094  0007CC  EFEF  F003         i2u31_40:
  3095  0007D0                     	line	32
  3096                           	
  3097                           i2l1147:
  3098  0007D0                     	movf	((c:___awdiv@divisor)),c,w
  3099  0007D0  501D               	subwf	((c:___awdiv@dividend)),c
  3100  0007D2  5E1B               	movf	((c:___awdiv@divisor+1)),c,w
  3101  0007D4  501E               	subwfb	((c:___awdiv@dividend+1)),c
  3102  0007D6  5A1C               
  3103                           	line	33
  3104                           	
  3105                           i2l1149:
  3106  0007D8                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
  3107  0007D8  8021               	goto	i2l1151
  3108  0007DA  EFEF  F003         	line	34
  3109                           	
  3110                           i2l400:
  3111  0007DE                     	line	35
  3112                           	
  3113                           i2l1151:
  3114  0007DE                     	bcf	status,0
  3115  0007DE  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  3116  0007E0  321E               	rrcf	((c:___awdiv@divisor)),c
  3117  0007E2  321D               	line	36
  3118                           	
  3119                           i2l1153:
  3120  0007E4                     	decfsz	((c:___awdiv@counter)),c
  3121  0007E4  2E1F               	
  3122                           	goto	i2l1143
  3123  0007E6  EFDA  F003         	goto	i2l1155
  3124  0007EA  EFF9  F003         	
  3125                           i2l401:
  3126  0007EE                     	goto	i2l1155
  3127  0007EE  EFF9  F003         	line	37
  3128                           	
  3129                           i2l395:
  3130  0007F2                     	line	38
  3131                           	
  3132                           i2l1155:
  3133  0007F2                     	movf	((c:___awdiv@sign)),c,w
  3134  0007F2  5020               	btfsc	status,2
  3135  0007F4  B4D8               	goto	i2u32_41
  3136  0007F6  EFFF  F003         	goto	i2u32_40
  3137  0007FA  EF01  F004         i2u32_41:
  3138  0007FE                     	goto	i2l1159
  3139  0007FE  EF07  F004         i2u32_40:
  3140  000802                     	line	39
  3141                           	
  3142                           i2l1157:
  3143  000802                     	negf	((c:___awdiv@quotient)),c
  3144  000802  6C21               	comf	((c:___awdiv@quotient+1)),c
  3145  000804  1E22               	btfsc	status,0
  3146  000806  B0D8               	incf	((c:___awdiv@quotient+1)),c
  3147  000808  2A22               	goto	i2l1159
  3148  00080A  EF07  F004         	
  3149                           i2l402:
  3150  00080E                     	line	40
  3151                           	
  3152                           i2l1159:
  3153  00080E                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
  3154  00080E  C021  F01B         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
  3155  000812  C022  F01C         	goto	i2l403
  3156  000816  EF0D  F004         	
  3157                           i2l1161:
  3158  00081A                     	line	41
  3159                           	
  3160                           i2l403:
  3161  00081A                     	return	;funcret
  3162  00081A  0012               	opt stack 0
  3163                           GLOBAL	__end_of___awdiv
  3164                           	__end_of___awdiv:
  3165  00081C                     	signat	___awdiv,8314
  3166                           	global	_UART_Write
  3167                           
  3168 ;; *************** function _UART_Write *****************
  3169 ;; Defined at:
  3170 ;;		line 137 in file "main.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  data            1    wreg     unsigned char 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  data            1    0[COMRAM] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3184 ;;      Params:         0       0       0       0       0       0       0
  3185 ;;      Locals:         1       0       0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0
  3187 ;;      Totals:         1       0       0       0       0       0       0
  3188 ;;Total ram usage:        1 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_Hi_ISR
  3194 ;;		_PrintDigital
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           psect	text12,class=CODE,space=0,reloc=2,group=0
  3198                           	file	"main.c"
  3199                           	line	137
  3200                           global __ptext12
  3201                           __ptext12:
  3202  0008E6                     psect	text12
  3203                           	file	"main.c"
  3204                           	line	137
  3205                           	global	__size_of_UART_Write
  3206                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
  3207  0000                     	
  3208                           _UART_Write:
  3209  0008E6                     ;incstack = 0
  3210                           	opt	stack 27
  3211                           ;UART_Write@data stored from wreg
  3212                           	movwf	((c:UART_Write@data)),c
  3213  0008E6  6E1B               	line	139
  3214                           	
  3215                           i2l845:
  3216  0008E8                     ;main.c: 137: void UART_Write(unsigned char data);main.c: 138: {;main.c: 139:     while(
                                 !TXSTAbits.TRMT);
  3217                           	goto	i2l103
  3218  0008E8  EF76  F004         	
  3219                           i2l104:
  3220  0008EC                     	
  3221                           i2l103:
  3222  0008EC                     	btfss	((c:4012)),c,1	;volatile
  3223  0008EC  A2AC               	goto	i2u1_41
  3224  0008EE  EF7B  F004         	goto	i2u1_40
  3225  0008F2  EF7D  F004         i2u1_41:
  3226  0008F6                     	goto	i2l103
  3227  0008F6  EF76  F004         i2u1_40:
  3228  0008FA                     	goto	i2l847
  3229  0008FA  EF7F  F004         	
  3230                           i2l105:
  3231  0008FE                     	line	140
  3232                           	
  3233                           i2l847:
  3234  0008FE                     ;main.c: 140:     TXREG = data;
  3235                           	movff	(c:UART_Write@data),(c:4013)	;volatile
  3236  0008FE  C01B  FFAD         	line	141
  3237                           	
  3238                           i2l106:
  3239  000902                     	return	;funcret
  3240  000902  0012               	opt stack 0
  3241                           GLOBAL	__end_of_UART_Write
  3242                           	__end_of_UART_Write:
  3243  000904                     	signat	_UART_Write,4217
  3244                           	global	_ADC_Read
  3245                           
  3246 ;; *************** function _ADC_Read *****************
  3247 ;; Defined at:
  3248 ;;		line 336 in file "main.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  channel         2    0[COMRAM] int 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  digital         2    4[COMRAM] int 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2    0[COMRAM] int 
  3255 ;; Registers used:
  3256 ;;		wreg, status,2, status,0
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3262 ;;      Params:         2       0       0       0       0       0       0
  3263 ;;      Locals:         2       0       0       0       0       0       0
  3264 ;;      Temps:          2       0       0       0       0       0       0
  3265 ;;      Totals:         6       0       0       0       0       0       0
  3266 ;;Total ram usage:        6 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_Hi_ISR
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           psect	text13,class=CODE,space=0,reloc=2,group=0
  3275                           	line	336
  3276                           global __ptext13
  3277                           __ptext13:
  3278  00081C                     psect	text13
  3279                           	file	"main.c"
  3280                           	line	336
  3281                           	global	__size_of_ADC_Read
  3282                           	__size_of_ADC_Read	equ	__end_of_ADC_Read-_ADC_Read
  3283  0000                     	
  3284                           _ADC_Read:
  3285  00081C                     ;incstack = 0
  3286                           	opt	stack 27
  3287                           	line	340
  3288                           	
  3289                           i2l1163:
  3290  00081C                     ;main.c: 336: int ADC_Read(int channel);main.c: 337: {;main.c: 338:     int digital;;mai
                                 n.c: 340:     ADCON0bits.CHS = channel ;
  3291                           	movff	(c:ADC_Read@channel),??_ADC_Read+0+0
  3292  00081C  C01B  F01D         	rlncf	(??_ADC_Read+0+0),c
  3293  000820  461D               	rlncf	(??_ADC_Read+0+0),c
  3294  000822  461D               	movf	((c:4034)),c,w	;volatile
  3295  000824  50C2               	xorwf	(??_ADC_Read+0+0),c,w
  3296  000826  181D               	andlw	not (((1<<4)-1)<<2)
  3297  000828  0BC3               	xorwf	(??_ADC_Read+0+0),c,w
  3298  00082A  181D               	movwf	((c:4034)),c	;volatile
  3299  00082C  6EC2               	line	341
  3300                           	
  3301                           i2l1165:
  3302  00082E                     ;main.c: 341:     ADCON0bits.GO = 1;
  3303                           	bsf	((c:4034)),c,1	;volatile
  3304  00082E  82C2               	line	342
  3305                           	
  3306                           i2l1167:
  3307  000830                     ;main.c: 342:     ADCON0bits.ADON = 1;
  3308                           	bsf	((c:4034)),c,0	;volatile
  3309  000830  80C2               	line	344
  3310                           ;main.c: 344:     while(ADCON0bits.GO_nDONE==1);
  3311                           	goto	i2l158
  3312  000832  EF1B  F004         	
  3313                           i2l159:
  3314  000836                     	
  3315                           i2l158:
  3316  000836                     	btfsc	((c:4034)),c,1	;volatile
  3317  000836  B2C2               	goto	i2u33_41
  3318  000838  EF20  F004         	goto	i2u33_40
  3319  00083C  EF22  F004         i2u33_41:
  3320  000840                     	goto	i2l158
  3321  000840  EF1B  F004         i2u33_40:
  3322  000844                     	goto	i2l1169
  3323  000844  EF24  F004         	
  3324                           i2l160:
  3325  000848                     	line	346
  3326                           	
  3327                           i2l1169:
  3328  000848                     ;main.c: 346:     digital = (ADRESH*256) | (ADRESL);
  3329                           	movf	((c:4035)),c,w	;volatile
  3330  000848  50C3               	movff	(c:4036),??_ADC_Read+0+0	;volatile
  3331  00084A  CFC4 F01D          	clrf	(??_ADC_Read+0+0+1)&0ffh,c
  3332  00084E  6A1E               	movff	??_ADC_Read+0+0,??_ADC_Read+0+1
  3333  000850  C01D  F01E         	clrf	(??_ADC_Read+0+0),c
  3334  000854  6A1D               	iorwf	(??_ADC_Read+0+0),c,w
  3335  000856  101D               	movwf	((c:ADC_Read@digital)),c
  3336  000858  6E1F               	movf	(??_ADC_Read+0+1),c,w
  3337  00085A  501E               	movwf	1+((c:ADC_Read@digital)),c
  3338  00085C  6E20               	line	347
  3339                           	
  3340                           i2l1171:
  3341  00085E                     ;main.c: 347:     return(digital);
  3342                           	movff	(c:ADC_Read@digital),(c:?_ADC_Read)
  3343  00085E  C01F  F01B         	movff	(c:ADC_Read@digital+1),(c:?_ADC_Read+1)
  3344  000862  C020  F01C         	goto	i2l161
  3345  000866  EF35  F004         	
  3346                           i2l1173:
  3347  00086A                     	line	348
  3348                           	
  3349                           i2l161:
  3350  00086A                     	return	;funcret
  3351  00086A  0012               	opt stack 0
  3352                           GLOBAL	__end_of_ADC_Read
  3353                           	__end_of_ADC_Read:
  3354  00086C                     	signat	_ADC_Read,4218
  3355                           	GLOBAL	__activetblptr
  3356                           __activetblptr	EQU	0
  3357  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  3358                           	PSECT	rparam,class=COMRAM,space=1,noexec
  3359                           	GLOBAL	__Lrparam
  3360                           	FNCONF	rparam,??,?
  3361                           	GLOBAL	___rparam_used
  3362                           	___rparam_used EQU 1
  3363  0000                     	GLOBAL	___param_bank
  3364                           	___param_bank EQU 0
  3365  0000                     GLOBAL	__Lparam, __Hparam
  3366                           GLOBAL	__Lrparam, __Hrparam
  3367                           __Lparam	EQU	__Lrparam
  3368  0000                     __Hparam	EQU	__Hrparam
  3369  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  3370                           	global	btemp
  3371                           btemp:
  3372  000030                     	ds	1
  3373  000030                     	global	int$flags
  3374                           	int$flags	set btemp
  3375  0000                     	global	wtemp8
  3376                           	wtemp8 set btemp+1
  3377  0000                     	global	ttemp5
  3378                           	ttemp5 set btemp+1
  3379  0000                     	global	ttemp6
  3380                           	ttemp6 set btemp+4
  3381  0000                     	global	ttemp7
  3382                           	ttemp7 set btemp+8
  3383  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     21      47
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->_PrintDigital
    _PrintDigital->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
               _INTERRUPT_Initialize
                            _LEDInit
                              _Mode2
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode2                                                0     0      0       0
                           _adc_init
                          _ccp2_init
                           _tmr_init
 ---------------------------------------------------------------------------------
 (2) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ccp2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Hi_ISR                                               2     2      0    6376
                                             19 COMRAM     2     2      0
                           _ADC_Read
                       _PrintDigital
                         _UART_Write
 ---------------------------------------------------------------------------------
 (4) _PrintDigital                                         5     3      2    5328
                                             14 COMRAM     5     3      2
                         _UART_Write
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1071
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2580
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _UART_Write                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ADC_Read                                             6     4      2    1033
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTERRUPT_Initialize
   _LEDInit
   _Mode2
     _adc_init
     _ccp2_init
     _tmr_init
   _UART_Initialize

 _Hi_ISR (ROOT)
   _ADC_Read
   _PrintDigital
     _UART_Write
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     15      2F       1       37.3%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      14        0.0%
DATA                 0      0      2F      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Dec 30 19:42:10 2018

                           l91 0930                             l92 0930                             l93 0934  
                           l94 0934                             l97 0986                   ___awdiv@sign 0020  
          ___wmul@multiplicand 0025                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                          l100 08E4                            l112 0974                            l121 097E  
                          l115 0898                            l109 091E                            l118 0962  
                          l921 08CE                            l851 0878                            l931 08DA  
                          l923 08D2                            l917 0980                            l941 0904  
                          l853 0880                            l861 094E                            l933 08DC  
                          l925 08D4                            l855 0882                            l863 095A  
                          l943 0964                            l935 08DE                            l927 08D6  
                          l919 08C4                            l857 0894                            l849 086C  
                          l865 0976                            l945 0968                            l937 08E0  
                          l929 08D8                            l859 0896                            l947 096C  
                          l939 08E2                            l949 0970                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000                            wreg 000FE8                   __CFG_IESO$ON 000000  
                 __CFG_LVP$OFF 000000                __end_of_LEDInit 0920                   __CFG_WDT$OFF 000000  
                         l1011 0924                           l1013 0928                           l1009 0920  
                 __CFG_WDTPS$1 000000                           _data 0001                           _main 0920  
                         btemp 0030               __end_of_ADC_Read 086C                           prodh 000FF4  
                         prodl 000FF3                           start 000E                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000000               ?_UART_Initialize 001B                          ?_main 001B  
              __end_of___awdiv 081C                          _CCPR2 000FBB                ___awdiv@divisor 001D  
                        i2l103 08EC                          i2l104 08EC                          i2l105 08FE  
                        i2l106 0902                          i2l130 016E                          i2l131 0190  
                        i2l140 0236                          i2l132 0196                          i2l141 0258  
                        i2l133 01B8                          i2l150 02FE                          i2l142 025E  
                        i2l134 01BE                          i2l126 0032                          i2l127 0440  
                        i2l151 0320                          i2l143 0280                          i2l135 01E0  
                        i2l160 0848                          i2l400 07DE                          i2l128 043C  
                        i2l152 0326                          i2l144 0286                          i2l136 01E6  
                        i2l161 086A                          i2l401 07EE                          i2l153 0348  
                        i2l145 02A8                          i2l137 0208                          i2l129 0168  
                        i2l402 080E                          i2l154 034E                          i2l146 02AE  
                        i2l138 020E                          i2l403 081A                          i2l147 02D0  
                        i2l139 0230                          i2l155 0444                          i2l172 08C2  
                        i2l164 059E                          i2l148 02D6                          i2l165 071E  
                        i2l149 02F8                          i2l158 0836                          i2l166 0688  
                        i2l159 0836                          i2l167 071A                          i2l168 0716  
                        i2l169 072E                          i2l393 0752                          i2l394 0770  
                        i2l395 07F2                          i2l396 079E                          i2l397 0792  
                        i2l398 07B0                          i2l399 07B4                          i2l845 08E8  
                        i2l847 08FE                ___awdiv@counter 001F                          _SPBRG 000FAF  
                        _TRISD 000F95                          _TXREG 000FAD                  __CFG_PWRT$OFF 000000  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
                __CFG_WRT3$OFF 000000                          _Mode2 0964                 __CFG_EBTR0$OFF 000000  
               __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000                 __CFG_EBTR2$OFF 000000  
               __CFG_EBTR3$OFF 000000                    ?_UART_Write 001B                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBTRB$OFF 000000  
                        ttemp5 0031                          ttemp6 0034                          ttemp7 0038  
                        status 000FD8                          wtemp8 0031                 __CFG_PBADEN$ON 000000  
              __initialization 0938                   __end_of_main 0938                         ??_main 0030  
                __activetblptr 000000                      ??_LEDInit 0030                         ?_Mode2 001B  
                       _CCP2M0 007DD0                         _CCP2M1 007DD1                         _CCP2M2 007DD2  
                       _CCP2M3 007DD3                         _CCP2IE 007D00                         _CCP2IP 007D10  
                       _ADRESH 000FC4                         _ADRESL 000FC3               ___awdiv@dividend 001B  
                       _T3CCP1 007D8B                         _T3CCP2 007D8E               __end_of_adc_init 089A  
                       i2l1121 0734                         i2l1113 089A                         i2l1201 0622  
                       i2l1131 0768                         i2l1123 0742                         i2l1115 08B6  
                       i2l1211 06D0                         i2l1203 0628                         i2l1141 079E  
                       i2l1133 0770                         i2l1125 074A                         i2l1117 08C2  
                       i2l1213 070C                         i2l1205 0642                         i2l1301 03CC  
                       i2l1221 001C                         i2l1151 07DE                         i2l1143 07B4  
                       i2l1135 0778                         i2l1127 0752                         i2l1119 0730  
                       i2l1207 0688                         i2l1215 071E                         i2l1311 0414  
                       i2l1303 03DE                         i2l1231 0162                         i2l1223 002A  
                       i2l1161 081A                         i2l1153 07E4                         i2l1145 07BA  
                       i2l1137 078A                         i2l1129 0760                         i2l1217 0724  
                       i2l1209 06B6                         i2l1313 0420                         i2l1305 03EA  
                       i2l1241 01BE                         i2l1233 016E                         i2l1225 0040  
                       i2l1171 085E                         i2l1163 081C                         i2l1147 07D0  
                       i2l1139 0792                         i2l1155 07F2                         i2l1219 072E  
                       i2l1315 0432                         i2l1307 03FC                         i2l1251 022A  
                       i2l1243 01DA                         i2l1235 018A                         i2l1227 0042  
                       i2l1173 086A                         i2l1165 082E                         i2l1157 0802  
                       i2l1149 07D8                         i2l1181 04A0                         i2l1317 0444  
                       i2l1309 0402                         i2l1261 0286                         i2l1253 0236  
                       i2l1245 01E6                         i2l1237 0196                         i2l1229 0146  
                       i2l1167 0830                         i2l1159 080E                         i2l1191 0558  
                       i2l1183 04DC                         i2l1175 0450                         i2l1271 02F2  
                       i2l1263 02A2                         i2l1255 0252                         i2l1247 0202  
                       i2l1239 01B2                         i2l1169 0848                         i2l1193 0594  
                       i2l1185 04E2                         i2l1177 0458                         i2l1281 034E  
                       i2l1273 02FE                         i2l1265 02AE                         i2l1257 025E  
                       i2l1249 020E                         i2l1187 04FC                         i2l1179 0486  
                       i2l1195 059E                         i2l1291 0390                         i2l1283 035A  
                       i2l1275 031A                         i2l1267 02CA                         i2l1259 027A  
                       i2l1197 05CC                         i2l1189 053E                         i2l1293 0396  
                       i2l1285 0360                         i2l1277 0326                         i2l1269 02D6  
                       i2l1199 05E6                         i2l1295 03A8                         i2l1287 0372  
                       i2l1279 0342                         i2l1297 03B4                         i2l1289 037E  
                       i2l1299 03C6                         _TMR3ON 007D88                         i2u1_40 08FA  
                       i2u1_41 08F6                         _Hi_ISR 0008                 __CFG_XINST$OFF 000000  
          __size_of_UART_Write 001E                         ___wmul 089A                      ??___awdiv 001F  
               __CFG_STVREN$ON 000000                ADC_Read@channel 001B                ADC_Read@digital 001F  
                       clear_0 093E               ___awdiv@quotient 0021                      ?_ADC_Read 001B  
             __end_of_tmr_init 0980  __size_of_INTERRUPT_Initialize 0008             __size_of_ccp2_init 0016  
                   __accesstop 0080        __end_of__initialization 0944                  ___rparam_used 000001  
                __end_of_Mode2 0976                 __pcstackCOMRAM 001B                     ??_ADC_Read 001D  
                      ??_Mode2 0030                        ?_Hi_ISR 001B                        ?___wmul 0023  
            __end_of_ccp2_init 0964                      ?_adc_init 001B                        _LEDInit 0904  
                 ??_UART_Write 001B                        i2u30_40 07AC                        i2u30_41 07A8  
                      i2u31_40 07D0                        i2u31_41 07CC                        i2u32_40 0802  
                      i2u40_40 018A                        i2u32_41 07FE                        i2u40_41 0186  
                      i2u33_40 0844                        i2u41_40 01B2                        i2u33_41 0840  
                      i2u41_41 01AE                        i2u34_40 0486                        i2u50_40 031A  
                      i2u42_40 01DA                        i2u34_41 0482                        i2u50_41 0316  
                      i2u42_41 01D6                        i2u27_40 0742                        i2u35_40 05CC  
                      i2u51_40 0342                        i2u43_40 0202                        i2u27_41 073E  
                      i2u35_41 05C8                        i2u51_41 033E                        i2u43_41 01FE  
                      i2u28_40 0760                        i2u36_40 06B6                        i2u44_40 022A  
                      i2u28_41 075C                        i2u36_41 06B2                        i2u44_41 0226  
                      i2u29_40 078A                        i2u45_40 0252                        i2u37_40 002A  
                      i2u29_41 0786                        i2u45_41 024E                        i2u37_41 0026  
                      i2u46_40 027A                        i2u38_40 0040                        i2u46_41 0276  
                      i2u38_41 003C                        i2u47_40 02A2                        i2u39_40 0162  
                      i2u47_41 029E                        i2u39_41 015E                        i2u48_40 02CA  
                      i2u48_41 02C6                        i2u49_40 02F2                        i2u49_41 02EE  
                ?_PrintDigital 0029                __size_of_Hi_ISR 0448                        __Hparam 0000  
                      __Lparam 0000                        ___awdiv 0730                __size_of___wmul 002A  
           __end_of_UART_Write 0904                      ?_tmr_init 001B                        __pcinit 0938  
                      __ramtop 0600                     ??_adc_init 0030                        __ptext0 0920  
                      __ptext1 08C4                        __ptext2 0964                        __ptext3 0976  
                      __ptext4 094E                        __ptext5 086C                        __ptext6 0904  
                      __ptext7 0980                        __ptext9 0450                      _T3CONbits 000FB1  
     __size_of_UART_Initialize 0022                 __pintcode_body 0012           end_of_initialization 0944  
               ??_PrintDigital 002B                        int_func 0012               PrintDigital@temp 002C  
                    _RCSTAbits 000FAB                        postinc0 000FEE                     ??_tmr_init 0030  
               UART_Write@data 001B                      _TRISCbits 000F94                      _TRISDbits 000F95  
                    _TRISEbits 000F96              __size_of_ADC_Read 0050                      _TXSTAbits 000FAC  
               __end_of_Hi_ISR 0450   __end_of_INTERRUPT_Initialize 0988                 __end_of___wmul 08C4  
                  _BAUDCONbits 000FB8            start_initialization 0938              ??_UART_Initialize 0030  
             __CFG_OSC$INTIO67 000000                       ??_Hi_ISR 002E                       ??___wmul 0027  
             __CFG_LPT1OSC$OFF 000000           __end_of_PrintDigital 0730                       ?_LEDInit 001B  
            __size_of_adc_init 002E                    __pbssCOMRAM 0001                      _ccp2_init 094E  
          PrintDigital@digital 0029              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
                     ?___awdiv 001B                  PrintDigital@c 002B              __size_of_tmr_init 000A  
                     _ADC_Read 081C                     ?_ccp2_init 001B                 __size_of_Mode2 0012  
         _INTERRUPT_Initialize 0980                 ___wmul@product 0027                       _LATCbits 000F8B  
                     _LATDbits 000F8C                       _IPR1bits 000F9F                       _PIE1bits 000F9D  
                     _PIR1bits 000F9E                       _PIR2bits 000FA1                       _RCONbits 000FD0  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0023               __size_of_LEDInit 001C          ?_INTERRUPT_Initialize 001B  
                     __Hrparam 0000                       __Lrparam 0000             __CFG_BOREN$SBORDIS 000000  
        __size_of_PrintDigital 02E0               __size_of___awdiv 00EC                       _adc_init 086C  
              _UART_Initialize 08C4                    ??_ccp2_init 0030                       __ptext10 089A  
                     __ptext11 0730                       __ptext12 08E6                       __ptext13 081C  
                 _PrintDigital 0450                  __size_of_main 0018                       int$flags 0030  
                     _tmr_init 0976                     _INTCONbits 000FF2         ??_INTERRUPT_Initialize 0030  
                     intlevel2 0000        __end_of_UART_Initialize 08E6                     _UART_Write 08E6  
