

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Dec 30 11:31:24 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_ClearBuffer
   384                           	FNCALL	_main,_INTERRUPT_Initialize
   385                           	FNCALL	_main,_LEDInit
   386                           	FNCALL	_main,_Mode2
   387                           	FNCALL	_main,_UART_Initialize
   388                           	FNCALL	_Mode2,_ClearBuffer
   389                           	FNCALL	_Mode2,_adc_init
   390                           	FNCALL	_Mode2,_ccp2_init
   391                           	FNCALL	_Mode2,_tmr_init
   392                           	FNROOT	_main
   393                           	FNCALL	_Lo_ISR,_MyusartRead
   394                           	FNCALL	_MyusartRead,_UART_Write
   395                           	FNCALL	_MyusartRead,___awmod
   396                           	FNCALL	intlevel1,_Lo_ISR
   397                           	global	intlevel1
   398                           	FNROOT	intlevel1
   399                           	FNCALL	_Hi_ISR,_ADC_Read
   400                           	FNCALL	_Hi_ISR,_PrintDigital
   401                           	FNCALL	_Hi_ISR,i2_UART_Write
   402                           	FNCALL	_PrintDigital,___awdiv
   403                           	FNCALL	_PrintDigital,___wmul
   404                           	FNCALL	_PrintDigital,i2_UART_Write
   405                           	FNCALL	_PrintDigital,i2___awmod
   406                           	FNCALL	intlevel2,_Hi_ISR
   407                           	global	intlevel2
   408                           	FNROOT	intlevel2
   409                           	global	_data
   410                           	global	_lenStr
   411                           	global	_mystring
   412                           	global	_TMR3
   413                           _TMR3	set	0xFB2
   414  0000                     	global	_CCPR2
   415                           _CCPR2	set	0xFBB
   416  0000                     	global	_TRISDbits
   417                           _TRISDbits	set	0xF95
   418  0000                     	global	_RCREG
   419                           _RCREG	set	0xFAE
   420  0000                     	global	_TXREG
   421                           _TXREG	set	0xFAD
   422  0000                     	global	_IPR1bits
   423                           _IPR1bits	set	0xF9F
   424  0000                     	global	_PIE1bits
   425                           _PIE1bits	set	0xF9D
   426  0000                     	global	_RCSTAbits
   427                           _RCSTAbits	set	0xFAB
   428  0000                     	global	_SPBRG
   429                           _SPBRG	set	0xFAF
   430  0000                     	global	_BAUDCONbits
   431                           _BAUDCONbits	set	0xFB8
   432  0000                     	global	_TXSTAbits
   433                           _TXSTAbits	set	0xFAC
   434  0000                     	global	_TRISCbits
   435                           _TRISCbits	set	0xF94
   436  0000                     	global	_INTCONbits
   437                           _INTCONbits	set	0xFF2
   438  0000                     	global	_RCONbits
   439                           _RCONbits	set	0xFD0
   440  0000                     	global	_T3CONbits
   441                           _T3CONbits	set	0xFB1
   442  0000                     	global	_ADRESL
   443                           _ADRESL	set	0xFC3
   444  0000                     	global	_ADRESH
   445                           _ADRESH	set	0xFC4
   446  0000                     	global	_TRISA
   447                           _TRISA	set	0xF92
   448  0000                     	global	_ADCON2bits
   449                           _ADCON2bits	set	0xFC0
   450  0000                     	global	_TRISEbits
   451                           _TRISEbits	set	0xF96
   452  0000                     	global	_ADCON1bits
   453                           _ADCON1bits	set	0xFC1
   454  0000                     	global	_LATDbits
   455                           _LATDbits	set	0xF8C
   456  0000                     	global	_PIR2bits
   457                           _PIR2bits	set	0xFA1
   458  0000                     	global	_ADCON0bits
   459                           _ADCON0bits	set	0xFC2
   460  0000                     	global	_PIR1bits
   461                           _PIR1bits	set	0xF9E
   462  0000                     	global	_TRISD
   463                           _TRISD	set	0xF95
   464  0000                     	global	_CREN
   465                           _CREN	set	0x7D5C
   466  0000                     	global	_RCIF
   467                           _RCIF	set	0x7CF5
   468  0000                     	global	_TMR3ON
   469                           _TMR3ON	set	0x7D88
   470  0000                     	global	_T3CCP2
   471                           _T3CCP2	set	0x7D8E
   472  0000                     	global	_T3CCP1
   473                           _T3CCP1	set	0x7D8B
   474  0000                     	global	_CCP2IP
   475                           _CCP2IP	set	0x7D10
   476  0000                     	global	_CCP2IE
   477                           _CCP2IE	set	0x7D00
   478  0000                     	global	_CCP2M0
   479                           _CCP2M0	set	0x7DD0
   480  0000                     	global	_CCP2M1
   481                           _CCP2M1	set	0x7DD1
   482  0000                     	global	_CCP2M2
   483                           _CCP2M2	set	0x7DD2
   484  0000                     	global	_CCP2M3
   485                           _CCP2M3	set	0x7DD3
   486  0000                     	global	_ADFM
   487                           _ADFM	set	0x7E07
   488  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   489                           global __psmallconst
   490                           __psmallconst:
   491  000600                     	db	0
   492  000600  00                 	
   493                           STR_1:
   494  000601                     	db	10
   495  000601  0A                 	db	72	;'H'
   496  000602  48                 	db	101	;'e'
   497  000603  65                 	db	108	;'l'
   498  000604  6C                 	db	108	;'l'
   499  000605  6C                 	db	111	;'o'
   500  000606  6F                 	db	32
   501  000607  20                 	db	87	;'W'
   502  000608  57                 	db	111	;'o'
   503  000609  6F                 	db	114	;'r'
   504  00060A  72                 	db	108	;'l'
   505  00060B  6C                 	db	100	;'d'
   506  00060C  64                 	db	10
   507  00060D  0A                 	db	0
   508  00060E  00                 	
   509                           STR_2:
   510  00060F                     	db	46
   511  00060F  2E                 	db	0
   512  000610  00                 ; #config settings
   513                           global __CFG_OSC$INTIO67
   514                           __CFG_OSC$INTIO67 equ 0x0
   515  0000                     global __CFG_FCMEN$OFF
   516                           __CFG_FCMEN$OFF equ 0x0
   517  0000                     global __CFG_IESO$ON
   518                           __CFG_IESO$ON equ 0x0
   519  0000                     global __CFG_PWRT$OFF
   520                           __CFG_PWRT$OFF equ 0x0
   521  0000                     global __CFG_BOREN$SBORDIS
   522                           __CFG_BOREN$SBORDIS equ 0x0
   523  0000                     global __CFG_BORV$3
   524                           __CFG_BORV$3 equ 0x0
   525  0000                     global __CFG_WDT$OFF
   526                           __CFG_WDT$OFF equ 0x0
   527  0000                     global __CFG_WDTPS$1
   528                           __CFG_WDTPS$1 equ 0x0
   529  0000                     global __CFG_CCP2MX$PORTC
   530                           __CFG_CCP2MX$PORTC equ 0x0
   531  0000                     global __CFG_PBADEN$ON
   532                           __CFG_PBADEN$ON equ 0x0
   533  0000                     global __CFG_LPT1OSC$OFF
   534                           __CFG_LPT1OSC$OFF equ 0x0
   535  0000                     global __CFG_MCLRE$ON
   536                           __CFG_MCLRE$ON equ 0x0
   537  0000                     global __CFG_STVREN$ON
   538                           __CFG_STVREN$ON equ 0x0
   539  0000                     global __CFG_LVP$OFF
   540                           __CFG_LVP$OFF equ 0x0
   541  0000                     global __CFG_XINST$OFF
   542                           __CFG_XINST$OFF equ 0x0
   543  0000                     global __CFG_CP0$OFF
   544                           __CFG_CP0$OFF equ 0x0
   545  0000                     global __CFG_CP1$OFF
   546                           __CFG_CP1$OFF equ 0x0
   547  0000                     global __CFG_CP2$OFF
   548                           __CFG_CP2$OFF equ 0x0
   549  0000                     global __CFG_CP3$OFF
   550                           __CFG_CP3$OFF equ 0x0
   551  0000                     global __CFG_CPB$OFF
   552                           __CFG_CPB$OFF equ 0x0
   553  0000                     global __CFG_CPD$OFF
   554                           __CFG_CPD$OFF equ 0x0
   555  0000                     global __CFG_WRT0$OFF
   556                           __CFG_WRT0$OFF equ 0x0
   557  0000                     global __CFG_WRT1$OFF
   558                           __CFG_WRT1$OFF equ 0x0
   559  0000                     global __CFG_WRT2$OFF
   560                           __CFG_WRT2$OFF equ 0x0
   561  0000                     global __CFG_WRT3$OFF
   562                           __CFG_WRT3$OFF equ 0x0
   563  0000                     global __CFG_WRTC$OFF
   564                           __CFG_WRTC$OFF equ 0x0
   565  0000                     global __CFG_WRTB$OFF
   566                           __CFG_WRTB$OFF equ 0x0
   567  0000                     global __CFG_WRTD$OFF
   568                           __CFG_WRTD$OFF equ 0x0
   569  0000                     global __CFG_EBTR0$OFF
   570                           __CFG_EBTR0$OFF equ 0x0
   571  0000                     global __CFG_EBTR1$OFF
   572                           __CFG_EBTR1$OFF equ 0x0
   573  0000                     global __CFG_EBTR2$OFF
   574                           __CFG_EBTR2$OFF equ 0x0
   575  0000                     global __CFG_EBTR3$OFF
   576                           __CFG_EBTR3$OFF equ 0x0
   577  0000                     global __CFG_EBTRB$OFF
   578                           __CFG_EBTRB$OFF equ 0x0
   579  0000                     	file	"C:\Users\febri\AppData\Local\Temp\sphk."
   580                           	line	#
   581                           psect	cinit,class=CODE,delta=1,reloc=2
   582                           global __pcinit
   583                           __pcinit:
   584  0011B0                     global start_initialization
   585                           start_initialization:
   586  0011B0                     
   587                           global __initialization
   588                           __initialization:
   589  0011B0                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   590                           global __pbssCOMRAM
   591                           __pbssCOMRAM:
   592  000001                     	global	_data
   593                           _data:
   594  000001                            ds      26
   595  000001                     	global	_str
   596                           	global	_str
   597                           _str:
   598  00001B                            ds      10
   599  00001B                     	global	_lenStr
   600                           _lenStr:
   601  000025                            ds      2
   602  000025                     	global	_mystring
   603                           _mystring:
   604  000027                            ds      10
   605  000027                     	file	"C:\Users\febri\AppData\Local\Temp\sphk."
   606                           	line	#
   607                           psect	cinit
   608                           ; Clear objects allocated to COMRAM (48 bytes)
   609                           	global __pbssCOMRAM
   610                           lfsr	0,__pbssCOMRAM
   611  0011B0  EE00  F001         movlw	48
   612  0011B4  0E30               clear_0:
   613  0011B6                     clrf	postinc0,c
   614  0011B6  6AEE               decf	wreg
   615  0011B8  06E8               bnz	clear_0
   616  0011BA  E1FD               psect cinit,class=CODE,delta=1
   617                           global end_of_initialization,__end_of__initialization
   618                           
   619                           ;End of C runtime variable initialization code
   620                           
   621                           end_of_initialization:
   622  0011BC                     __end_of__initialization:
   623  0011BC                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   624  0011BC  9054               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   625  0011BE  9254               	GLOBAL	__Lsmallconst
   626                           	movlw	low highword(__Lsmallconst)
   627  0011C0  0E00               	movwf	tblptru
   628  0011C2  6EF8               	movlw	high(__Lsmallconst)
   629  0011C4  0E06               	movwf	tblptrh
   630  0011C6  6EF7               movlb 0
   631  0011C8  0100               goto _main	;jump to C main() function
   632  0011CA  EF05  F009         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   633                           global __pcstackCOMRAM
   634                           __pcstackCOMRAM:
   635  000031                     ?_ClearBuffer:	; 1 bytes @ 0x0
   636  000031                     ?_adc_init:	; 1 bytes @ 0x0
   637  000031                     ?_ccp2_init:	; 1 bytes @ 0x0
   638  000031                     ?_tmr_init:	; 1 bytes @ 0x0
   639  000031                     ?_UART_Write:	; 1 bytes @ 0x0
   640  000031                     ?_INTERRUPT_Initialize:	; 1 bytes @ 0x0
   641  000031                     ?_UART_Initialize:	; 1 bytes @ 0x0
   642  000031                     ?_LEDInit:	; 1 bytes @ 0x0
   643  000031                     ?_Mode2:	; 1 bytes @ 0x0
   644  000031                     ?_main:	; 1 bytes @ 0x0
   645  000031                     ?_Hi_ISR:	; 1 bytes @ 0x0
   646  000031                     ?_MyusartRead:	; 1 bytes @ 0x0
   647  000031                     ?_Lo_ISR:	; 1 bytes @ 0x0
   648  000031                     ?i2_UART_Write:	; 1 bytes @ 0x0
   649  000031                     ??i2_UART_Write:	; 1 bytes @ 0x0
   650  000031                     	global	?_ADC_Read
   651                           ?_ADC_Read:	; 2 bytes @ 0x0
   652  000031                     	global	?___awdiv
   653                           ?___awdiv:	; 2 bytes @ 0x0
   654  000031                     	global	?i2___awmod
   655                           ?i2___awmod:	; 2 bytes @ 0x0
   656  000031                     	global	i2UART_Write@data
   657                           i2UART_Write@data:	; 1 bytes @ 0x0
   658  000031                     	global	ADC_Read@channel
   659                           ADC_Read@channel:	; 2 bytes @ 0x0
   660  000031                     	global	___awdiv@dividend
   661                           ___awdiv@dividend:	; 2 bytes @ 0x0
   662  000031                     	global	i2___awmod@dividend
   663                           i2___awmod@dividend:	; 2 bytes @ 0x0
   664  000031                     	ds   2
   665  000031                     ??_ADC_Read:	; 1 bytes @ 0x2
   666  000033                     	global	___awdiv@divisor
   667                           ___awdiv@divisor:	; 2 bytes @ 0x2
   668  000033                     	global	i2___awmod@divisor
   669                           i2___awmod@divisor:	; 2 bytes @ 0x2
   670  000033                     	ds   2
   671  000033                     ??___awdiv:	; 1 bytes @ 0x4
   672  000035                     ??i2___awmod:	; 1 bytes @ 0x4
   673  000035                     	global	___awdiv@counter
   674                           ___awdiv@counter:	; 1 bytes @ 0x4
   675  000035                     	global	i2___awmod@counter
   676                           i2___awmod@counter:	; 1 bytes @ 0x4
   677  000035                     	global	ADC_Read@digital
   678                           ADC_Read@digital:	; 2 bytes @ 0x4
   679  000035                     	ds   1
   680  000035                     	global	___awdiv@sign
   681                           ___awdiv@sign:	; 1 bytes @ 0x5
   682  000036                     	global	i2___awmod@sign
   683                           i2___awmod@sign:	; 1 bytes @ 0x5
   684  000036                     	ds   1
   685  000036                     	global	___awdiv@quotient
   686                           ___awdiv@quotient:	; 2 bytes @ 0x6
   687  000037                     	ds   2
   688  000037                     	global	?___wmul
   689                           ?___wmul:	; 2 bytes @ 0x8
   690  000039                     	global	___wmul@multiplier
   691                           ___wmul@multiplier:	; 2 bytes @ 0x8
   692  000039                     	ds   2
   693  000039                     	global	___wmul@multiplicand
   694                           ___wmul@multiplicand:	; 2 bytes @ 0xA
   695  00003B                     	ds   2
   696  00003B                     ??___wmul:	; 1 bytes @ 0xC
   697  00003D                     	global	___wmul@product
   698                           ___wmul@product:	; 2 bytes @ 0xC
   699  00003D                     	ds   2
   700  00003D                     ?_PrintDigital:	; 1 bytes @ 0xE
   701  00003F                     	global	PrintDigital@digital
   702                           PrintDigital@digital:	; 2 bytes @ 0xE
   703  00003F                     	ds   2
   704  00003F                     ??_PrintDigital:	; 1 bytes @ 0x10
   705  000041                     	global	PrintDigital@temp
   706                           PrintDigital@temp:	; 2 bytes @ 0x10
   707  000041                     	ds   2
   708  000041                     ??_Hi_ISR:	; 1 bytes @ 0x12
   709  000043                     	ds   4
   710  000043                     ??_UART_Write:	; 1 bytes @ 0x16
   711  000047                     	global	?___awmod
   712                           ?___awmod:	; 2 bytes @ 0x16
   713  000047                     	global	UART_Write@data
   714                           UART_Write@data:	; 1 bytes @ 0x16
   715  000047                     	global	___awmod@dividend
   716                           ___awmod@dividend:	; 2 bytes @ 0x16
   717  000047                     	ds   2
   718  000047                     	global	___awmod@divisor
   719                           ___awmod@divisor:	; 2 bytes @ 0x18
   720  000049                     	ds   2
   721  000049                     ??___awmod:	; 1 bytes @ 0x1A
   722  00004B                     	global	___awmod@counter
   723                           ___awmod@counter:	; 1 bytes @ 0x1A
   724  00004B                     	ds   1
   725  00004B                     	global	___awmod@sign
   726                           ___awmod@sign:	; 1 bytes @ 0x1B
   727  00004C                     	ds   1
   728  00004C                     ??_MyusartRead:	; 1 bytes @ 0x1C
   729  00004D                     ??_Lo_ISR:	; 1 bytes @ 0x1C
   730  00004D                     	ds   5
   731  00004D                     ??_ClearBuffer:	; 1 bytes @ 0x21
   732  000052                     ??_adc_init:	; 1 bytes @ 0x21
   733  000052                     ??_ccp2_init:	; 1 bytes @ 0x21
   734  000052                     ??_tmr_init:	; 1 bytes @ 0x21
   735  000052                     ??_INTERRUPT_Initialize:	; 1 bytes @ 0x21
   736  000052                     ??_UART_Initialize:	; 1 bytes @ 0x21
   737  000052                     ??_LEDInit:	; 1 bytes @ 0x21
   738  000052                     	global	ClearBuffer@i
   739                           ClearBuffer@i:	; 2 bytes @ 0x21
   740  000052                     	ds   2
   741  000052                     ??_Mode2:	; 1 bytes @ 0x23
   742  000054                     ??_main:	; 1 bytes @ 0x23
   743  000054                     ;!
   744                           ;!Data Sizes:
   745                           ;!    Strings     16
   746                           ;!    Constant    0
   747                           ;!    Data        0
   748                           ;!    BSS         48
   749                           ;!    Persistent  0
   750                           ;!    Stack       0
   751                           ;!
   752                           ;!Auto Spaces:
   753                           ;!    Space          Size  Autos    Used
   754                           ;!    COMRAM          126     35      83
   755                           ;!    BANK0           128      0       0
   756                           ;!    BANK1           256      0       0
   757                           ;!    BANK2           256      0       0
   758                           ;!    BANK3           256      0       0
   759                           ;!    BANK4           256      0       0
   760                           ;!    BANK5           256      0       0
   761                           
   762                           ;!
   763                           ;!Pointer List with Targets:
   764                           ;!
   765                           ;!    sp__strchr	PTR unsigned char  size(2) Largest target is 10
   766                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
   767                           ;!
   768                           ;!    sp__strstr	PTR unsigned char  size(2) Largest target is 10
   769                           ;!		 -> NULL(NULL[0]), mystring(COMRAM[10]), 
   770                           ;!
   771                           
   772                           
   773                           ;!
   774                           ;!Critical Paths under _main in COMRAM
   775                           ;!
   776                           ;!    _main->_ClearBuffer
   777                           ;!    _Mode2->_ClearBuffer
   778                           ;!
   779                           ;!Critical Paths under _Lo_ISR in COMRAM
   780                           ;!
   781                           ;!    _MyusartRead->___awmod
   782                           ;!
   783                           ;!Critical Paths under _Hi_ISR in COMRAM
   784                           ;!
   785                           ;!    _Hi_ISR->_PrintDigital
   786                           ;!    _PrintDigital->___wmul
   787                           ;!    ___wmul->___awdiv
   788                           ;!
   789                           ;!Critical Paths under _main in BANK0
   790                           ;!
   791                           ;!    None.
   792                           ;!
   793                           ;!Critical Paths under _Lo_ISR in BANK0
   794                           ;!
   795                           ;!    None.
   796                           ;!
   797                           ;!Critical Paths under _Hi_ISR in BANK0
   798                           ;!
   799                           ;!    None.
   800                           ;!
   801                           ;!Critical Paths under _main in BANK1
   802                           ;!
   803                           ;!    None.
   804                           ;!
   805                           ;!Critical Paths under _Lo_ISR in BANK1
   806                           ;!
   807                           ;!    None.
   808                           ;!
   809                           ;!Critical Paths under _Hi_ISR in BANK1
   810                           ;!
   811                           ;!    None.
   812                           ;!
   813                           ;!Critical Paths under _main in BANK2
   814                           ;!
   815                           ;!    None.
   816                           ;!
   817                           ;!Critical Paths under _Lo_ISR in BANK2
   818                           ;!
   819                           ;!    None.
   820                           ;!
   821                           ;!Critical Paths under _Hi_ISR in BANK2
   822                           ;!
   823                           ;!    None.
   824                           ;!
   825                           ;!Critical Paths under _main in BANK3
   826                           ;!
   827                           ;!    None.
   828                           ;!
   829                           ;!Critical Paths under _Lo_ISR in BANK3
   830                           ;!
   831                           ;!    None.
   832                           ;!
   833                           ;!Critical Paths under _Hi_ISR in BANK3
   834                           ;!
   835                           ;!    None.
   836                           ;!
   837                           ;!Critical Paths under _main in BANK4
   838                           ;!
   839                           ;!    None.
   840                           ;!
   841                           ;!Critical Paths under _Lo_ISR in BANK4
   842                           ;!
   843                           ;!    None.
   844                           ;!
   845                           ;!Critical Paths under _Hi_ISR in BANK4
   846                           ;!
   847                           ;!    None.
   848                           ;!
   849                           ;!Critical Paths under _main in BANK5
   850                           ;!
   851                           ;!    None.
   852                           ;!
   853                           ;!Critical Paths under _Lo_ISR in BANK5
   854                           ;!
   855                           ;!    None.
   856                           ;!
   857                           ;!Critical Paths under _Hi_ISR in BANK5
   858                           ;!
   859                           ;!    None.
   860                           
   861 ;;
   862 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   863 ;;
   864                           
   865                           ;!
   866                           ;!Call Graph Tables:
   867                           ;!
   868                           ;! ---------------------------------------------------------------------------------
   869                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   870                           ;! ---------------------------------------------------------------------------------
   871                           ;! (0) _main                                                 0     0      0      90
   872                           ;!                        _ClearBuffer
   873                           ;!               _INTERRUPT_Initialize
   874                           ;!                            _LEDInit
   875                           ;!                              _Mode2
   876                           ;!                    _UART_Initialize
   877                           ;! ---------------------------------------------------------------------------------
   878                           ;! (1) _UART_Initialize                                      0     0      0       0
   879                           ;! ---------------------------------------------------------------------------------
   880                           ;! (1) _Mode2                                                0     0      0      45
   881                           ;!                        _ClearBuffer
   882                           ;!                           _adc_init
   883                           ;!                          _ccp2_init
   884                           ;!                           _tmr_init
   885                           ;! ---------------------------------------------------------------------------------
   886                           ;! (2) _tmr_init                                             0     0      0       0
   887                           ;! ---------------------------------------------------------------------------------
   888                           ;! (2) _ccp2_init                                            0     0      0       0
   889                           ;! ---------------------------------------------------------------------------------
   890                           ;! (2) _adc_init                                             0     0      0       0
   891                           ;! ---------------------------------------------------------------------------------
   892                           ;! (2) _ClearBuffer                                          2     2      0      45
   893                           ;!                                             33 COMRAM     2     2      0
   894                           ;! ---------------------------------------------------------------------------------
   895                           ;! (1) _LEDInit                                              0     0      0       0
   896                           ;! ---------------------------------------------------------------------------------
   897                           ;! (1) _INTERRUPT_Initialize                                 0     0      0       0
   898                           ;! ---------------------------------------------------------------------------------
   899                           ;! Estimated maximum stack depth 2
   900                           ;! ---------------------------------------------------------------------------------
   901                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   902                           ;! ---------------------------------------------------------------------------------
   903                           ;! (3) _Lo_ISR                                               5     5      0    1163
   904                           ;!                                             28 COMRAM     5     5      0
   905                           ;!                        _MyusartRead
   906                           ;! ---------------------------------------------------------------------------------
   907                           ;! (4) _MyusartRead                                          0     0      0    1163
   908                           ;!                         _UART_Write
   909                           ;!                            ___awmod
   910                           ;! ---------------------------------------------------------------------------------
   911                           ;! (5) ___awmod                                              6     2      4    1148
   912                           ;!                                             22 COMRAM     6     2      4
   913                           ;! ---------------------------------------------------------------------------------
   914                           ;! (5) _UART_Write                                           1     1      0      15
   915                           ;!                                             22 COMRAM     1     1      0
   916                           ;! ---------------------------------------------------------------------------------
   917                           ;! Estimated maximum stack depth 5
   918                           ;! ---------------------------------------------------------------------------------
   919                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   920                           ;! ---------------------------------------------------------------------------------
   921                           ;! (6) _Hi_ISR                                               4     4      0    9397
   922                           ;!                                             18 COMRAM     4     4      0
   923                           ;!                           _ADC_Read
   924                           ;!                       _PrintDigital
   925                           ;!                       i2_UART_Write
   926                           ;! ---------------------------------------------------------------------------------
   927                           ;! (7) _PrintDigital                                         4     2      2    7886
   928                           ;!                                             14 COMRAM     4     2      2
   929                           ;!                            ___awdiv
   930                           ;!                             ___wmul
   931                           ;!                       i2_UART_Write
   932                           ;!                          i2___awmod
   933                           ;! ---------------------------------------------------------------------------------
   934                           ;! (8) i2___awmod                                            6     2      4     660
   935                           ;!                                              0 COMRAM     6     2      4
   936                           ;! ---------------------------------------------------------------------------------
   937                           ;! (7) i2_UART_Write                                         1     1      0      22
   938                           ;!                                              0 COMRAM     1     1      0
   939                           ;! ---------------------------------------------------------------------------------
   940                           ;! (8) ___wmul                                               6     2      4    1527
   941                           ;!                                              8 COMRAM     6     2      4
   942                           ;!                            ___awdiv (ARG)
   943                           ;! ---------------------------------------------------------------------------------
   944                           ;! (8) ___awdiv                                              8     4      4    3796
   945                           ;!                                              0 COMRAM     8     4      4
   946                           ;! ---------------------------------------------------------------------------------
   947                           ;! (7) _ADC_Read                                             6     4      2    1489
   948                           ;!                                              0 COMRAM     6     4      2
   949                           ;! ---------------------------------------------------------------------------------
   950                           ;! Estimated maximum stack depth 8
   951                           ;! ---------------------------------------------------------------------------------
   952                           ;!
   953                           ;! Call Graph Graphs:
   954                           ;!
   955                           ;! _main (ROOT)
   956                           ;!   _ClearBuffer
   957                           ;!   _INTERRUPT_Initialize
   958                           ;!   _LEDInit
   959                           ;!   _Mode2
   960                           ;!     _ClearBuffer
   961                           ;!     _adc_init
   962                           ;!     _ccp2_init
   963                           ;!     _tmr_init
   964                           ;!   _UART_Initialize
   965                           ;!
   966                           ;! _Lo_ISR (ROOT)
   967                           ;!   _MyusartRead
   968                           ;!     _UART_Write
   969                           ;!     ___awmod
   970                           ;!
   971                           ;! _Hi_ISR (ROOT)
   972                           ;!   _ADC_Read
   973                           ;!   _PrintDigital
   974                           ;!     ___awdiv
   975                           ;!     ___wmul
   976                           ;!       ___awdiv (ARG)
   977                           ;!     i2_UART_Write
   978                           ;!     i2___awmod
   979                           ;!   i2_UART_Write
   980                           ;!
   981                           
   982                           ;! Address spaces:
   983                           
   984                           ;!Name               Size   Autos  Total    Cost      Usage
   985                           ;!BIGRAM             5FF      0       0      17        0.0%
   986                           ;!EEDATA             100      0       0       0        0.0%
   987                           ;!BITBANK5           100      0       0      16        0.0%
   988                           ;!BANK5              100      0       0      14        0.0%
   989                           ;!BITBANK4           100      0       0      12        0.0%
   990                           ;!BANK4              100      0       0      13        0.0%
   991                           ;!BITBANK3           100      0       0      10        0.0%
   992                           ;!BANK3              100      0       0      11        0.0%
   993                           ;!BITBANK2           100      0       0       8        0.0%
   994                           ;!BANK2              100      0       0       9        0.0%
   995                           ;!BITBANK1           100      0       0       6        0.0%
   996                           ;!BANK1              100      0       0       7        0.0%
   997                           ;!BITBANK0            80      0       0       4        0.0%
   998                           ;!BANK0               80      0       0       5        0.0%
   999                           ;!BITCOMRAM           7E      0       0       0        0.0%
  1000                           ;!COMRAM              7E     23      53       1       65.9%
  1001                           ;!BITSFR               0      0       0     200        0.0%
  1002                           ;!SFR                  0      0       0     200        0.0%
  1003                           ;!STACK                0      0       0       2        0.0%
  1004                           ;!NULL                 0      0       0       0        0.0%
  1005                           ;!ABS                  0      0      53      15        0.0%
  1006                           ;!DATA                 0      0      53       3        0.0%
  1007                           ;!CODE                 0      0       0       0        0.0%
  1008                           
  1009                           	global	_main
  1010                           
  1011 ;; *************** function _main *****************
  1012 ;; Defined at:
  1013 ;;		line 171 in file "main.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1027 ;;      Params:         0       0       0       0       0       0       0
  1028 ;;      Locals:         0       0       0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0       0       0
  1030 ;;      Totals:         0       0       0       0       0       0       0
  1031 ;;Total ram usage:        0 bytes
  1032 ;; Hardware stack levels required when called:    8
  1033 ;; This function calls:
  1034 ;;		_ClearBuffer
  1035 ;;		_INTERRUPT_Initialize
  1036 ;;		_LEDInit
  1037 ;;		_Mode2
  1038 ;;		_UART_Initialize
  1039 ;; This function is called by:
  1040 ;;		Startup code after reset
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1044                           	file	"main.c"
  1045                           	line	171
  1046                           global __ptext0
  1047                           __ptext0:
  1048  00120A                     psect	text0
  1049                           	file	"main.c"
  1050                           	line	171
  1051                           	global	__size_of_main
  1052                           	__size_of_main	equ	__end_of_main-_main
  1053  0000                     	
  1054                           _main:
  1055  00120A                     ;incstack = 0
  1056                           	opt	stack 23
  1057                           	line	174
  1058                           	
  1059                           l1349:
  1060  00120A                     ;main.c: 174:     INTERRUPT_Initialize();
  1061                           	call	_INTERRUPT_Initialize	;wreg free
  1062  00120A  EC3C  F009         	line	175
  1063                           	
  1064                           l1351:
  1065  00120E                     ;main.c: 175:     UART_Initialize();
  1066                           	call	_UART_Initialize	;wreg free
  1067  00120E  ECC7  F008         	line	176
  1068                           	
  1069                           l1353:
  1070  001212                     ;main.c: 176:     ClearBuffer();
  1071                           	call	_ClearBuffer	;wreg free
  1072  001212  EC1A  F008         	line	177
  1073                           	
  1074                           l1355:
  1075  001216                     ;main.c: 177:     LEDInit();
  1076                           	call	_LEDInit	;wreg free
  1077  001216  EC13  F009         	line	178
  1078                           	
  1079                           l1357:
  1080  00121A                     ;main.c: 178:     Mode2();
  1081                           	call	_Mode2	;wreg free
  1082  00121A  EC21  F009         	line	180
  1083                           ;main.c: 180:     while(1) {
  1084                           	
  1085                           l136:
  1086  00121E                     	line	193
  1087                           ;main.c: 193:     }
  1088                           	
  1089                           l137:
  1090  00121E                     	goto	l136
  1091  00121E  EF0F  F009         	
  1092                           l138:
  1093  001222                     	line	196
  1094                           ;main.c: 194:     return;
  1095                           	
  1096                           l139:
  1097  001222                     	global	start
  1098                           	goto	start
  1099  001222  EF3C  F000         	opt stack 0
  1100                           GLOBAL	__end_of_main
  1101                           	__end_of_main:
  1102  001226                     	signat	_main,89
  1103                           	global	_UART_Initialize
  1104                           
  1105 ;; *************** function _UART_Initialize *****************
  1106 ;; Defined at:
  1107 ;;		line 475 in file "main.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1121 ;;      Params:         0       0       0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0
  1124 ;;      Totals:         0       0       0       0       0       0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    6
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1135                           	line	475
  1136                           global __ptext1
  1137                           __ptext1:
  1138  00118E                     psect	text1
  1139                           	file	"main.c"
  1140                           	line	475
  1141                           	global	__size_of_UART_Initialize
  1142                           	__size_of_UART_Initialize	equ	__end_of_UART_Initialize-_UART_Initialize
  1143  0000                     	
  1144                           _UART_Initialize:
  1145  00118E                     ;incstack = 0
  1146                           	opt	stack 24
  1147                           	line	478
  1148                           	
  1149                           l1199:
  1150  00118E                     ;main.c: 478:     TRISCbits.TRISC6 = 1;
  1151                           	bsf	((c:3988)),c,6	;volatile
  1152  00118E  8C94               	line	479
  1153                           ;main.c: 479:     TRISCbits.TRISC7 = 1;
  1154                           	bsf	((c:3988)),c,7	;volatile
  1155  001190  8E94               	line	490
  1156                           ;main.c: 490:     TXSTAbits.SYNC = 0;
  1157                           	bcf	((c:4012)),c,4	;volatile
  1158  001192  98AC               	line	491
  1159                           ;main.c: 491:     BAUDCONbits.BRG16 = 0 ;
  1160                           	bcf	((c:4024)),c,3	;volatile
  1161  001194  96B8               	line	492
  1162                           ;main.c: 492:     TXSTAbits.BRGH = 1;
  1163                           	bsf	((c:4012)),c,2	;volatile
  1164  001196  84AC               	line	493
  1165                           	
  1166                           l1201:
  1167  001198                     ;main.c: 493:     SPBRG = 51;
  1168                           	movlw	low(033h)
  1169  001198  0E33               	movwf	((c:4015)),c	;volatile
  1170  00119A  6EAF               	line	497
  1171                           	
  1172                           l1203:
  1173  00119C                     ;main.c: 497:     RCSTAbits.SPEN = 1;
  1174                           	bsf	((c:4011)),c,7	;volatile
  1175  00119C  8EAB               	line	498
  1176                           	
  1177                           l1205:
  1178  00119E                     ;main.c: 498:     PIR1bits.TXIF = 1;
  1179                           	bsf	((c:3998)),c,4	;volatile
  1180  00119E  889E               	line	499
  1181                           	
  1182                           l1207:
  1183  0011A0                     ;main.c: 499:     PIR1bits.RCIF = 0;
  1184                           	bcf	((c:3998)),c,5	;volatile
  1185  0011A0  9A9E               	line	500
  1186                           	
  1187                           l1209:
  1188  0011A2                     ;main.c: 500:     TXSTAbits.TXEN = 1;
  1189                           	bsf	((c:4012)),c,5	;volatile
  1190  0011A2  8AAC               	line	501
  1191                           	
  1192                           l1211:
  1193  0011A4                     ;main.c: 501:     RCSTAbits.CREN = 1;
  1194                           	bsf	((c:4011)),c,4	;volatile
  1195  0011A4  88AB               	line	503
  1196                           	
  1197                           l1213:
  1198  0011A6                     ;main.c: 503:     PIE1bits.TXIE = 0;
  1199                           	bcf	((c:3997)),c,4	;volatile
  1200  0011A6  989D               	line	504
  1201                           	
  1202                           l1215:
  1203  0011A8                     ;main.c: 504:     IPR1bits.TXIP = 0;
  1204                           	bcf	((c:3999)),c,4	;volatile
  1205  0011A8  989F               	line	505
  1206                           	
  1207                           l1217:
  1208  0011AA                     ;main.c: 505:     PIE1bits.RCIE = 1;
  1209                           	bsf	((c:3997)),c,5	;volatile
  1210  0011AA  8A9D               	line	506
  1211                           	
  1212                           l1219:
  1213  0011AC                     ;main.c: 506:     IPR1bits.RCIP = 0;
  1214                           	bcf	((c:3999)),c,5	;volatile
  1215  0011AC  9A9F               	line	507
  1216                           	
  1217                           l190:
  1218  0011AE                     	return	;funcret
  1219  0011AE  0012               	opt stack 0
  1220                           GLOBAL	__end_of_UART_Initialize
  1221                           	__end_of_UART_Initialize:
  1222  0011B0                     	signat	_UART_Initialize,89
  1223                           	global	_Mode2
  1224                           
  1225 ;; *************** function _Mode2 *****************
  1226 ;; Defined at:
  1227 ;;		line 102 in file "main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1241 ;;      Params:         0       0       0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0
  1244 ;;      Totals:         0       0       0       0       0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    7
  1248 ;; This function calls:
  1249 ;;		_ClearBuffer
  1250 ;;		_adc_init
  1251 ;;		_ccp2_init
  1252 ;;		_tmr_init
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1258                           	line	102
  1259                           global __ptext2
  1260                           __ptext2:
  1261  001242                     psect	text2
  1262                           	file	"main.c"
  1263                           	line	102
  1264                           	global	__size_of_Mode2
  1265                           	__size_of_Mode2	equ	__end_of_Mode2-_Mode2
  1266  0000                     	
  1267                           _Mode2:
  1268  001242                     ;incstack = 0
  1269                           	opt	stack 23
  1270                           	line	103
  1271                           	
  1272                           l1101:
  1273  001242                     ;main.c: 103:     TRISD = 0;
  1274                           	movlw	low(0)
  1275  001242  0E00               	movwf	((c:3989)),c	;volatile
  1276  001244  6E95               	line	104
  1277                           	
  1278                           l1103:
  1279  001246                     ;main.c: 104:     ClearBuffer();
  1280                           	call	_ClearBuffer	;wreg free
  1281  001246  EC1A  F008         	line	105
  1282                           	
  1283                           l1105:
  1284  00124A                     ;main.c: 105:     adc_init();
  1285                           	call	_adc_init	;wreg free
  1286  00124A  EC9B  F008         	line	106
  1287                           	
  1288                           l1107:
  1289  00124E                     ;main.c: 106:     ccp2_init();
  1290                           	call	_ccp2_init	;wreg free
  1291  00124E  EC2C  F009         	line	107
  1292                           	
  1293                           l1109:
  1294  001252                     ;main.c: 107:     tmr_init();
  1295                           	call	_tmr_init	;wreg free
  1296  001252  EC37  F009         	line	108
  1297                           	
  1298                           l120:
  1299  001256                     	return	;funcret
  1300  001256  0012               	opt stack 0
  1301                           GLOBAL	__end_of_Mode2
  1302                           	__end_of_Mode2:
  1303  001258                     	signat	_Mode2,89
  1304                           	global	_tmr_init
  1305                           
  1306 ;; *************** function _tmr_init *****************
  1307 ;; Defined at:
  1308 ;;		line 457 in file "main.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		None
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1322 ;;      Params:         0       0       0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0
  1325 ;;      Totals:         0       0       0       0       0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; Hardware stack levels required when called:    6
  1329 ;; This function calls:
  1330 ;;		Nothing
  1331 ;; This function is called by:
  1332 ;;		_Mode2
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1336                           	line	457
  1337                           global __ptext3
  1338                           __ptext3:
  1339  00126E                     psect	text3
  1340                           	file	"main.c"
  1341                           	line	457
  1342                           	global	__size_of_tmr_init
  1343                           	__size_of_tmr_init	equ	__end_of_tmr_init-_tmr_init
  1344  0000                     	
  1345                           _tmr_init:
  1346  00126E                     ;incstack = 0
  1347                           	opt	stack 23
  1348                           	line	459
  1349                           	
  1350                           l969:
  1351  00126E                     ;main.c: 459:     T3CCP1 = 1;
  1352                           	bsf	c:(32139/8),(32139)&7	;volatile
  1353  00126E  86B1               	line	460
  1354                           ;main.c: 460:     T3CCP2 = 0;
  1355                           	bcf	c:(32142/8),(32142)&7	;volatile
  1356  001270  9CB1               	line	461
  1357                           ;main.c: 461:     TMR3ON = 1;
  1358                           	bsf	c:(32136/8),(32136)&7	;volatile
  1359  001272  80B1               	line	462
  1360                           ;main.c: 462:     T3CONbits.RD16 = 1;
  1361                           	bsf	((c:4017)),c,7	;volatile
  1362  001274  8EB1               	line	466
  1363                           	
  1364                           l184:
  1365  001276                     	return	;funcret
  1366  001276  0012               	opt stack 0
  1367                           GLOBAL	__end_of_tmr_init
  1368                           	__end_of_tmr_init:
  1369  001278                     	signat	_tmr_init,89
  1370                           	global	_ccp2_init
  1371                           
  1372 ;; *************** function _ccp2_init *****************
  1373 ;; Defined at:
  1374 ;;		line 443 in file "main.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1388 ;;      Params:         0       0       0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    6
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_Mode2
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1402                           	line	443
  1403                           global __ptext4
  1404                           __ptext4:
  1405  001258                     psect	text4
  1406                           	file	"main.c"
  1407                           	line	443
  1408                           	global	__size_of_ccp2_init
  1409                           	__size_of_ccp2_init	equ	__end_of_ccp2_init-_ccp2_init
  1410  0000                     	
  1411                           _ccp2_init:
  1412  001258                     ;incstack = 0
  1413                           	opt	stack 23
  1414                           	line	446
  1415                           	
  1416                           l965:
  1417  001258                     ;main.c: 446:     CCP2M3 = 0;
  1418                           	bcf	c:(32211/8),(32211)&7	;volatile
  1419  001258  96BA               	line	447
  1420                           ;main.c: 447:     CCP2M2 = 0;
  1421                           	bcf	c:(32210/8),(32210)&7	;volatile
  1422  00125A  94BA               	line	448
  1423                           ;main.c: 448:     CCP2M1 = 1;
  1424                           	bsf	c:(32209/8),(32209)&7	;volatile
  1425  00125C  82BA               	line	449
  1426                           ;main.c: 449:     CCP2M0 = 0;
  1427                           	bcf	c:(32208/8),(32208)&7	;volatile
  1428  00125E  90BA               	line	451
  1429                           ;main.c: 451:     CCP2IE = 1;
  1430                           	bsf	c:(32000/8),(32000)&7	;volatile
  1431  001260  80A0               	line	452
  1432                           ;main.c: 452:     CCP2IP = 1;
  1433                           	bsf	c:(32016/8),(32016)&7	;volatile
  1434  001262  80A2               	line	454
  1435                           	
  1436                           l967:
  1437  001264                     ;main.c: 454:     CCPR2 = 5000;
  1438                           	movlw	high(01388h)
  1439  001264  0E13               	movwf	((c:4027+1)),c	;volatile
  1440  001266  6EBC               	movlw	low(01388h)
  1441  001268  0E88               	movwf	((c:4027)),c	;volatile
  1442  00126A  6EBB               	line	455
  1443                           	
  1444                           l181:
  1445  00126C                     	return	;funcret
  1446  00126C  0012               	opt stack 0
  1447                           GLOBAL	__end_of_ccp2_init
  1448                           	__end_of_ccp2_init:
  1449  00126E                     	signat	_ccp2_init,89
  1450                           	global	_adc_init
  1451                           
  1452 ;; *************** function _adc_init *****************
  1453 ;; Defined at:
  1454 ;;		line 402 in file "main.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1468 ;;      Params:         0       0       0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0       0       0
  1471 ;;      Totals:         0       0       0       0       0       0       0
  1472 ;;Total ram usage:        0 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    6
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_Mode2
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1482                           	line	402
  1483                           global __ptext5
  1484                           __ptext5:
  1485  001136                     psect	text5
  1486                           	file	"main.c"
  1487                           	line	402
  1488                           	global	__size_of_adc_init
  1489                           	__size_of_adc_init	equ	__end_of_adc_init-_adc_init
  1490  0000                     	
  1491                           _adc_init:
  1492  001136                     ;incstack = 0
  1493                           	opt	stack 23
  1494                           	line	403
  1495                           	
  1496                           l953:
  1497  001136                     ;main.c: 403:     ADCON1bits.VCFG1 = 0;
  1498                           	bcf	((c:4033)),c,5	;volatile
  1499  001136  9AC1               	line	404
  1500                           ;main.c: 404:     ADCON1bits.VCFG0 = 0;
  1501                           	bcf	((c:4033)),c,4	;volatile
  1502  001138  98C1               	line	405
  1503                           ;main.c: 405:     ADCON1bits.PCFG = 0;
  1504                           		
  1505                           	bcf	((c:4033)),c, 0+0	;volatile
  1506  00113A  90C1               	bcf	((c:4033)),c, 0+1	;volatile
  1507  00113C  92C1               	bcf	((c:4033)),c, 0+2	;volatile
  1508  00113E  94C1               	bcf	((c:4033)),c, 0+3	;volatile
  1509  001140  96C1               
  1510                           	line	406
  1511                           	
  1512                           l955:
  1513  001142                     ;main.c: 406:     ADCON0bits.CHS = 7;
  1514                           	movf	((c:4034)),c,w	;volatile
  1515  001142  50C2               	andlw	not (((1<<4)-1)<<2)
  1516  001144  0BC3               	iorlw	(07h & ((1<<4)-1))<<2
  1517  001146  091C               	movwf	((c:4034)),c	;volatile
  1518  001148  6EC2               	line	407
  1519                           	
  1520                           l957:
  1521  00114A                     ;main.c: 407:     TRISEbits.TRISE2 = 1;
  1522                           	bsf	((c:3990)),c,2	;volatile
  1523  00114A  8496               	line	409
  1524                           	
  1525                           l959:
  1526  00114C                     ;main.c: 409:     ADCON2bits.ADFM = 1;
  1527                           	bsf	((c:4032)),c,7	;volatile
  1528  00114C  8EC0               	line	411
  1529                           ;main.c: 411:     ADCON2bits.ACQT = 1;
  1530                           	movf	((c:4032)),c,w	;volatile
  1531  00114E  50C0               	andlw	not (((1<<3)-1)<<3)
  1532  001150  0BC7               	iorlw	(01h & ((1<<3)-1))<<3
  1533  001152  0908               	movwf	((c:4032)),c	;volatile
  1534  001154  6EC0               	line	412
  1535                           ;main.c: 412:     ADCON2bits.ADCS = 3;
  1536                           	movf	((c:4032)),c,w	;volatile
  1537  001156  50C0               	andlw	not (((1<<3)-1)<<0)
  1538  001158  0BF8               	iorlw	(03h & ((1<<3)-1))<<0
  1539  00115A  0903               	movwf	((c:4032)),c	;volatile
  1540  00115C  6EC0               	line	413
  1541                           	
  1542                           l961:
  1543  00115E                     ;main.c: 413:     ADCON0bits.ADON = 1;
  1544                           	bsf	((c:4034)),c,0	;volatile
  1545  00115E  80C2               	line	415
  1546                           	
  1547                           l963:
  1548  001160                     ;main.c: 415:     PIR1bits.ADIF = 0;
  1549                           	bcf	((c:3998)),c,6	;volatile
  1550  001160  9C9E               	line	421
  1551                           	
  1552                           l175:
  1553  001162                     	return	;funcret
  1554  001162  0012               	opt stack 0
  1555                           GLOBAL	__end_of_adc_init
  1556                           	__end_of_adc_init:
  1557  001164                     	signat	_adc_init,89
  1558                           	global	_ClearBuffer
  1559                           
  1560 ;; *************** function _ClearBuffer *****************
  1561 ;; Defined at:
  1562 ;;		line 520 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  i               2   33[COMRAM] int 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1576 ;;      Params:         0       0       0       0       0       0       0
  1577 ;;      Locals:         2       0       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0
  1579 ;;      Totals:         2       0       0       0       0       0       0
  1580 ;;Total ram usage:        2 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    6
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_Mode2
  1587 ;;		_main
  1588 ;;		_Mode1
  1589 ;;		_Mode2_2
  1590 ;;		_Mode3
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           psect	text6,class=CODE,space=0,reloc=2,group=0
  1594                           	line	520
  1595                           global __ptext6
  1596                           __ptext6:
  1597  001034                     psect	text6
  1598                           	file	"main.c"
  1599                           	line	520
  1600                           	global	__size_of_ClearBuffer
  1601                           	__size_of_ClearBuffer	equ	__end_of_ClearBuffer-_ClearBuffer
  1602  0000                     	
  1603                           _ClearBuffer:
  1604  001034                     ;incstack = 0
  1605                           	opt	stack 23
  1606                           	line	521
  1607                           	
  1608                           l939:
  1609  001034                     ;main.c: 521:     for(int i = 0; i < 10 ; i++)
  1610                           	movlw	high(0)
  1611  001034  0E00               	movwf	((c:ClearBuffer@i+1)),c
  1612  001036  6E53               	movlw	low(0)
  1613  001038  0E00               	movwf	((c:ClearBuffer@i)),c
  1614  00103A  6E52               	
  1615                           l941:
  1616  00103C                     	btfsc	((c:ClearBuffer@i+1)),c,7
  1617  00103C  BE53               	goto	u11
  1618  00103E  EF2A  F008         	movf	((c:ClearBuffer@i+1)),c,w
  1619  001042  5053               	bnz	u10
  1620  001044  E109               	movlw	10
  1621  001046  0E0A               	subwf	 ((c:ClearBuffer@i)),c,w
  1622  001048  5C52               	btfss	status,0
  1623  00104A  A0D8               	goto	u11
  1624  00104C  EF2A  F008         	goto	u10
  1625  001050  EF2C  F008         
  1626                           u11:
  1627  001054                     	goto	l945
  1628  001054  EF30  F008         u10:
  1629  001058                     	goto	l951
  1630  001058  EF4A  F008         	
  1631                           l943:
  1632  00105C                     	goto	l951
  1633  00105C  EF4A  F008         	
  1634                           l205:
  1635  001060                     	line	522
  1636                           	
  1637                           l945:
  1638  001060                     ;main.c: 522:         mystring[i] = '\0';
  1639                           	movlw	low(_mystring)
  1640  001060  0E27               	addwf	((c:ClearBuffer@i)),c,w
  1641  001062  2452               	movwf	c:fsr2l
  1642  001064  6ED9               	movlw	high(_mystring)
  1643  001066  0E00               	addwfc	((c:ClearBuffer@i+1)),c,w
  1644  001068  2053               	movwf	1+c:fsr2l
  1645  00106A  6EDA               	movlw	low(0)
  1646  00106C  0E00               	movwf	indf2
  1647  00106E  6EDF               	
  1648                           l947:
  1649  001070                     	infsnz	((c:ClearBuffer@i)),c
  1650  001070  4A52               	incf	((c:ClearBuffer@i+1)),c
  1651  001072  2A53               	
  1652                           l949:
  1653  001074                     	btfsc	((c:ClearBuffer@i+1)),c,7
  1654  001074  BE53               	goto	u21
  1655  001076  EF46  F008         	movf	((c:ClearBuffer@i+1)),c,w
  1656  00107A  5053               	bnz	u20
  1657  00107C  E109               	movlw	10
  1658  00107E  0E0A               	subwf	 ((c:ClearBuffer@i)),c,w
  1659  001080  5C52               	btfss	status,0
  1660  001082  A0D8               	goto	u21
  1661  001084  EF46  F008         	goto	u20
  1662  001088  EF48  F008         
  1663                           u21:
  1664  00108C                     	goto	l945
  1665  00108C  EF30  F008         u20:
  1666  001090                     	goto	l951
  1667  001090  EF4A  F008         	
  1668                           l206:
  1669  001094                     	line	523
  1670                           	
  1671                           l951:
  1672  001094                     ;main.c: 523:     lenStr = 0;
  1673                           	movlw	high(0)
  1674  001094  0E00               	movwf	((c:_lenStr+1)),c
  1675  001096  6E26               	movlw	low(0)
  1676  001098  0E00               	movwf	((c:_lenStr)),c
  1677  00109A  6E25               	line	524
  1678                           	
  1679                           l207:
  1680  00109C                     	return	;funcret
  1681  00109C  0012               	opt stack 0
  1682                           GLOBAL	__end_of_ClearBuffer
  1683                           	__end_of_ClearBuffer:
  1684  00109E                     	signat	_ClearBuffer,89
  1685                           	global	_LEDInit
  1686                           
  1687 ;; *************** function _LEDInit *****************
  1688 ;; Defined at:
  1689 ;;		line 571 in file "main.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		None
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1703 ;;      Params:         0       0       0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0       0       0
  1706 ;;      Totals:         0       0       0       0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    6
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           psect	text7,class=CODE,space=0,reloc=2,group=0
  1717                           	line	571
  1718                           global __ptext7
  1719                           __ptext7:
  1720  001226                     psect	text7
  1721                           	file	"main.c"
  1722                           	line	571
  1723                           	global	__size_of_LEDInit
  1724                           	__size_of_LEDInit	equ	__end_of_LEDInit-_LEDInit
  1725  0000                     	
  1726                           _LEDInit:
  1727  001226                     ;incstack = 0
  1728                           	opt	stack 24
  1729                           	line	573
  1730                           	
  1731                           l1221:
  1732  001226                     ;main.c: 573:     TRISDbits.TRISD0 = 0;
  1733                           	bcf	((c:3989)),c,0	;volatile
  1734  001226  9095               	line	574
  1735                           ;main.c: 574:     TRISDbits.TRISD1 = 0;
  1736                           	bcf	((c:3989)),c,1	;volatile
  1737  001228  9295               	line	575
  1738                           ;main.c: 575:     TRISDbits.TRISD2 = 0;
  1739                           	bcf	((c:3989)),c,2	;volatile
  1740  00122A  9495               	line	576
  1741                           ;main.c: 576:     TRISDbits.TRISD3 = 0;
  1742                           	bcf	((c:3989)),c,3	;volatile
  1743  00122C  9695               	line	577
  1744                           ;main.c: 577:     TRISDbits.TRISD4 = 0;
  1745                           	bcf	((c:3989)),c,4	;volatile
  1746  00122E  9895               	line	578
  1747                           ;main.c: 578:     TRISDbits.TRISD5 = 0;
  1748                           	bcf	((c:3989)),c,5	;volatile
  1749  001230  9A95               	line	579
  1750                           ;main.c: 579:     TRISDbits.TRISD6 = 0;
  1751                           	bcf	((c:3989)),c,6	;volatile
  1752  001232  9C95               	line	580
  1753                           ;main.c: 580:     TRISDbits.TRISD7 = 0;
  1754                           	bcf	((c:3989)),c,7	;volatile
  1755  001234  9E95               	line	581
  1756                           ;main.c: 581:     TRISCbits.TRISC1 = 0;
  1757                           	bcf	((c:3988)),c,1	;volatile
  1758  001236  9294               	line	582
  1759                           ;main.c: 582:     TRISCbits.TRISC2 = 0;
  1760                           	bcf	((c:3988)),c,2	;volatile
  1761  001238  9494               	line	583
  1762                           ;main.c: 583:     TRISCbits.TRISC3 = 0;
  1763                           	bcf	((c:3988)),c,3	;volatile
  1764  00123A  9694               	line	584
  1765                           ;main.c: 584:     TRISCbits.TRISC4 = 0;
  1766                           	bcf	((c:3988)),c,4	;volatile
  1767  00123C  9894               	line	585
  1768                           ;main.c: 585:     TRISCbits.TRISC5 = 0;
  1769                           	bcf	((c:3988)),c,5	;volatile
  1770  00123E  9A94               	line	586
  1771                           	
  1772                           l226:
  1773  001240                     	return	;funcret
  1774  001240  0012               	opt stack 0
  1775                           GLOBAL	__end_of_LEDInit
  1776                           	__end_of_LEDInit:
  1777  001242                     	signat	_LEDInit,89
  1778                           	global	_INTERRUPT_Initialize
  1779                           
  1780 ;; *************** function _INTERRUPT_Initialize *****************
  1781 ;; Defined at:
  1782 ;;		line 468 in file "main.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		None
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1796 ;;      Params:         0       0       0       0       0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0
  1799 ;;      Totals:         0       0       0       0       0       0       0
  1800 ;;Total ram usage:        0 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    6
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_main
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           psect	text8,class=CODE,space=0,reloc=2,group=0
  1810                           	line	468
  1811                           global __ptext8
  1812                           __ptext8:
  1813  001278                     psect	text8
  1814                           	file	"main.c"
  1815                           	line	468
  1816                           	global	__size_of_INTERRUPT_Initialize
  1817                           	__size_of_INTERRUPT_Initialize	equ	__end_of_INTERRUPT_Initialize-_INTERRUPT_Initialize

  1818  0000                     	
  1819                           _INTERRUPT_Initialize:
  1820  001278                     ;incstack = 0
  1821                           	opt	stack 24
  1822                           	line	470
  1823                           	
  1824                           l1197:
  1825  001278                     ;main.c: 470:     RCONbits.IPEN = 1;
  1826                           	bsf	((c:4048)),c,7	;volatile
  1827  001278  8ED0               	line	471
  1828                           ;main.c: 471:     INTCONbits.GIEH = 1;
  1829                           	bsf	((c:4082)),c,7	;volatile
  1830  00127A  8EF2               	line	472
  1831                           ;main.c: 472:     INTCONbits.GIEL = 1;
  1832                           	bsf	((c:4082)),c,6	;volatile
  1833  00127C  8CF2               	line	473
  1834                           	
  1835                           l187:
  1836  00127E                     	return	;funcret
  1837  00127E  0012               	opt stack 0
  1838                           GLOBAL	__end_of_INTERRUPT_Initialize
  1839                           	__end_of_INTERRUPT_Initialize:
  1840  001280                     	signat	_INTERRUPT_Initialize,89
  1841                           	global	_Lo_ISR
  1842                           
  1843 ;; *************** function _Lo_ISR *****************
  1844 ;; Defined at:
  1845 ;;		line 554 in file "main.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1859 ;;      Params:         0       0       0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0
  1861 ;;      Temps:          5       0       0       0       0       0       0
  1862 ;;      Totals:         5       0       0       0       0       0       0
  1863 ;;Total ram usage:        5 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    5
  1866 ;; This function calls:
  1867 ;;		_MyusartRead
  1868 ;; This function is called by:
  1869 ;;		Interrupt level 1
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           psect	intcodelo,class=CODE,space=0,reloc=2
  1873                           global __pintcodelo
  1874                           __pintcodelo:
  1875  000018                     psect	intcodelo
  1876                           	file	"main.c"
  1877                           	line	554
  1878                           	global	__size_of_Lo_ISR
  1879                           	__size_of_Lo_ISR	equ	__end_of_Lo_ISR-_Lo_ISR
  1880  0000                     	
  1881                           _Lo_ISR:
  1882  000018                     ;incstack = 0
  1883                           	opt	stack 23
  1884                           	bsf int$flags,0,c ;set compiler interrupt flag (level 1)
  1885  000018  8054               	movff	status+0,??_Lo_ISR+0
  1886  00001A  CFD8 F04D          	movff	wreg+0,??_Lo_ISR+1
  1887  00001E  CFE8 F04E          	movff	bsr+0,??_Lo_ISR+2
  1888  000022  CFE0 F04F          	movff	fsr2l+0,??_Lo_ISR+3
  1889  000026  CFD9 F050          	movff	fsr2h+0,??_Lo_ISR+4
  1890  00002A  CFDA F051          	line	556
  1891                           	
  1892                           i1l1823:
  1893  00002E                     ;main.c: 556:     if(RCIF)
  1894                           	btfss	c:(31989/8),(31989)&7	;volatile
  1895  00002E  AA9E               	goto	i1u77_21
  1896  000030  EF1C  F000         	goto	i1u77_20
  1897  000034  EF1E  F000         i1u77_21:
  1898  000038                     	goto	i1l223
  1899  000038  EF30  F000         i1u77_20:
  1900  00003C                     	line	558
  1901                           	
  1902                           i1l1825:
  1903  00003C                     ;main.c: 557:     {;main.c: 558:         if(RCSTAbits.OERR)
  1904                           	btfss	((c:4011)),c,1	;volatile
  1905  00003C  A2AB               	goto	i1u78_21
  1906  00003E  EF23  F000         	goto	i1u78_20
  1907  000042  EF25  F000         i1u78_21:
  1908  000046                     	goto	i1l1829
  1909  000046  EF2A  F000         i1u78_20:
  1910  00004A                     	line	560
  1911                           	
  1912                           i1l1827:
  1913  00004A                     ;main.c: 559:         {;main.c: 560:             CREN = 0;
  1914                           	bcf	c:(32092/8),(32092)&7	;volatile
  1915  00004A  98AB               	line	561
  1916                           ;main.c: 561:             __nop();
  1917                           	opt	asmopt_push
  1918                           	opt	asmopt_off
  1919                           	nop
  1920  00004C  F000               	opt	asmopt_pop
  1921                           	line	562
  1922                           ;main.c: 562:             CREN = 1;
  1923                           	bsf	c:(32092/8),(32092)&7	;volatile
  1924  00004E  88AB               	goto	i1l1829
  1925  000050  EF2A  F000         	line	563
  1926                           ;main.c: 563:         }
  1927                           	
  1928                           i1l222:
  1929  000054                     	line	565
  1930                           	
  1931                           i1l1829:
  1932  000054                     ;main.c: 565:         MyusartRead();
  1933                           	call	_MyusartRead	;wreg free
  1934  000054  EC77  F008         	goto	i1l223
  1935  000058  EF30  F000         	line	566
  1936                           ;main.c: 566:     }
  1937                           	
  1938                           i1l221:
  1939  00005C                     	goto	i1l223
  1940  00005C  EF30  F000         	line	569
  1941                           	
  1942                           i1l1831:
  1943  000060                     	line	570
  1944                           ;main.c: 569:     return;
  1945                           	
  1946                           i1l223:
  1947  000060                     	movff	??_Lo_ISR+4,fsr2h+0
  1948  000060  C051  FFDA         	movff	??_Lo_ISR+3,fsr2l+0
  1949  000064  C050  FFD9         	movff	??_Lo_ISR+2,bsr+0
  1950  000068  C04F  FFE0         	movff	??_Lo_ISR+1,wreg+0
  1951  00006C  C04E  FFE8         	movff	??_Lo_ISR+0,status+0
  1952  000070  C04D  FFD8         	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  1953  000074  9054               	retfie
  1954  000076  0010               	opt stack 0
  1955                           GLOBAL	__end_of_Lo_ISR
  1956                           	__end_of_Lo_ISR:
  1957  000078                     	signat	_Lo_ISR,89
  1958                           	global	_MyusartRead
  1959                           
  1960 ;; *************** function _MyusartRead *****************
  1961 ;; Defined at:
  1962 ;;		line 526 in file "main.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1976 ;;      Params:         0       0       0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0
  1979 ;;      Totals:         0       0       0       0       0       0       0
  1980 ;;Total ram usage:        0 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    4
  1983 ;; This function calls:
  1984 ;;		_UART_Write
  1985 ;;		___awmod
  1986 ;; This function is called by:
  1987 ;;		_Lo_ISR
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           psect	text10,class=CODE,space=0,reloc=2,group=0
  1991                           	line	526
  1992                           global __ptext10
  1993                           __ptext10:
  1994  0010EE                     psect	text10
  1995                           	file	"main.c"
  1996                           	line	526
  1997                           	global	__size_of_MyusartRead
  1998                           	__size_of_MyusartRead	equ	__end_of_MyusartRead-_MyusartRead
  1999  0000                     	
  2000                           _MyusartRead:
  2001  0010EE                     ;incstack = 0
  2002                           	opt	stack 23
  2003                           	line	528
  2004                           	
  2005                           i1l1651:
  2006  0010EE                     ;main.c: 528:     mystring[lenStr] = RCREG;
  2007                           	movlw	low(_mystring)
  2008  0010EE  0E27               	addwf	((c:_lenStr)),c,w
  2009  0010F0  2425               	movwf	c:fsr2l
  2010  0010F2  6ED9               	movlw	high(_mystring)
  2011  0010F4  0E00               	addwfc	((c:_lenStr+1)),c,w
  2012  0010F6  2026               	movwf	1+c:fsr2l
  2013  0010F8  6EDA               	movff	(c:4014),indf2	;volatile
  2014  0010FA  CFAE FFDF          
  2015                           	line	529
  2016                           	
  2017                           i1l1653:
  2018  0010FE                     ;main.c: 529:     UART_Write(mystring[lenStr]);
  2019                           	movlw	low(_mystring)
  2020  0010FE  0E27               	addwf	((c:_lenStr)),c,w
  2021  001100  2425               	movwf	c:fsr2l
  2022  001102  6ED9               	movlw	high(_mystring)
  2023  001104  0E00               	addwfc	((c:_lenStr+1)),c,w
  2024  001106  2026               	movwf	1+c:fsr2l
  2025  001108  6EDA               	movf	indf2,w
  2026  00110A  50DF               	
  2027                           	call	_UART_Write
  2028  00110C  ECE7  F008         	line	530
  2029                           	
  2030                           i1l1655:
  2031  001110                     ;main.c: 530:     lenStr++;
  2032                           	infsnz	((c:_lenStr)),c
  2033  001110  4A25               	incf	((c:_lenStr+1)),c
  2034  001112  2A26               	line	531
  2035                           	
  2036                           i1l1657:
  2037  001114                     ;main.c: 531:     lenStr %= 10;
  2038                           	movff	(c:_lenStr),(c:___awmod@dividend)
  2039  001114  C025  F047         	movff	(c:_lenStr+1),(c:___awmod@dividend+1)
  2040  001118  C026  F048         	movlw	high(0Ah)
  2041  00111C  0E00               	movwf	((c:___awmod@divisor+1)),c
  2042  00111E  6E4A               	movlw	low(0Ah)
  2043  001120  0E0A               	movwf	((c:___awmod@divisor)),c
  2044  001122  6E49               	call	___awmod	;wreg free
  2045  001124  EC42  F007         	movff	0+?___awmod,(c:_lenStr)
  2046  001128  C047  F025         	movff	1+?___awmod,(c:_lenStr+1)
  2047  00112C  C048  F026         	goto	i1l210
  2048  001130  EF9A  F008         	line	534
  2049                           	
  2050                           i1l1659:
  2051  001134                     	line	535
  2052                           ;main.c: 534:     return ;
  2053                           	
  2054                           i1l210:
  2055  001134                     	return	;funcret
  2056  001134  0012               	opt stack 0
  2057                           GLOBAL	__end_of_MyusartRead
  2058                           	__end_of_MyusartRead:
  2059  001136                     	signat	_MyusartRead,89
  2060                           	global	___awmod
  2061                           
  2062 ;; *************** function ___awmod *****************
  2063 ;; Defined at:
  2064 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  dividend        2   22[COMRAM] int 
  2067 ;;  divisor         2   24[COMRAM] int 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  sign            1   27[COMRAM] unsigned char 
  2070 ;;  counter         1   26[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  2   22[COMRAM] int 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2080 ;;      Params:         4       0       0       0       0       0       0
  2081 ;;      Locals:         2       0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0
  2083 ;;      Totals:         6       0       0       0       0       0       0
  2084 ;;Total ram usage:        6 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    3
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_MyusartRead
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           psect	text11,class=CODE,space=0,reloc=2,group=1
  2094                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  2095                           	line	7
  2096                           global __ptext11
  2097                           __ptext11:
  2098  000E84                     psect	text11
  2099                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  2100                           	line	7
  2101                           	global	__size_of___awmod
  2102                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  2103  0000                     	
  2104                           ___awmod:
  2105  000E84                     ;incstack = 0
  2106                           	opt	stack 23
  2107                           	line	12
  2108                           	
  2109                           i1l1489:
  2110  000E84                     	movlw	low(0)
  2111  000E84  0E00               	movwf	((c:___awmod@sign)),c
  2112  000E86  6E4C               	line	13
  2113                           	
  2114                           i1l1491:
  2115  000E88                     	btfsc	((c:___awmod@dividend+1)),c,7
  2116  000E88  BE48               	goto	i1u48_20
  2117  000E8A  EF4B  F007         	goto	i1u48_21
  2118  000E8E  EF49  F007         
  2119                           i1u48_21:
  2120  000E92                     	goto	i1l1497
  2121  000E92  EF53  F007         i1u48_20:
  2122  000E96                     	line	14
  2123                           	
  2124                           i1l1493:
  2125  000E96                     	negf	((c:___awmod@dividend)),c
  2126  000E96  6C47               	comf	((c:___awmod@dividend+1)),c
  2127  000E98  1E48               	btfsc	status,0
  2128  000E9A  B0D8               	incf	((c:___awmod@dividend+1)),c
  2129  000E9C  2A48               	line	15
  2130                           	
  2131                           i1l1495:
  2132  000E9E                     	movlw	low(01h)
  2133  000E9E  0E01               	movwf	((c:___awmod@sign)),c
  2134  000EA0  6E4C               	goto	i1l1497
  2135  000EA2  EF53  F007         	line	16
  2136                           	
  2137                           i1l463:
  2138  000EA6                     	line	17
  2139                           	
  2140                           i1l1497:
  2141  000EA6                     	btfsc	((c:___awmod@divisor+1)),c,7
  2142  000EA6  BE4A               	goto	i1u49_20
  2143  000EA8  EF5A  F007         	goto	i1u49_21
  2144  000EAC  EF58  F007         
  2145                           i1u49_21:
  2146  000EB0                     	goto	i1l1501
  2147  000EB0  EF60  F007         i1u49_20:
  2148  000EB4                     	line	18
  2149                           	
  2150                           i1l1499:
  2151  000EB4                     	negf	((c:___awmod@divisor)),c
  2152  000EB4  6C49               	comf	((c:___awmod@divisor+1)),c
  2153  000EB6  1E4A               	btfsc	status,0
  2154  000EB8  B0D8               	incf	((c:___awmod@divisor+1)),c
  2155  000EBA  2A4A               	goto	i1l1501
  2156  000EBC  EF60  F007         	
  2157                           i1l464:
  2158  000EC0                     	line	19
  2159                           	
  2160                           i1l1501:
  2161  000EC0                     	movf	((c:___awmod@divisor)),c,w
  2162  000EC0  5049               iorwf	((c:___awmod@divisor+1)),c,w
  2163  000EC2  104A               	btfsc	status,2
  2164  000EC4  B4D8               	goto	i1u50_21
  2165  000EC6  EF67  F007         	goto	i1u50_20
  2166  000ECA  EF69  F007         
  2167                           i1u50_21:
  2168  000ECE                     	goto	i1l1517
  2169  000ECE  EF99  F007         i1u50_20:
  2170  000ED2                     	line	20
  2171                           	
  2172                           i1l1503:
  2173  000ED2                     	movlw	low(01h)
  2174  000ED2  0E01               	movwf	((c:___awmod@counter)),c
  2175  000ED4  6E4B               	line	21
  2176                           	goto	i1l1507
  2177  000ED6  EF73  F007         	
  2178                           i1l467:
  2179  000EDA                     	line	22
  2180                           	
  2181                           i1l1505:
  2182  000EDA                     	bcf	status,0
  2183  000EDA  90D8               	rlcf	((c:___awmod@divisor)),c
  2184  000EDC  3649               	rlcf	((c:___awmod@divisor+1)),c
  2185  000EDE  364A               	line	23
  2186                           	incf	((c:___awmod@counter)),c
  2187  000EE0  2A4B               	goto	i1l1507
  2188  000EE2  EF73  F007         	line	24
  2189                           	
  2190                           i1l466:
  2191  000EE6                     	line	21
  2192                           	
  2193                           i1l1507:
  2194  000EE6                     	
  2195                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
  2196  000EE6  AE4A               	goto	i1u51_21
  2197  000EE8  EF78  F007         	goto	i1u51_20
  2198  000EEC  EF7A  F007         i1u51_21:
  2199  000EF0                     	goto	i1l1505
  2200  000EF0  EF6D  F007         i1u51_20:
  2201  000EF4                     	goto	i1l1509
  2202  000EF4  EF7E  F007         	
  2203                           i1l468:
  2204  000EF8                     	goto	i1l1509
  2205  000EF8  EF7E  F007         	line	25
  2206                           	
  2207                           i1l469:
  2208  000EFC                     	line	26
  2209                           	
  2210                           i1l1509:
  2211  000EFC                     		movf	((c:___awmod@divisor)),c,w
  2212  000EFC  5049               	subwf	((c:___awmod@dividend)),c,w
  2213  000EFE  5C47               	movf	((c:___awmod@divisor+1)),c,w
  2214  000F00  504A               	subwfb	((c:___awmod@dividend+1)),c,w
  2215  000F02  5848               	btfss	status,0
  2216  000F04  A0D8               	goto	i1u52_21
  2217  000F06  EF87  F007         	goto	i1u52_20
  2218  000F0A  EF89  F007         
  2219                           i1u52_21:
  2220  000F0E                     	goto	i1l1513
  2221  000F0E  EF8F  F007         i1u52_20:
  2222  000F12                     	line	27
  2223                           	
  2224                           i1l1511:
  2225  000F12                     	movf	((c:___awmod@divisor)),c,w
  2226  000F12  5049               	subwf	((c:___awmod@dividend)),c
  2227  000F14  5E47               	movf	((c:___awmod@divisor+1)),c,w
  2228  000F16  504A               	subwfb	((c:___awmod@dividend+1)),c
  2229  000F18  5A48               
  2230                           	goto	i1l1513
  2231  000F1A  EF8F  F007         	
  2232                           i1l470:
  2233  000F1E                     	line	28
  2234                           	
  2235                           i1l1513:
  2236  000F1E                     	bcf	status,0
  2237  000F1E  90D8               	rrcf	((c:___awmod@divisor+1)),c
  2238  000F20  324A               	rrcf	((c:___awmod@divisor)),c
  2239  000F22  3249               	line	29
  2240                           	
  2241                           i1l1515:
  2242  000F24                     	decfsz	((c:___awmod@counter)),c
  2243  000F24  2E4B               	
  2244                           	goto	i1l1509
  2245  000F26  EF7E  F007         	goto	i1l1517
  2246  000F2A  EF99  F007         	
  2247                           i1l471:
  2248  000F2E                     	goto	i1l1517
  2249  000F2E  EF99  F007         	line	30
  2250                           	
  2251                           i1l465:
  2252  000F32                     	line	31
  2253                           	
  2254                           i1l1517:
  2255  000F32                     	movf	((c:___awmod@sign)),c,w
  2256  000F32  504C               	btfsc	status,2
  2257  000F34  B4D8               	goto	i1u53_21
  2258  000F36  EF9F  F007         	goto	i1u53_20
  2259  000F3A  EFA1  F007         i1u53_21:
  2260  000F3E                     	goto	i1l1521
  2261  000F3E  EFA7  F007         i1u53_20:
  2262  000F42                     	line	32
  2263                           	
  2264                           i1l1519:
  2265  000F42                     	negf	((c:___awmod@dividend)),c
  2266  000F42  6C47               	comf	((c:___awmod@dividend+1)),c
  2267  000F44  1E48               	btfsc	status,0
  2268  000F46  B0D8               	incf	((c:___awmod@dividend+1)),c
  2269  000F48  2A48               	goto	i1l1521
  2270  000F4A  EFA7  F007         	
  2271                           i1l472:
  2272  000F4E                     	line	33
  2273                           	
  2274                           i1l1521:
  2275  000F4E                     	movff	(c:___awmod@dividend),(c:?___awmod)
  2276  000F4E  C047  F047         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
  2277  000F52  C048  F048         	goto	i1l473
  2278  000F56  EFAD  F007         	
  2279                           i1l1523:
  2280  000F5A                     	line	34
  2281                           	
  2282                           i1l473:
  2283  000F5A                     	return	;funcret
  2284  000F5A  0012               	opt stack 0
  2285                           GLOBAL	__end_of___awmod
  2286                           	__end_of___awmod:
  2287  000F5C                     	signat	___awmod,8314
  2288                           	global	_UART_Write
  2289                           
  2290 ;; *************** function _UART_Write *****************
  2291 ;; Defined at:
  2292 ;;		line 509 in file "main.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  data            1    wreg     unsigned char 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  data            1   22[COMRAM] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2306 ;;      Params:         0       0       0       0       0       0       0
  2307 ;;      Locals:         1       0       0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0
  2309 ;;      Totals:         1       0       0       0       0       0       0
  2310 ;;Total ram usage:        1 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    3
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_MyusartRead
  2317 ;;		_Mode2_2
  2318 ;;		_Mode3
  2319 ;;		_PrintVoltage
  2320 ;;		_UART_Write_Text
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           psect	text12,class=CODE,space=0,reloc=2,group=0
  2324                           	file	"main.c"
  2325                           	line	509
  2326                           global __ptext12
  2327                           __ptext12:
  2328  0011CE                     psect	text12
  2329                           	file	"main.c"
  2330                           	line	509
  2331                           	global	__size_of_UART_Write
  2332                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
  2333  0000                     	
  2334                           _UART_Write:
  2335  0011CE                     ;incstack = 0
  2336                           	opt	stack 23
  2337                           ;UART_Write@data stored from wreg
  2338                           	movwf	((c:UART_Write@data)),c
  2339  0011CE  6E47               	line	511
  2340                           	
  2341                           i1l971:
  2342  0011D0                     ;main.c: 509: void UART_Write(unsigned char data);main.c: 510: {;main.c: 511:     while(
                                 !TXSTAbits.TRMT);
  2343                           	goto	i1l193
  2344  0011D0  EFEA  F008         	
  2345                           i1l194:
  2346  0011D4                     	
  2347                           i1l193:
  2348  0011D4                     	btfss	((c:4012)),c,1	;volatile
  2349  0011D4  A2AC               	goto	i1u3_21
  2350  0011D6  EFEF  F008         	goto	i1u3_20
  2351  0011DA  EFF1  F008         i1u3_21:
  2352  0011DE                     	goto	i1l193
  2353  0011DE  EFEA  F008         i1u3_20:
  2354  0011E2                     	goto	i1l973
  2355  0011E2  EFF3  F008         	
  2356                           i1l195:
  2357  0011E6                     	line	512
  2358                           	
  2359                           i1l973:
  2360  0011E6                     ;main.c: 512:     TXREG = data;
  2361                           	movff	(c:UART_Write@data),(c:4013)	;volatile
  2362  0011E6  C047  FFAD         	line	513
  2363                           	
  2364                           i1l196:
  2365  0011EA                     	return	;funcret
  2366  0011EA  0012               	opt stack 0
  2367                           GLOBAL	__end_of_UART_Write
  2368                           	__end_of_UART_Write:
  2369  0011EC                     	signat	_UART_Write,4217
  2370                           	global	_Hi_ISR
  2371                           
  2372 ;; *************** function _Hi_ISR *****************
  2373 ;; Defined at:
  2374 ;;		line 313 in file "main.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2388 ;;      Params:         0       0       0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0
  2390 ;;      Temps:          4       0       0       0       0       0       0
  2391 ;;      Totals:         4       0       0       0       0       0       0
  2392 ;;Total ram usage:        4 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:    2
  2395 ;; This function calls:
  2396 ;;		_ADC_Read
  2397 ;;		_PrintDigital
  2398 ;;		i2_UART_Write
  2399 ;; This function is called by:
  2400 ;;		Interrupt level 2
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           psect	intcode,class=CODE,space=0,reloc=2
  2404                           global __pintcode
  2405                           __pintcode:
  2406  000008                     psect	intcode
  2407                           	file	"main.c"
  2408                           	line	313
  2409                           	global	__size_of_Hi_ISR
  2410                           	__size_of_Hi_ISR	equ	__end_of_Hi_ISR-_Hi_ISR
  2411  0000                     	
  2412                           _Hi_ISR:
  2413  000008                     ;incstack = 0
  2414                           	opt	stack 23
  2415                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
  2416  000008  8254               	global	int_func
  2417                           	call	int_func,f	;refresh shadow registers
  2418  00000A  ED3D  F005         psect	intcode_body,class=CODE,space=0,reloc=2
  2419                           global __pintcode_body
  2420                           __pintcode_body:
  2421  000A7A                     int_func:
  2422  000A7A                     
  2423                           	pop	; remove dummy address from shadow register refresh
  2424  000A7A  0006               	movff	fsr2l+0,??_Hi_ISR+0
  2425  000A7C  CFD9 F043          	movff	fsr2h+0,??_Hi_ISR+1
  2426  000A80  CFDA F044          	movff	prodl+0,??_Hi_ISR+2
  2427  000A84  CFF3 F045          	movff	prodh+0,??_Hi_ISR+3
  2428  000A88  CFF4 F046          	line	316
  2429                           	
  2430                           i2l1753:
  2431  000A8C                     ;main.c: 316:     if(PIR1bits.ADIF){
  2432                           	btfss	((c:3998)),c,6	;volatile
  2433  000A8C  AC9E               	goto	i2u70_41
  2434  000A8E  EF4B  F005         	goto	i2u70_40
  2435  000A92  EF4D  F005         i2u70_41:
  2436  000A96                     	goto	i2l159
  2437  000A96  EF51  F005         i2u70_40:
  2438  000A9A                     	line	317
  2439                           	
  2440                           i2l1755:
  2441  000A9A                     ;main.c: 317:         PIR1bits.ADIF = 0;
  2442                           	bcf	((c:3998)),c,6	;volatile
  2443  000A9A  9C9E               	line	318
  2444                           ;main.c: 318:         ADCON0bits.ADON = 1;
  2445                           	bsf	((c:4034)),c,0	;volatile
  2446  000A9C  80C2               	line	320
  2447                           ;main.c: 320:     }
  2448                           	goto	i2l172
  2449  000A9E  EFC2  F006         	line	321
  2450                           ;main.c: 321:     else if(PIR2bits.CCP2IF){
  2451                           	
  2452                           i2l159:
  2453  000AA2                     	btfss	((c:4001)),c,0	;volatile
  2454  000AA2  A0A1               	goto	i2u71_41
  2455  000AA4  EF56  F005         	goto	i2u71_40
  2456  000AA8  EF58  F005         i2u71_41:
  2457  000AAC                     	goto	i2l172
  2458  000AAC  EFC2  F006         i2u71_40:
  2459  000AB0                     	line	322
  2460                           	
  2461                           i2l1757:
  2462  000AB0                     ;main.c: 322:         PIR2bits.CCP2IF = 0;
  2463                           	bcf	((c:4001)),c,0	;volatile
  2464  000AB0  90A1               	line	323
  2465                           	
  2466                           i2l1759:
  2467  000AB2                     ;main.c: 323:         data[0]=ADC_Read(0);
  2468                           	movlw	high(0)
  2469  000AB2  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2470  000AB4  6E32               	movlw	low(0)
  2471  000AB6  0E00               	movwf	((c:ADC_Read@channel)),c
  2472  000AB8  6E31               	call	_ADC_Read	;wreg free
  2473  000ABA  EC4F  F008         	movff	0+?_ADC_Read,(c:_data)
  2474  000ABE  C031  F001         	movff	1+?_ADC_Read,(c:_data+1)
  2475  000AC2  C032  F002         	line	324
  2476                           ;main.c: 324:         data[1]=ADC_Read(1);
  2477                           	movlw	high(01h)
  2478  000AC6  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2479  000AC8  6E32               	movlw	low(01h)
  2480  000ACA  0E01               	movwf	((c:ADC_Read@channel)),c
  2481  000ACC  6E31               	call	_ADC_Read	;wreg free
  2482  000ACE  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+02h)
  2483  000AD2  C031  F003         	movff	1+?_ADC_Read,1+((c:_data)+02h)
  2484  000AD6  C032  F004         	line	325
  2485                           ;main.c: 325:         data[2]=ADC_Read(2);
  2486                           	movlw	high(02h)
  2487  000ADA  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2488  000ADC  6E32               	movlw	low(02h)
  2489  000ADE  0E02               	movwf	((c:ADC_Read@channel)),c
  2490  000AE0  6E31               	call	_ADC_Read	;wreg free
  2491  000AE2  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+04h)
  2492  000AE6  C031  F005         	movff	1+?_ADC_Read,1+((c:_data)+04h)
  2493  000AEA  C032  F006         	line	326
  2494                           ;main.c: 326:         data[3]=ADC_Read(3);
  2495                           	movlw	high(03h)
  2496  000AEE  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2497  000AF0  6E32               	movlw	low(03h)
  2498  000AF2  0E03               	movwf	((c:ADC_Read@channel)),c
  2499  000AF4  6E31               	call	_ADC_Read	;wreg free
  2500  000AF6  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+06h)
  2501  000AFA  C031  F007         	movff	1+?_ADC_Read,1+((c:_data)+06h)
  2502  000AFE  C032  F008         	line	327
  2503                           ;main.c: 327:         data[4]=ADC_Read(4);
  2504                           	movlw	high(04h)
  2505  000B02  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2506  000B04  6E32               	movlw	low(04h)
  2507  000B06  0E04               	movwf	((c:ADC_Read@channel)),c
  2508  000B08  6E31               	call	_ADC_Read	;wreg free
  2509  000B0A  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+08h)
  2510  000B0E  C031  F009         	movff	1+?_ADC_Read,1+((c:_data)+08h)
  2511  000B12  C032  F00A         	line	328
  2512                           ;main.c: 328:         data[5]=ADC_Read(5);
  2513                           	movlw	high(05h)
  2514  000B16  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2515  000B18  6E32               	movlw	low(05h)
  2516  000B1A  0E05               	movwf	((c:ADC_Read@channel)),c
  2517  000B1C  6E31               	call	_ADC_Read	;wreg free
  2518  000B1E  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+0Ah)
  2519  000B22  C031  F00B         	movff	1+?_ADC_Read,1+((c:_data)+0Ah)
  2520  000B26  C032  F00C         	line	329
  2521                           ;main.c: 329:         data[6]=ADC_Read(6);
  2522                           	movlw	high(06h)
  2523  000B2A  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2524  000B2C  6E32               	movlw	low(06h)
  2525  000B2E  0E06               	movwf	((c:ADC_Read@channel)),c
  2526  000B30  6E31               	call	_ADC_Read	;wreg free
  2527  000B32  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+0Ch)
  2528  000B36  C031  F00D         	movff	1+?_ADC_Read,1+((c:_data)+0Ch)
  2529  000B3A  C032  F00E         	line	330
  2530                           ;main.c: 330:         data[7]=ADC_Read(7);
  2531                           	movlw	high(07h)
  2532  000B3E  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2533  000B40  6E32               	movlw	low(07h)
  2534  000B42  0E07               	movwf	((c:ADC_Read@channel)),c
  2535  000B44  6E31               	call	_ADC_Read	;wreg free
  2536  000B46  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+0Eh)
  2537  000B4A  C031  F00F         	movff	1+?_ADC_Read,1+((c:_data)+0Eh)
  2538  000B4E  C032  F010         	line	331
  2539                           ;main.c: 331:         data[8]=ADC_Read(8);
  2540                           	movlw	high(08h)
  2541  000B52  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2542  000B54  6E32               	movlw	low(08h)
  2543  000B56  0E08               	movwf	((c:ADC_Read@channel)),c
  2544  000B58  6E31               	call	_ADC_Read	;wreg free
  2545  000B5A  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+010h)
  2546  000B5E  C031  F011         	movff	1+?_ADC_Read,1+((c:_data)+010h)
  2547  000B62  C032  F012         	line	332
  2548                           ;main.c: 332:         data[9]=ADC_Read(9);
  2549                           	movlw	high(09h)
  2550  000B66  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2551  000B68  6E32               	movlw	low(09h)
  2552  000B6A  0E09               	movwf	((c:ADC_Read@channel)),c
  2553  000B6C  6E31               	call	_ADC_Read	;wreg free
  2554  000B6E  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+012h)
  2555  000B72  C031  F013         	movff	1+?_ADC_Read,1+((c:_data)+012h)
  2556  000B76  C032  F014         	line	333
  2557                           ;main.c: 333:         data[10]=ADC_Read(10);
  2558                           	movlw	high(0Ah)
  2559  000B7A  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2560  000B7C  6E32               	movlw	low(0Ah)
  2561  000B7E  0E0A               	movwf	((c:ADC_Read@channel)),c
  2562  000B80  6E31               	call	_ADC_Read	;wreg free
  2563  000B82  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+014h)
  2564  000B86  C031  F015         	movff	1+?_ADC_Read,1+((c:_data)+014h)
  2565  000B8A  C032  F016         	line	334
  2566                           ;main.c: 334:         data[11]=ADC_Read(11);
  2567                           	movlw	high(0Bh)
  2568  000B8E  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2569  000B90  6E32               	movlw	low(0Bh)
  2570  000B92  0E0B               	movwf	((c:ADC_Read@channel)),c
  2571  000B94  6E31               	call	_ADC_Read	;wreg free
  2572  000B96  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+016h)
  2573  000B9A  C031  F017         	movff	1+?_ADC_Read,1+((c:_data)+016h)
  2574  000B9E  C032  F018         	line	335
  2575                           ;main.c: 335:         data[12]=ADC_Read(12);
  2576                           	movlw	high(0Ch)
  2577  000BA2  0E00               	movwf	((c:ADC_Read@channel+1)),c
  2578  000BA4  6E32               	movlw	low(0Ch)
  2579  000BA6  0E0C               	movwf	((c:ADC_Read@channel)),c
  2580  000BA8  6E31               	call	_ADC_Read	;wreg free
  2581  000BAA  EC4F  F008         	movff	0+?_ADC_Read,0+((c:_data)+018h)
  2582  000BAE  C031  F019         	movff	1+?_ADC_Read,1+((c:_data)+018h)
  2583  000BB2  C032  F01A         	line	337
  2584                           	
  2585                           i2l1761:
  2586  000BB6                     ;main.c: 337:         if(data[0] < 1000)
  2587                           	btfsc	((c:_data+1)),c,7
  2588  000BB6  BE02               	goto	i2u72_40
  2589  000BB8  EFE9  F005         	movlw	232
  2590  000BBC  0EE8               	subwf	 ((c:_data)),c,w
  2591  000BBE  5C01               	movlw	3
  2592  000BC0  0E03               	subwfb	((c:_data+1)),c,w
  2593  000BC2  5802               	btfsc	status,0
  2594  000BC4  B0D8               	goto	i2u72_41
  2595  000BC6  EFE7  F005         	goto	i2u72_40
  2596  000BCA  EFE9  F005         
  2597                           i2u72_41:
  2598  000BCE                     	goto	i2l162
  2599  000BCE  EFEC  F005         i2u72_40:
  2600  000BD2                     	line	338
  2601                           	
  2602                           i2l1763:
  2603  000BD2                     ;main.c: 338:             LATDbits.LATD0 = 1;
  2604                           	bsf	((c:3980)),c,0	;volatile
  2605  000BD2  808C               	goto	i2l1765
  2606  000BD4  EFEF  F005         	line	339
  2607                           ;main.c: 339:         else
  2608                           	
  2609                           i2l162:
  2610  000BD8                     	line	340
  2611                           ;main.c: 340:             LATDbits.LATD0 = 0;
  2612                           	bcf	((c:3980)),c,0	;volatile
  2613  000BD8  908C               	goto	i2l1765
  2614  000BDA  EFEF  F005         	
  2615                           i2l163:
  2616  000BDE                     	line	342
  2617                           	
  2618                           i2l1765:
  2619  000BDE                     ;main.c: 342:         if(data[1] < 1000)
  2620                           	btfsc	(1+((c:_data)+02h)),c,7
  2621  000BDE  BE04               	goto	i2u73_40
  2622  000BE0  EFFD  F005         	movlw	232
  2623  000BE4  0EE8               	subwf	 (0+((c:_data)+02h)),c,w
  2624  000BE6  5C03               	movlw	3
  2625  000BE8  0E03               	subwfb	(1+((c:_data)+02h)),c,w
  2626  000BEA  5804               	btfsc	status,0
  2627  000BEC  B0D8               	goto	i2u73_41
  2628  000BEE  EFFB  F005         	goto	i2u73_40
  2629  000BF2  EFFD  F005         
  2630                           i2u73_41:
  2631  000BF6                     	goto	i2l164
  2632  000BF6  EF00  F006         i2u73_40:
  2633  000BFA                     	line	343
  2634                           	
  2635                           i2l1767:
  2636  000BFA                     ;main.c: 343:             LATDbits.LATD1 = 1;
  2637                           	bsf	((c:3980)),c,1	;volatile
  2638  000BFA  828C               	goto	i2l1769
  2639  000BFC  EF03  F006         	line	344
  2640                           ;main.c: 344:         else
  2641                           	
  2642                           i2l164:
  2643  000C00                     	line	345
  2644                           ;main.c: 345:             LATDbits.LATD1 = 0;
  2645                           	bcf	((c:3980)),c,1	;volatile
  2646  000C00  928C               	goto	i2l1769
  2647  000C02  EF03  F006         	
  2648                           i2l165:
  2649  000C06                     	line	347
  2650                           	
  2651                           i2l1769:
  2652  000C06                     ;main.c: 347:         if(data[2] < 1000)
  2653                           	btfsc	(1+((c:_data)+04h)),c,7
  2654  000C06  BE06               	goto	i2u74_40
  2655  000C08  EF11  F006         	movlw	232
  2656  000C0C  0EE8               	subwf	 (0+((c:_data)+04h)),c,w
  2657  000C0E  5C05               	movlw	3
  2658  000C10  0E03               	subwfb	(1+((c:_data)+04h)),c,w
  2659  000C12  5806               	btfsc	status,0
  2660  000C14  B0D8               	goto	i2u74_41
  2661  000C16  EF0F  F006         	goto	i2u74_40
  2662  000C1A  EF11  F006         
  2663                           i2u74_41:
  2664  000C1E                     	goto	i2l166
  2665  000C1E  EF14  F006         i2u74_40:
  2666  000C22                     	line	348
  2667                           	
  2668                           i2l1771:
  2669  000C22                     ;main.c: 348:             LATDbits.LATD2 = 1;
  2670                           	bsf	((c:3980)),c,2	;volatile
  2671  000C22  848C               	goto	i2l1773
  2672  000C24  EF17  F006         	line	349
  2673                           ;main.c: 349:         else
  2674                           	
  2675                           i2l166:
  2676  000C28                     	line	350
  2677                           ;main.c: 350:             LATDbits.LATD2 = 0;
  2678                           	bcf	((c:3980)),c,2	;volatile
  2679  000C28  948C               	goto	i2l1773
  2680  000C2A  EF17  F006         	
  2681                           i2l167:
  2682  000C2E                     	line	352
  2683                           	
  2684                           i2l1773:
  2685  000C2E                     ;main.c: 352:         if(data[3] < 1000)
  2686                           	btfsc	(1+((c:_data)+06h)),c,7
  2687  000C2E  BE08               	goto	i2u75_40
  2688  000C30  EF25  F006         	movlw	232
  2689  000C34  0EE8               	subwf	 (0+((c:_data)+06h)),c,w
  2690  000C36  5C07               	movlw	3
  2691  000C38  0E03               	subwfb	(1+((c:_data)+06h)),c,w
  2692  000C3A  5808               	btfsc	status,0
  2693  000C3C  B0D8               	goto	i2u75_41
  2694  000C3E  EF23  F006         	goto	i2u75_40
  2695  000C42  EF25  F006         
  2696                           i2u75_41:
  2697  000C46                     	goto	i2l168
  2698  000C46  EF28  F006         i2u75_40:
  2699  000C4A                     	line	353
  2700                           	
  2701                           i2l1775:
  2702  000C4A                     ;main.c: 353:             LATDbits.LATD3 = 1;
  2703                           	bsf	((c:3980)),c,3	;volatile
  2704  000C4A  868C               	goto	i2l1777
  2705  000C4C  EF2B  F006         	line	354
  2706                           ;main.c: 354:         else
  2707                           	
  2708                           i2l168:
  2709  000C50                     	line	355
  2710                           ;main.c: 355:             LATDbits.LATD3 = 0;
  2711                           	bcf	((c:3980)),c,3	;volatile
  2712  000C50  968C               	goto	i2l1777
  2713  000C52  EF2B  F006         	
  2714                           i2l169:
  2715  000C56                     	line	357
  2716                           	
  2717                           i2l1777:
  2718  000C56                     ;main.c: 357:         if(data[4] < 1000)
  2719                           	btfsc	(1+((c:_data)+08h)),c,7
  2720  000C56  BE0A               	goto	i2u76_40
  2721  000C58  EF39  F006         	movlw	232
  2722  000C5C  0EE8               	subwf	 (0+((c:_data)+08h)),c,w
  2723  000C5E  5C09               	movlw	3
  2724  000C60  0E03               	subwfb	(1+((c:_data)+08h)),c,w
  2725  000C62  580A               	btfsc	status,0
  2726  000C64  B0D8               	goto	i2u76_41
  2727  000C66  EF37  F006         	goto	i2u76_40
  2728  000C6A  EF39  F006         
  2729                           i2u76_41:
  2730  000C6E                     	goto	i2l170
  2731  000C6E  EF3C  F006         i2u76_40:
  2732  000C72                     	line	358
  2733                           	
  2734                           i2l1779:
  2735  000C72                     ;main.c: 358:             LATDbits.LATD4 = 1;
  2736                           	bsf	((c:3980)),c,4	;volatile
  2737  000C72  888C               	goto	i2l1781
  2738  000C74  EF3F  F006         	line	359
  2739                           ;main.c: 359:         else
  2740                           	
  2741                           i2l170:
  2742  000C78                     	line	360
  2743                           ;main.c: 360:             LATDbits.LATD4 = 0;
  2744                           	bcf	((c:3980)),c,4	;volatile
  2745  000C78  988C               	goto	i2l1781
  2746  000C7A  EF3F  F006         	
  2747                           i2l171:
  2748  000C7E                     	line	365
  2749                           	
  2750                           i2l1781:
  2751  000C7E                     ;main.c: 365:         PrintDigital(data[0]);
  2752                           	movff	(c:_data),(c:PrintDigital@digital)
  2753  000C7E  C001  F03F         	movff	(c:_data+1),(c:PrintDigital@digital+1)
  2754  000C82  C002  F040         	call	_PrintDigital	;wreg free
  2755  000C86  EC09  F003         	line	366
  2756                           	
  2757                           i2l1783:
  2758  000C8A                     ;main.c: 366:         UART_Write(' ');
  2759                           	movlw	(020h)&0ffh
  2760  000C8A  0E20               	
  2761                           	call	i2_UART_Write
  2762  000C8C  ECF6  F008         	line	367
  2763                           	
  2764                           i2l1785:
  2765  000C90                     ;main.c: 367:         PrintDigital(data[1]);
  2766                           	movff	0+((c:_data)+02h),(c:PrintDigital@digital)
  2767  000C90  C003  F03F         	movff	1+((c:_data)+02h),(c:PrintDigital@digital+1)
  2768  000C94  C004  F040         	call	_PrintDigital	;wreg free
  2769  000C98  EC09  F003         	line	368
  2770                           ;main.c: 368:         UART_Write(' ');
  2771                           	movlw	(020h)&0ffh
  2772  000C9C  0E20               	
  2773                           	call	i2_UART_Write
  2774  000C9E  ECF6  F008         	line	369
  2775                           	
  2776                           i2l1787:
  2777  000CA2                     ;main.c: 369:         PrintDigital(data[2]);
  2778                           	movff	0+((c:_data)+04h),(c:PrintDigital@digital)
  2779  000CA2  C005  F03F         	movff	1+((c:_data)+04h),(c:PrintDigital@digital+1)
  2780  000CA6  C006  F040         	call	_PrintDigital	;wreg free
  2781  000CAA  EC09  F003         	line	370
  2782                           	
  2783                           i2l1789:
  2784  000CAE                     ;main.c: 370:         UART_Write(' ');
  2785                           	movlw	(020h)&0ffh
  2786  000CAE  0E20               	
  2787                           	call	i2_UART_Write
  2788  000CB0  ECF6  F008         	line	371
  2789                           ;main.c: 371:         PrintDigital(data[3]);
  2790                           	movff	0+((c:_data)+06h),(c:PrintDigital@digital)
  2791  000CB4  C007  F03F         	movff	1+((c:_data)+06h),(c:PrintDigital@digital+1)
  2792  000CB8  C008  F040         	call	_PrintDigital	;wreg free
  2793  000CBC  EC09  F003         	line	372
  2794                           	
  2795                           i2l1791:
  2796  000CC0                     ;main.c: 372:         UART_Write(' ');
  2797                           	movlw	(020h)&0ffh
  2798  000CC0  0E20               	
  2799                           	call	i2_UART_Write
  2800  000CC2  ECF6  F008         	line	373
  2801                           	
  2802                           i2l1793:
  2803  000CC6                     ;main.c: 373:         PrintDigital(data[4]);
  2804                           	movff	0+((c:_data)+08h),(c:PrintDigital@digital)
  2805  000CC6  C009  F03F         	movff	1+((c:_data)+08h),(c:PrintDigital@digital+1)
  2806  000CCA  C00A  F040         	call	_PrintDigital	;wreg free
  2807  000CCE  EC09  F003         	line	374
  2808                           ;main.c: 374:         UART_Write(' ');
  2809                           	movlw	(020h)&0ffh
  2810  000CD2  0E20               	
  2811                           	call	i2_UART_Write
  2812  000CD4  ECF6  F008         	line	375
  2813                           	
  2814                           i2l1795:
  2815  000CD8                     ;main.c: 375:         PrintDigital(data[5]);
  2816                           	movff	0+((c:_data)+0Ah),(c:PrintDigital@digital)
  2817  000CD8  C00B  F03F         	movff	1+((c:_data)+0Ah),(c:PrintDigital@digital+1)
  2818  000CDC  C00C  F040         	call	_PrintDigital	;wreg free
  2819  000CE0  EC09  F003         	line	376
  2820                           	
  2821                           i2l1797:
  2822  000CE4                     ;main.c: 376:         UART_Write(' ');
  2823                           	movlw	(020h)&0ffh
  2824  000CE4  0E20               	
  2825                           	call	i2_UART_Write
  2826  000CE6  ECF6  F008         	line	377
  2827                           ;main.c: 377:         PrintDigital(data[6]);
  2828                           	movff	0+((c:_data)+0Ch),(c:PrintDigital@digital)
  2829  000CEA  C00D  F03F         	movff	1+((c:_data)+0Ch),(c:PrintDigital@digital+1)
  2830  000CEE  C00E  F040         	call	_PrintDigital	;wreg free
  2831  000CF2  EC09  F003         	line	378
  2832                           	
  2833                           i2l1799:
  2834  000CF6                     ;main.c: 378:         UART_Write(' ');
  2835                           	movlw	(020h)&0ffh
  2836  000CF6  0E20               	
  2837                           	call	i2_UART_Write
  2838  000CF8  ECF6  F008         	line	379
  2839                           	
  2840                           i2l1801:
  2841  000CFC                     ;main.c: 379:         PrintDigital(data[7]);
  2842                           	movff	0+((c:_data)+0Eh),(c:PrintDigital@digital)
  2843  000CFC  C00F  F03F         	movff	1+((c:_data)+0Eh),(c:PrintDigital@digital+1)
  2844  000D00  C010  F040         	call	_PrintDigital	;wreg free
  2845  000D04  EC09  F003         	line	380
  2846                           ;main.c: 380:         UART_Write(' ');
  2847                           	movlw	(020h)&0ffh
  2848  000D08  0E20               	
  2849                           	call	i2_UART_Write
  2850  000D0A  ECF6  F008         	line	381
  2851                           	
  2852                           i2l1803:
  2853  000D0E                     ;main.c: 381:         PrintDigital(data[8]);
  2854                           	movff	0+((c:_data)+010h),(c:PrintDigital@digital)
  2855  000D0E  C011  F03F         	movff	1+((c:_data)+010h),(c:PrintDigital@digital+1)
  2856  000D12  C012  F040         	call	_PrintDigital	;wreg free
  2857  000D16  EC09  F003         	line	382
  2858                           	
  2859                           i2l1805:
  2860  000D1A                     ;main.c: 382:         UART_Write(' ');
  2861                           	movlw	(020h)&0ffh
  2862  000D1A  0E20               	
  2863                           	call	i2_UART_Write
  2864  000D1C  ECF6  F008         	line	383
  2865                           ;main.c: 383:         PrintDigital(data[9]);
  2866                           	movff	0+((c:_data)+012h),(c:PrintDigital@digital)
  2867  000D20  C013  F03F         	movff	1+((c:_data)+012h),(c:PrintDigital@digital+1)
  2868  000D24  C014  F040         	call	_PrintDigital	;wreg free
  2869  000D28  EC09  F003         	line	384
  2870                           	
  2871                           i2l1807:
  2872  000D2C                     ;main.c: 384:         UART_Write(' ');
  2873                           	movlw	(020h)&0ffh
  2874  000D2C  0E20               	
  2875                           	call	i2_UART_Write
  2876  000D2E  ECF6  F008         	line	385
  2877                           	
  2878                           i2l1809:
  2879  000D32                     ;main.c: 385:         PrintDigital(data[10]);
  2880                           	movff	0+((c:_data)+014h),(c:PrintDigital@digital)
  2881  000D32  C015  F03F         	movff	1+((c:_data)+014h),(c:PrintDigital@digital+1)
  2882  000D36  C016  F040         	call	_PrintDigital	;wreg free
  2883  000D3A  EC09  F003         	line	386
  2884                           ;main.c: 386:         UART_Write(' ');
  2885                           	movlw	(020h)&0ffh
  2886  000D3E  0E20               	
  2887                           	call	i2_UART_Write
  2888  000D40  ECF6  F008         	line	387
  2889                           	
  2890                           i2l1811:
  2891  000D44                     ;main.c: 387:         PrintDigital(data[11]);
  2892                           	movff	0+((c:_data)+016h),(c:PrintDigital@digital)
  2893  000D44  C017  F03F         	movff	1+((c:_data)+016h),(c:PrintDigital@digital+1)
  2894  000D48  C018  F040         	call	_PrintDigital	;wreg free
  2895  000D4C  EC09  F003         	line	388
  2896                           	
  2897                           i2l1813:
  2898  000D50                     ;main.c: 388:         UART_Write(' ');
  2899                           	movlw	(020h)&0ffh
  2900  000D50  0E20               	
  2901                           	call	i2_UART_Write
  2902  000D52  ECF6  F008         	line	389
  2903                           ;main.c: 389:         PrintDigital(data[12]);
  2904                           	movff	0+((c:_data)+018h),(c:PrintDigital@digital)
  2905  000D56  C019  F03F         	movff	1+((c:_data)+018h),(c:PrintDigital@digital+1)
  2906  000D5A  C01A  F040         	call	_PrintDigital	;wreg free
  2907  000D5E  EC09  F003         	line	390
  2908                           	
  2909                           i2l1815:
  2910  000D62                     ;main.c: 390:         UART_Write('\n');
  2911                           	movlw	(0Ah)&0ffh
  2912  000D62  0E0A               	
  2913                           	call	i2_UART_Write
  2914  000D64  ECF6  F008         	line	395
  2915                           	
  2916                           i2l1817:
  2917  000D68                     ;main.c: 395:         CCPR2 = 5000;
  2918                           	movlw	high(01388h)
  2919  000D68  0E13               	movwf	((c:4027+1)),c	;volatile
  2920  000D6A  6EBC               	movlw	low(01388h)
  2921  000D6C  0E88               	movwf	((c:4027)),c	;volatile
  2922  000D6E  6EBB               	line	397
  2923                           	
  2924                           i2l1819:
  2925  000D70                     ;main.c: 397:         TMR3 = 0;
  2926                           	movlw	high(0)
  2927  000D70  0E00               	movwf	((c:4018+1)),c	;volatile
  2928  000D72  6EB3               	movlw	low(0)
  2929  000D74  0E00               	movwf	((c:4018)),c	;volatile
  2930  000D76  6EB2               	goto	i2l172
  2931  000D78  EFC2  F006         	line	398
  2932                           ;main.c: 398:     }
  2933                           	
  2934                           i2l161:
  2935  000D7C                     	goto	i2l172
  2936  000D7C  EFC2  F006         	
  2937                           i2l160:
  2938  000D80                     	goto	i2l172
  2939  000D80  EFC2  F006         	line	399
  2940                           	
  2941                           i2l1821:
  2942  000D84                     	line	400
  2943                           ;main.c: 399:     return ;
  2944                           	
  2945                           i2l172:
  2946  000D84                     	movff	??_Hi_ISR+3,prodh+0
  2947  000D84  C046  FFF4         	movff	??_Hi_ISR+2,prodl+0
  2948  000D88  C045  FFF3         	movff	??_Hi_ISR+1,fsr2h+0
  2949  000D8C  C044  FFDA         	movff	??_Hi_ISR+0,fsr2l+0
  2950  000D90  C043  FFD9         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  2951  000D94  9254               	retfie f
  2952  000D96  0011               	opt stack 0
  2953                           GLOBAL	__end_of_Hi_ISR
  2954                           	__end_of_Hi_ISR:
  2955  000D98                     	signat	_Hi_ISR,89
  2956                           	global	_PrintDigital
  2957                           
  2958 ;; *************** function _PrintDigital *****************
  2959 ;; Defined at:
  2960 ;;		line 210 in file "main.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  digital         2   14[COMRAM] int 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  temp            2   16[COMRAM] int 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2974 ;;      Params:         2       0       0       0       0       0       0
  2975 ;;      Locals:         2       0       0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0
  2977 ;;      Totals:         4       0       0       0       0       0       0
  2978 ;;Total ram usage:        4 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:    1
  2981 ;; This function calls:
  2982 ;;		___awdiv
  2983 ;;		___wmul
  2984 ;;		i2_UART_Write
  2985 ;;		i2___awmod
  2986 ;; This function is called by:
  2987 ;;		_Hi_ISR
  2988 ;;		_Mode2_2
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           psect	text14,class=CODE,space=0,reloc=2,group=0
  2992                           	line	210
  2993                           global __ptext14
  2994                           __ptext14:
  2995  000612                     psect	text14
  2996                           	file	"main.c"
  2997                           	line	210
  2998                           	global	__size_of_PrintDigital
  2999                           	__size_of_PrintDigital	equ	__end_of_PrintDigital-_PrintDigital
  3000  0000                     	
  3001                           _PrintDigital:
  3002  000612                     ;incstack = 0
  3003                           	opt	stack 23
  3004                           	line	212
  3005                           	
  3006                           i2l1577:
  3007  000612                     ;main.c: 210: void PrintDigital(int digital);main.c: 211: {;main.c: 212:     int temp = 
                                 digital;
  3008                           	movff	(c:PrintDigital@digital),(c:PrintDigital@temp)
  3009  000612  C03F  F041         	movff	(c:PrintDigital@digital+1),(c:PrintDigital@temp+1)
  3010  000616  C040  F042         	line	213
  3011                           	
  3012                           i2l1579:
  3013  00061A                     ;main.c: 213:     if(temp/1000 > 0)
  3014                           	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3015  00061A  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3016  00061E  C042  F032         	movlw	high(03E8h)
  3017  000622  0E03               	movwf	((c:___awdiv@divisor+1)),c
  3018  000624  6E34               	movlw	low(03E8h)
  3019  000626  0EE8               	movwf	((c:___awdiv@divisor)),c
  3020  000628  6E33               	call	___awdiv	;wreg free
  3021  00062A  ECCC  F006         	btfsc	(1+?___awdiv),c,7
  3022  00062E  BE32               	goto	i2u62_41
  3023  000630  EF22  F003         	movf	(1+?___awdiv),c,w
  3024  000634  5032               	bnz	i2u62_40
  3025  000636  E108               	decf	(0+?___awdiv),c,w
  3026  000638  0431               	btfss	status,0
  3027  00063A  A0D8               	goto	i2u62_41
  3028  00063C  EF22  F003         	goto	i2u62_40
  3029  000640  EF24  F003         
  3030                           i2u62_41:
  3031  000644                     	goto	i2l1609
  3032  000644  EF04  F004         i2u62_40:
  3033  000648                     	line	215
  3034                           	
  3035                           i2l1581:
  3036  000648                     ;main.c: 214:     {;main.c: 215:         mystring[lenStr] = temp/1000 + '0';
  3037                           	movlw	low(_mystring)
  3038  000648  0E27               	addwf	((c:_lenStr)),c,w
  3039  00064A  2425               	movwf	c:fsr2l
  3040  00064C  6ED9               	movlw	high(_mystring)
  3041  00064E  0E00               	addwfc	((c:_lenStr+1)),c,w
  3042  000650  2026               	movwf	1+c:fsr2l
  3043  000652  6EDA               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3044  000654  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3045  000658  C042  F032         	movlw	high(03E8h)
  3046  00065C  0E03               	movwf	((c:___awdiv@divisor+1)),c
  3047  00065E  6E34               	movlw	low(03E8h)
  3048  000660  0EE8               	movwf	((c:___awdiv@divisor)),c
  3049  000662  6E33               	call	___awdiv	;wreg free
  3050  000664  ECCC  F006         	movf	(0+?___awdiv),c,w
  3051  000668  5031               	addlw	low(030h)
  3052  00066A  0F30               	movwf	indf2,c
  3053  00066C  6EDF               
  3054                           	line	216
  3055                           	
  3056                           i2l1583:
  3057  00066E                     ;main.c: 216:         temp = temp - temp/1000*1000;
  3058                           	movlw	high(03E8h)
  3059  00066E  0E03               	movwf	((c:___awdiv@divisor+1)),c
  3060  000670  6E34               	movlw	low(03E8h)
  3061  000672  0EE8               	movwf	((c:___awdiv@divisor)),c
  3062  000674  6E33               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3063  000676  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3064  00067A  C042  F032         	call	___awdiv	;wreg free
  3065  00067E  ECCC  F006         	movff	0+?___awdiv,(c:___wmul@multiplier)
  3066  000682  C031  F039         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  3067  000686  C032  F03A         	movlw	high(03E8h)
  3068  00068A  0E03               	movwf	((c:___wmul@multiplicand+1)),c
  3069  00068C  6E3C               	movlw	low(03E8h)
  3070  00068E  0EE8               	movwf	((c:___wmul@multiplicand)),c
  3071  000690  6E3B               	call	___wmul	;wreg free
  3072  000692  ECB2  F008         	comf	(0+?___wmul),c
  3073  000696  1E39               	comf	(1+?___wmul),c
  3074  000698  1E3A               	infsnz	(0+?___wmul),c
  3075  00069A  4A39               	incf	(1+?___wmul),c
  3076  00069C  2A3A               	movf	((c:PrintDigital@temp)),c,w
  3077  00069E  5041               	addwf	(0+?___wmul),c,w
  3078  0006A0  2439               	movwf	((c:PrintDigital@temp)),c
  3079  0006A2  6E41               	movf	((c:PrintDigital@temp+1)),c,w
  3080  0006A4  5042               	addwfc	(1+?___wmul),c,w
  3081  0006A6  203A               	movwf	1+((c:PrintDigital@temp)),c
  3082  0006A8  6E42               	line	217
  3083                           	
  3084                           i2l1585:
  3085  0006AA                     ;main.c: 217:         UART_Write(mystring[lenStr]);
  3086                           	movlw	low(_mystring)
  3087  0006AA  0E27               	addwf	((c:_lenStr)),c,w
  3088  0006AC  2425               	movwf	c:fsr2l
  3089  0006AE  6ED9               	movlw	high(_mystring)
  3090  0006B0  0E00               	addwfc	((c:_lenStr+1)),c,w
  3091  0006B2  2026               	movwf	1+c:fsr2l
  3092  0006B4  6EDA               	movf	indf2,w
  3093  0006B6  50DF               	
  3094                           	call	i2_UART_Write
  3095  0006B8  ECF6  F008         	line	218
  3096                           	
  3097                           i2l1587:
  3098  0006BC                     ;main.c: 218:         lenStr++;
  3099                           	infsnz	((c:_lenStr)),c
  3100  0006BC  4A25               	incf	((c:_lenStr+1)),c
  3101  0006BE  2A26               	line	219
  3102                           	
  3103                           i2l1589:
  3104  0006C0                     ;main.c: 219:         lenStr %= 10;
  3105                           	movff	(c:_lenStr),(c:i2___awmod@dividend)
  3106  0006C0  C025  F031         	movff	(c:_lenStr+1),(c:i2___awmod@dividend+1)
  3107  0006C4  C026  F032         	movlw	high(0Ah)
  3108  0006C8  0E00               	movwf	((c:i2___awmod@divisor+1)),c
  3109  0006CA  6E34               	movlw	low(0Ah)
  3110  0006CC  0E0A               	movwf	((c:i2___awmod@divisor)),c
  3111  0006CE  6E33               	call	i2___awmod	;wreg free
  3112  0006D0  ECAE  F007         	movff	0+?i2___awmod,(c:_lenStr)
  3113  0006D4  C031  F025         	movff	1+?i2___awmod,(c:_lenStr+1)
  3114  0006D8  C032  F026         	line	221
  3115                           	
  3116                           i2l1591:
  3117  0006DC                     ;main.c: 221:         mystring[lenStr] = temp/100 + '0';
  3118                           	movlw	low(_mystring)
  3119  0006DC  0E27               	addwf	((c:_lenStr)),c,w
  3120  0006DE  2425               	movwf	c:fsr2l
  3121  0006E0  6ED9               	movlw	high(_mystring)
  3122  0006E2  0E00               	addwfc	((c:_lenStr+1)),c,w
  3123  0006E4  2026               	movwf	1+c:fsr2l
  3124  0006E6  6EDA               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3125  0006E8  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3126  0006EC  C042  F032         	movlw	high(064h)
  3127  0006F0  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3128  0006F2  6E34               	movlw	low(064h)
  3129  0006F4  0E64               	movwf	((c:___awdiv@divisor)),c
  3130  0006F6  6E33               	call	___awdiv	;wreg free
  3131  0006F8  ECCC  F006         	movf	(0+?___awdiv),c,w
  3132  0006FC  5031               	addlw	low(030h)
  3133  0006FE  0F30               	movwf	indf2,c
  3134  000700  6EDF               
  3135                           	line	222
  3136                           	
  3137                           i2l1593:
  3138  000702                     ;main.c: 222:         temp = temp - temp/100*100;
  3139                           	movlw	high(064h)
  3140  000702  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3141  000704  6E34               	movlw	low(064h)
  3142  000706  0E64               	movwf	((c:___awdiv@divisor)),c
  3143  000708  6E33               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3144  00070A  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3145  00070E  C042  F032         	call	___awdiv	;wreg free
  3146  000712  ECCC  F006         	movff	0+?___awdiv,(c:___wmul@multiplier)
  3147  000716  C031  F039         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  3148  00071A  C032  F03A         	movlw	high(064h)
  3149  00071E  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  3150  000720  6E3C               	movlw	low(064h)
  3151  000722  0E64               	movwf	((c:___wmul@multiplicand)),c
  3152  000724  6E3B               	call	___wmul	;wreg free
  3153  000726  ECB2  F008         	comf	(0+?___wmul),c
  3154  00072A  1E39               	comf	(1+?___wmul),c
  3155  00072C  1E3A               	infsnz	(0+?___wmul),c
  3156  00072E  4A39               	incf	(1+?___wmul),c
  3157  000730  2A3A               	movf	((c:PrintDigital@temp)),c,w
  3158  000732  5041               	addwf	(0+?___wmul),c,w
  3159  000734  2439               	movwf	((c:PrintDigital@temp)),c
  3160  000736  6E41               	movf	((c:PrintDigital@temp+1)),c,w
  3161  000738  5042               	addwfc	(1+?___wmul),c,w
  3162  00073A  203A               	movwf	1+((c:PrintDigital@temp)),c
  3163  00073C  6E42               	line	223
  3164                           	
  3165                           i2l1595:
  3166  00073E                     ;main.c: 223:         UART_Write(mystring[lenStr]);
  3167                           	movlw	low(_mystring)
  3168  00073E  0E27               	addwf	((c:_lenStr)),c,w
  3169  000740  2425               	movwf	c:fsr2l
  3170  000742  6ED9               	movlw	high(_mystring)
  3171  000744  0E00               	addwfc	((c:_lenStr+1)),c,w
  3172  000746  2026               	movwf	1+c:fsr2l
  3173  000748  6EDA               	movf	indf2,w
  3174  00074A  50DF               	
  3175                           	call	i2_UART_Write
  3176  00074C  ECF6  F008         	line	224
  3177                           	
  3178                           i2l1597:
  3179  000750                     ;main.c: 224:         lenStr++;
  3180                           	infsnz	((c:_lenStr)),c
  3181  000750  4A25               	incf	((c:_lenStr+1)),c
  3182  000752  2A26               	line	225
  3183                           ;main.c: 225:         lenStr %= 10;
  3184                           	movff	(c:_lenStr),(c:i2___awmod@dividend)
  3185  000754  C025  F031         	movff	(c:_lenStr+1),(c:i2___awmod@dividend+1)
  3186  000758  C026  F032         	movlw	high(0Ah)
  3187  00075C  0E00               	movwf	((c:i2___awmod@divisor+1)),c
  3188  00075E  6E34               	movlw	low(0Ah)
  3189  000760  0E0A               	movwf	((c:i2___awmod@divisor)),c
  3190  000762  6E33               	call	i2___awmod	;wreg free
  3191  000764  ECAE  F007         	movff	0+?i2___awmod,(c:_lenStr)
  3192  000768  C031  F025         	movff	1+?i2___awmod,(c:_lenStr+1)
  3193  00076C  C032  F026         	line	227
  3194                           	
  3195                           i2l1599:
  3196  000770                     ;main.c: 227:         mystring[lenStr] = temp/10 + '0';
  3197                           	movlw	low(_mystring)
  3198  000770  0E27               	addwf	((c:_lenStr)),c,w
  3199  000772  2425               	movwf	c:fsr2l
  3200  000774  6ED9               	movlw	high(_mystring)
  3201  000776  0E00               	addwfc	((c:_lenStr+1)),c,w
  3202  000778  2026               	movwf	1+c:fsr2l
  3203  00077A  6EDA               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3204  00077C  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3205  000780  C042  F032         	movlw	high(0Ah)
  3206  000784  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3207  000786  6E34               	movlw	low(0Ah)
  3208  000788  0E0A               	movwf	((c:___awdiv@divisor)),c
  3209  00078A  6E33               	call	___awdiv	;wreg free
  3210  00078C  ECCC  F006         	movf	(0+?___awdiv),c,w
  3211  000790  5031               	addlw	low(030h)
  3212  000792  0F30               	movwf	indf2,c
  3213  000794  6EDF               
  3214                           	line	228
  3215                           	
  3216                           i2l1601:
  3217  000796                     ;main.c: 228:         temp = temp - temp/10*10;
  3218                           	movlw	high(0Ah)
  3219  000796  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3220  000798  6E34               	movlw	low(0Ah)
  3221  00079A  0E0A               	movwf	((c:___awdiv@divisor)),c
  3222  00079C  6E33               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3223  00079E  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3224  0007A2  C042  F032         	call	___awdiv	;wreg free
  3225  0007A6  ECCC  F006         	movff	0+?___awdiv,(c:___wmul@multiplier)
  3226  0007AA  C031  F039         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  3227  0007AE  C032  F03A         	movlw	high(0Ah)
  3228  0007B2  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  3229  0007B4  6E3C               	movlw	low(0Ah)
  3230  0007B6  0E0A               	movwf	((c:___wmul@multiplicand)),c
  3231  0007B8  6E3B               	call	___wmul	;wreg free
  3232  0007BA  ECB2  F008         	comf	(0+?___wmul),c
  3233  0007BE  1E39               	comf	(1+?___wmul),c
  3234  0007C0  1E3A               	infsnz	(0+?___wmul),c
  3235  0007C2  4A39               	incf	(1+?___wmul),c
  3236  0007C4  2A3A               	movf	((c:PrintDigital@temp)),c,w
  3237  0007C6  5041               	addwf	(0+?___wmul),c,w
  3238  0007C8  2439               	movwf	((c:PrintDigital@temp)),c
  3239  0007CA  6E41               	movf	((c:PrintDigital@temp+1)),c,w
  3240  0007CC  5042               	addwfc	(1+?___wmul),c,w
  3241  0007CE  203A               	movwf	1+((c:PrintDigital@temp)),c
  3242  0007D0  6E42               	line	229
  3243                           	
  3244                           i2l1603:
  3245  0007D2                     ;main.c: 229:         UART_Write(mystring[lenStr]);
  3246                           	movlw	low(_mystring)
  3247  0007D2  0E27               	addwf	((c:_lenStr)),c,w
  3248  0007D4  2425               	movwf	c:fsr2l
  3249  0007D6  6ED9               	movlw	high(_mystring)
  3250  0007D8  0E00               	addwfc	((c:_lenStr+1)),c,w
  3251  0007DA  2026               	movwf	1+c:fsr2l
  3252  0007DC  6EDA               	movf	indf2,w
  3253  0007DE  50DF               	
  3254                           	call	i2_UART_Write
  3255  0007E0  ECF6  F008         	line	230
  3256                           	
  3257                           i2l1605:
  3258  0007E4                     ;main.c: 230:         lenStr++;
  3259                           	infsnz	((c:_lenStr)),c
  3260  0007E4  4A25               	incf	((c:_lenStr+1)),c
  3261  0007E6  2A26               	line	231
  3262                           	
  3263                           i2l1607:
  3264  0007E8                     ;main.c: 231:         lenStr %= 10;
  3265                           	movff	(c:_lenStr),(c:i2___awmod@dividend)
  3266  0007E8  C025  F031         	movff	(c:_lenStr+1),(c:i2___awmod@dividend+1)
  3267  0007EC  C026  F032         	movlw	high(0Ah)
  3268  0007F0  0E00               	movwf	((c:i2___awmod@divisor+1)),c
  3269  0007F2  6E34               	movlw	low(0Ah)
  3270  0007F4  0E0A               	movwf	((c:i2___awmod@divisor)),c
  3271  0007F6  6E33               	call	i2___awmod	;wreg free
  3272  0007F8  ECAE  F007         	movff	0+?i2___awmod,(c:_lenStr)
  3273  0007FC  C031  F025         	movff	1+?i2___awmod,(c:_lenStr+1)
  3274  000800  C032  F026         	line	232
  3275                           ;main.c: 232:     }
  3276                           	goto	i2l1641
  3277  000804  EF18  F005         	line	233
  3278                           ;main.c: 233:     else if(temp/100 > 0)
  3279                           	
  3280                           i2l142:
  3281  000808                     	
  3282                           i2l1609:
  3283  000808                     	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3284  000808  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3285  00080C  C042  F032         	movlw	high(064h)
  3286  000810  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3287  000812  6E34               	movlw	low(064h)
  3288  000814  0E64               	movwf	((c:___awdiv@divisor)),c
  3289  000816  6E33               	call	___awdiv	;wreg free
  3290  000818  ECCC  F006         	btfsc	(1+?___awdiv),c,7
  3291  00081C  BE32               	goto	i2u63_41
  3292  00081E  EF19  F004         	movf	(1+?___awdiv),c,w
  3293  000822  5032               	bnz	i2u63_40
  3294  000824  E108               	decf	(0+?___awdiv),c,w
  3295  000826  0431               	btfss	status,0
  3296  000828  A0D8               	goto	i2u63_41
  3297  00082A  EF19  F004         	goto	i2u63_40
  3298  00082E  EF1B  F004         
  3299                           i2u63_41:
  3300  000832                     	goto	i2l1629
  3301  000832  EFB1  F004         i2u63_40:
  3302  000836                     	line	235
  3303                           	
  3304                           i2l1611:
  3305  000836                     ;main.c: 234:     {;main.c: 235:         mystring[lenStr] = temp/100 + '0';
  3306                           	movlw	low(_mystring)
  3307  000836  0E27               	addwf	((c:_lenStr)),c,w
  3308  000838  2425               	movwf	c:fsr2l
  3309  00083A  6ED9               	movlw	high(_mystring)
  3310  00083C  0E00               	addwfc	((c:_lenStr+1)),c,w
  3311  00083E  2026               	movwf	1+c:fsr2l
  3312  000840  6EDA               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3313  000842  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3314  000846  C042  F032         	movlw	high(064h)
  3315  00084A  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3316  00084C  6E34               	movlw	low(064h)
  3317  00084E  0E64               	movwf	((c:___awdiv@divisor)),c
  3318  000850  6E33               	call	___awdiv	;wreg free
  3319  000852  ECCC  F006         	movf	(0+?___awdiv),c,w
  3320  000856  5031               	addlw	low(030h)
  3321  000858  0F30               	movwf	indf2,c
  3322  00085A  6EDF               
  3323                           	line	236
  3324                           	
  3325                           i2l1613:
  3326  00085C                     ;main.c: 236:         temp = temp - temp/100*100;
  3327                           	movlw	high(064h)
  3328  00085C  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3329  00085E  6E34               	movlw	low(064h)
  3330  000860  0E64               	movwf	((c:___awdiv@divisor)),c
  3331  000862  6E33               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3332  000864  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3333  000868  C042  F032         	call	___awdiv	;wreg free
  3334  00086C  ECCC  F006         	movff	0+?___awdiv,(c:___wmul@multiplier)
  3335  000870  C031  F039         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  3336  000874  C032  F03A         	movlw	high(064h)
  3337  000878  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  3338  00087A  6E3C               	movlw	low(064h)
  3339  00087C  0E64               	movwf	((c:___wmul@multiplicand)),c
  3340  00087E  6E3B               	call	___wmul	;wreg free
  3341  000880  ECB2  F008         	comf	(0+?___wmul),c
  3342  000884  1E39               	comf	(1+?___wmul),c
  3343  000886  1E3A               	infsnz	(0+?___wmul),c
  3344  000888  4A39               	incf	(1+?___wmul),c
  3345  00088A  2A3A               	movf	((c:PrintDigital@temp)),c,w
  3346  00088C  5041               	addwf	(0+?___wmul),c,w
  3347  00088E  2439               	movwf	((c:PrintDigital@temp)),c
  3348  000890  6E41               	movf	((c:PrintDigital@temp+1)),c,w
  3349  000892  5042               	addwfc	(1+?___wmul),c,w
  3350  000894  203A               	movwf	1+((c:PrintDigital@temp)),c
  3351  000896  6E42               	line	237
  3352                           	
  3353                           i2l1615:
  3354  000898                     ;main.c: 237:         UART_Write(mystring[lenStr]);
  3355                           	movlw	low(_mystring)
  3356  000898  0E27               	addwf	((c:_lenStr)),c,w
  3357  00089A  2425               	movwf	c:fsr2l
  3358  00089C  6ED9               	movlw	high(_mystring)
  3359  00089E  0E00               	addwfc	((c:_lenStr+1)),c,w
  3360  0008A0  2026               	movwf	1+c:fsr2l
  3361  0008A2  6EDA               	movf	indf2,w
  3362  0008A4  50DF               	
  3363                           	call	i2_UART_Write
  3364  0008A6  ECF6  F008         	line	238
  3365                           	
  3366                           i2l1617:
  3367  0008AA                     ;main.c: 238:         lenStr++;
  3368                           	infsnz	((c:_lenStr)),c
  3369  0008AA  4A25               	incf	((c:_lenStr+1)),c
  3370  0008AC  2A26               	line	239
  3371                           	
  3372                           i2l1619:
  3373  0008AE                     ;main.c: 239:         lenStr %= 10;
  3374                           	movff	(c:_lenStr),(c:i2___awmod@dividend)
  3375  0008AE  C025  F031         	movff	(c:_lenStr+1),(c:i2___awmod@dividend+1)
  3376  0008B2  C026  F032         	movlw	high(0Ah)
  3377  0008B6  0E00               	movwf	((c:i2___awmod@divisor+1)),c
  3378  0008B8  6E34               	movlw	low(0Ah)
  3379  0008BA  0E0A               	movwf	((c:i2___awmod@divisor)),c
  3380  0008BC  6E33               	call	i2___awmod	;wreg free
  3381  0008BE  ECAE  F007         	movff	0+?i2___awmod,(c:_lenStr)
  3382  0008C2  C031  F025         	movff	1+?i2___awmod,(c:_lenStr+1)
  3383  0008C6  C032  F026         	line	241
  3384                           	
  3385                           i2l1621:
  3386  0008CA                     ;main.c: 241:         mystring[lenStr] = temp/10 + '0';
  3387                           	movlw	low(_mystring)
  3388  0008CA  0E27               	addwf	((c:_lenStr)),c,w
  3389  0008CC  2425               	movwf	c:fsr2l
  3390  0008CE  6ED9               	movlw	high(_mystring)
  3391  0008D0  0E00               	addwfc	((c:_lenStr+1)),c,w
  3392  0008D2  2026               	movwf	1+c:fsr2l
  3393  0008D4  6EDA               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3394  0008D6  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3395  0008DA  C042  F032         	movlw	high(0Ah)
  3396  0008DE  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3397  0008E0  6E34               	movlw	low(0Ah)
  3398  0008E2  0E0A               	movwf	((c:___awdiv@divisor)),c
  3399  0008E4  6E33               	call	___awdiv	;wreg free
  3400  0008E6  ECCC  F006         	movf	(0+?___awdiv),c,w
  3401  0008EA  5031               	addlw	low(030h)
  3402  0008EC  0F30               	movwf	indf2,c
  3403  0008EE  6EDF               
  3404                           	line	242
  3405                           	
  3406                           i2l1623:
  3407  0008F0                     ;main.c: 242:         temp = temp - temp/10*10;
  3408                           	movlw	high(0Ah)
  3409  0008F0  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3410  0008F2  6E34               	movlw	low(0Ah)
  3411  0008F4  0E0A               	movwf	((c:___awdiv@divisor)),c
  3412  0008F6  6E33               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3413  0008F8  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3414  0008FC  C042  F032         	call	___awdiv	;wreg free
  3415  000900  ECCC  F006         	movff	0+?___awdiv,(c:___wmul@multiplier)
  3416  000904  C031  F039         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  3417  000908  C032  F03A         	movlw	high(0Ah)
  3418  00090C  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  3419  00090E  6E3C               	movlw	low(0Ah)
  3420  000910  0E0A               	movwf	((c:___wmul@multiplicand)),c
  3421  000912  6E3B               	call	___wmul	;wreg free
  3422  000914  ECB2  F008         	comf	(0+?___wmul),c
  3423  000918  1E39               	comf	(1+?___wmul),c
  3424  00091A  1E3A               	infsnz	(0+?___wmul),c
  3425  00091C  4A39               	incf	(1+?___wmul),c
  3426  00091E  2A3A               	movf	((c:PrintDigital@temp)),c,w
  3427  000920  5041               	addwf	(0+?___wmul),c,w
  3428  000922  2439               	movwf	((c:PrintDigital@temp)),c
  3429  000924  6E41               	movf	((c:PrintDigital@temp+1)),c,w
  3430  000926  5042               	addwfc	(1+?___wmul),c,w
  3431  000928  203A               	movwf	1+((c:PrintDigital@temp)),c
  3432  00092A  6E42               	line	243
  3433                           	
  3434                           i2l1625:
  3435  00092C                     ;main.c: 243:         UART_Write(mystring[lenStr]);
  3436                           	movlw	low(_mystring)
  3437  00092C  0E27               	addwf	((c:_lenStr)),c,w
  3438  00092E  2425               	movwf	c:fsr2l
  3439  000930  6ED9               	movlw	high(_mystring)
  3440  000932  0E00               	addwfc	((c:_lenStr+1)),c,w
  3441  000934  2026               	movwf	1+c:fsr2l
  3442  000936  6EDA               	movf	indf2,w
  3443  000938  50DF               	
  3444                           	call	i2_UART_Write
  3445  00093A  ECF6  F008         	line	244
  3446                           	
  3447                           i2l1627:
  3448  00093E                     ;main.c: 244:         lenStr++;
  3449                           	infsnz	((c:_lenStr)),c
  3450  00093E  4A25               	incf	((c:_lenStr+1)),c
  3451  000940  2A26               	line	245
  3452                           ;main.c: 245:         lenStr %= 10;
  3453                           	movff	(c:_lenStr),(c:i2___awmod@dividend)
  3454  000942  C025  F031         	movff	(c:_lenStr+1),(c:i2___awmod@dividend+1)
  3455  000946  C026  F032         	movlw	high(0Ah)
  3456  00094A  0E00               	movwf	((c:i2___awmod@divisor+1)),c
  3457  00094C  6E34               	movlw	low(0Ah)
  3458  00094E  0E0A               	movwf	((c:i2___awmod@divisor)),c
  3459  000950  6E33               	call	i2___awmod	;wreg free
  3460  000952  ECAE  F007         	movff	0+?i2___awmod,(c:_lenStr)
  3461  000956  C031  F025         	movff	1+?i2___awmod,(c:_lenStr+1)
  3462  00095A  C032  F026         	line	246
  3463                           ;main.c: 246:     }
  3464                           	goto	i2l1641
  3465  00095E  EF18  F005         	line	247
  3466                           ;main.c: 247:     else if(temp/10 > 0)
  3467                           	
  3468                           i2l144:
  3469  000962                     	
  3470                           i2l1629:
  3471  000962                     	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3472  000962  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3473  000966  C042  F032         	movlw	high(0Ah)
  3474  00096A  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3475  00096C  6E34               	movlw	low(0Ah)
  3476  00096E  0E0A               	movwf	((c:___awdiv@divisor)),c
  3477  000970  6E33               	call	___awdiv	;wreg free
  3478  000972  ECCC  F006         	btfsc	(1+?___awdiv),c,7
  3479  000976  BE32               	goto	i2u64_41
  3480  000978  EFC6  F004         	movf	(1+?___awdiv),c,w
  3481  00097C  5032               	bnz	i2u64_40
  3482  00097E  E108               	decf	(0+?___awdiv),c,w
  3483  000980  0431               	btfss	status,0
  3484  000982  A0D8               	goto	i2u64_41
  3485  000984  EFC6  F004         	goto	i2u64_40
  3486  000988  EFC8  F004         
  3487                           i2u64_41:
  3488  00098C                     	goto	i2l1641
  3489  00098C  EF18  F005         i2u64_40:
  3490  000990                     	line	249
  3491                           	
  3492                           i2l1631:
  3493  000990                     ;main.c: 248:     {;main.c: 249:         mystring[lenStr] = temp/10 + '0';
  3494                           	movlw	low(_mystring)
  3495  000990  0E27               	addwf	((c:_lenStr)),c,w
  3496  000992  2425               	movwf	c:fsr2l
  3497  000994  6ED9               	movlw	high(_mystring)
  3498  000996  0E00               	addwfc	((c:_lenStr+1)),c,w
  3499  000998  2026               	movwf	1+c:fsr2l
  3500  00099A  6EDA               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3501  00099C  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3502  0009A0  C042  F032         	movlw	high(0Ah)
  3503  0009A4  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3504  0009A6  6E34               	movlw	low(0Ah)
  3505  0009A8  0E0A               	movwf	((c:___awdiv@divisor)),c
  3506  0009AA  6E33               	call	___awdiv	;wreg free
  3507  0009AC  ECCC  F006         	movf	(0+?___awdiv),c,w
  3508  0009B0  5031               	addlw	low(030h)
  3509  0009B2  0F30               	movwf	indf2,c
  3510  0009B4  6EDF               
  3511                           	line	250
  3512                           	
  3513                           i2l1633:
  3514  0009B6                     ;main.c: 250:         temp = temp - temp/10*10;
  3515                           	movlw	high(0Ah)
  3516  0009B6  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3517  0009B8  6E34               	movlw	low(0Ah)
  3518  0009BA  0E0A               	movwf	((c:___awdiv@divisor)),c
  3519  0009BC  6E33               	movff	(c:PrintDigital@temp),(c:___awdiv@dividend)
  3520  0009BE  C041  F031         	movff	(c:PrintDigital@temp+1),(c:___awdiv@dividend+1)
  3521  0009C2  C042  F032         	call	___awdiv	;wreg free
  3522  0009C6  ECCC  F006         	movff	0+?___awdiv,(c:___wmul@multiplier)
  3523  0009CA  C031  F039         	movff	1+?___awdiv,(c:___wmul@multiplier+1)
  3524  0009CE  C032  F03A         	movlw	high(0Ah)
  3525  0009D2  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  3526  0009D4  6E3C               	movlw	low(0Ah)
  3527  0009D6  0E0A               	movwf	((c:___wmul@multiplicand)),c
  3528  0009D8  6E3B               	call	___wmul	;wreg free
  3529  0009DA  ECB2  F008         	comf	(0+?___wmul),c
  3530  0009DE  1E39               	comf	(1+?___wmul),c
  3531  0009E0  1E3A               	infsnz	(0+?___wmul),c
  3532  0009E2  4A39               	incf	(1+?___wmul),c
  3533  0009E4  2A3A               	movf	((c:PrintDigital@temp)),c,w
  3534  0009E6  5041               	addwf	(0+?___wmul),c,w
  3535  0009E8  2439               	movwf	((c:PrintDigital@temp)),c
  3536  0009EA  6E41               	movf	((c:PrintDigital@temp+1)),c,w
  3537  0009EC  5042               	addwfc	(1+?___wmul),c,w
  3538  0009EE  203A               	movwf	1+((c:PrintDigital@temp)),c
  3539  0009F0  6E42               	line	251
  3540                           	
  3541                           i2l1635:
  3542  0009F2                     ;main.c: 251:         UART_Write(mystring[lenStr]);
  3543                           	movlw	low(_mystring)
  3544  0009F2  0E27               	addwf	((c:_lenStr)),c,w
  3545  0009F4  2425               	movwf	c:fsr2l
  3546  0009F6  6ED9               	movlw	high(_mystring)
  3547  0009F8  0E00               	addwfc	((c:_lenStr+1)),c,w
  3548  0009FA  2026               	movwf	1+c:fsr2l
  3549  0009FC  6EDA               	movf	indf2,w
  3550  0009FE  50DF               	
  3551                           	call	i2_UART_Write
  3552  000A00  ECF6  F008         	line	252
  3553                           	
  3554                           i2l1637:
  3555  000A04                     ;main.c: 252:         lenStr++;
  3556                           	infsnz	((c:_lenStr)),c
  3557  000A04  4A25               	incf	((c:_lenStr+1)),c
  3558  000A06  2A26               	line	253
  3559                           	
  3560                           i2l1639:
  3561  000A08                     ;main.c: 253:         lenStr %= 10;
  3562                           	movff	(c:_lenStr),(c:i2___awmod@dividend)
  3563  000A08  C025  F031         	movff	(c:_lenStr+1),(c:i2___awmod@dividend+1)
  3564  000A0C  C026  F032         	movlw	high(0Ah)
  3565  000A10  0E00               	movwf	((c:i2___awmod@divisor+1)),c
  3566  000A12  6E34               	movlw	low(0Ah)
  3567  000A14  0E0A               	movwf	((c:i2___awmod@divisor)),c
  3568  000A16  6E33               	call	i2___awmod	;wreg free
  3569  000A18  ECAE  F007         	movff	0+?i2___awmod,(c:_lenStr)
  3570  000A1C  C031  F025         	movff	1+?i2___awmod,(c:_lenStr+1)
  3571  000A20  C032  F026         	goto	i2l1641
  3572  000A24  EF18  F005         	line	254
  3573                           ;main.c: 254:     }
  3574                           	
  3575                           i2l146:
  3576  000A28                     	goto	i2l1641
  3577  000A28  EF18  F005         	
  3578                           i2l145:
  3579  000A2C                     	goto	i2l1641
  3580  000A2C  EF18  F005         	
  3581                           i2l143:
  3582  000A30                     	line	256
  3583                           	
  3584                           i2l1641:
  3585  000A30                     ;main.c: 256:     mystring[lenStr] = temp + '0';
  3586                           	movlw	low(_mystring)
  3587  000A30  0E27               	addwf	((c:_lenStr)),c,w
  3588  000A32  2425               	movwf	c:fsr2l
  3589  000A34  6ED9               	movlw	high(_mystring)
  3590  000A36  0E00               	addwfc	((c:_lenStr+1)),c,w
  3591  000A38  2026               	movwf	1+c:fsr2l
  3592  000A3A  6EDA               	movf	((c:PrintDigital@temp)),c,w
  3593  000A3C  5041               	addlw	low(030h)
  3594  000A3E  0F30               	movwf	indf2,c
  3595  000A40  6EDF               
  3596                           	line	257
  3597                           	
  3598                           i2l1643:
  3599  000A42                     ;main.c: 257:     UART_Write(mystring[lenStr]);
  3600                           	movlw	low(_mystring)
  3601  000A42  0E27               	addwf	((c:_lenStr)),c,w
  3602  000A44  2425               	movwf	c:fsr2l
  3603  000A46  6ED9               	movlw	high(_mystring)
  3604  000A48  0E00               	addwfc	((c:_lenStr+1)),c,w
  3605  000A4A  2026               	movwf	1+c:fsr2l
  3606  000A4C  6EDA               	movf	indf2,w
  3607  000A4E  50DF               	
  3608                           	call	i2_UART_Write
  3609  000A50  ECF6  F008         	line	258
  3610                           	
  3611                           i2l1645:
  3612  000A54                     ;main.c: 258:     lenStr++;
  3613                           	infsnz	((c:_lenStr)),c
  3614  000A54  4A25               	incf	((c:_lenStr+1)),c
  3615  000A56  2A26               	line	259
  3616                           	
  3617                           i2l1647:
  3618  000A58                     ;main.c: 259:     lenStr %= 10;
  3619                           	movff	(c:_lenStr),(c:i2___awmod@dividend)
  3620  000A58  C025  F031         	movff	(c:_lenStr+1),(c:i2___awmod@dividend+1)
  3621  000A5C  C026  F032         	movlw	high(0Ah)
  3622  000A60  0E00               	movwf	((c:i2___awmod@divisor+1)),c
  3623  000A62  6E34               	movlw	low(0Ah)
  3624  000A64  0E0A               	movwf	((c:i2___awmod@divisor)),c
  3625  000A66  6E33               	call	i2___awmod	;wreg free
  3626  000A68  ECAE  F007         	movff	0+?i2___awmod,(c:_lenStr)
  3627  000A6C  C031  F025         	movff	1+?i2___awmod,(c:_lenStr+1)
  3628  000A70  C032  F026         	goto	i2l147
  3629  000A74  EF3C  F005         	line	265
  3630                           	
  3631                           i2l1649:
  3632  000A78                     	line	266
  3633                           ;main.c: 265:     return ;
  3634                           	
  3635                           i2l147:
  3636  000A78                     	return	;funcret
  3637  000A78  0012               	opt stack 0
  3638                           GLOBAL	__end_of_PrintDigital
  3639                           	__end_of_PrintDigital:
  3640  000A7A                     	signat	_PrintDigital,4217
  3641                           	global	i2___awmod
  3642                           
  3643 ;; *************** function i2___awmod *****************
  3644 ;; Defined at:
  3645 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;  dividend        2    0[COMRAM] int 
  3648 ;;  divisor         2    2[COMRAM] int 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  __awmod         1    5[COMRAM] unsigned char 
  3651 ;;  __awmod         1    4[COMRAM] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  2    0[COMRAM] int 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3661 ;;      Params:         4       0       0       0       0       0       0
  3662 ;;      Locals:         2       0       0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0
  3664 ;;      Totals:         6       0       0       0       0       0       0
  3665 ;;Total ram usage:        6 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_PrintDigital
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           psect	text15,class=CODE,space=0,reloc=2,group=0
  3674                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  3675                           	line	7
  3676                           global __ptext15
  3677                           __ptext15:
  3678  000F5C                     psect	text15
  3679                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
  3680                           	line	7
  3681                           	global	__size_ofi2___awmod
  3682                           	__size_ofi2___awmod	equ	__end_ofi2___awmod-i2___awmod
  3683  0000                     	
  3684                           i2___awmod:
  3685  000F5C                     ;incstack = 0
  3686                           	opt	stack 23
  3687                           	line	12
  3688                           	
  3689                           i2l1529:
  3690  000F5C                     	movlw	low(0)
  3691  000F5C  0E00               	movwf	((c:i2___awmod@sign)),c
  3692  000F5E  6E36               	line	13
  3693                           	
  3694                           i2l1531:
  3695  000F60                     	btfsc	((c:i2___awmod@dividend+1)),c,7
  3696  000F60  BE32               	goto	i2u55_40
  3697  000F62  EFB7  F007         	goto	i2u55_41
  3698  000F66  EFB5  F007         
  3699                           i2u55_41:
  3700  000F6A                     	goto	i2l1537
  3701  000F6A  EFBF  F007         i2u55_40:
  3702  000F6E                     	line	14
  3703                           	
  3704                           i2l1533:
  3705  000F6E                     	negf	((c:i2___awmod@dividend)),c
  3706  000F6E  6C31               	comf	((c:i2___awmod@dividend+1)),c
  3707  000F70  1E32               	btfsc	status,0
  3708  000F72  B0D8               	incf	((c:i2___awmod@dividend+1)),c
  3709  000F74  2A32               	line	15
  3710                           	
  3711                           i2l1535:
  3712  000F76                     	movlw	low(01h)
  3713  000F76  0E01               	movwf	((c:i2___awmod@sign)),c
  3714  000F78  6E36               	goto	i2l1537
  3715  000F7A  EFBF  F007         	line	16
  3716                           	
  3717                           i2l463:
  3718  000F7E                     	line	17
  3719                           	
  3720                           i2l1537:
  3721  000F7E                     	btfsc	((c:i2___awmod@divisor+1)),c,7
  3722  000F7E  BE34               	goto	i2u56_40
  3723  000F80  EFC6  F007         	goto	i2u56_41
  3724  000F84  EFC4  F007         
  3725                           i2u56_41:
  3726  000F88                     	goto	i2l1541
  3727  000F88  EFCC  F007         i2u56_40:
  3728  000F8C                     	line	18
  3729                           	
  3730                           i2l1539:
  3731  000F8C                     	negf	((c:i2___awmod@divisor)),c
  3732  000F8C  6C33               	comf	((c:i2___awmod@divisor+1)),c
  3733  000F8E  1E34               	btfsc	status,0
  3734  000F90  B0D8               	incf	((c:i2___awmod@divisor+1)),c
  3735  000F92  2A34               	goto	i2l1541
  3736  000F94  EFCC  F007         	
  3737                           i2l464:
  3738  000F98                     	line	19
  3739                           	
  3740                           i2l1541:
  3741  000F98                     	movf	((c:i2___awmod@divisor)),c,w
  3742  000F98  5033               iorwf	((c:i2___awmod@divisor+1)),c,w
  3743  000F9A  1034               	btfsc	status,2
  3744  000F9C  B4D8               	goto	i2u57_41
  3745  000F9E  EFD3  F007         	goto	i2u57_40
  3746  000FA2  EFD5  F007         
  3747                           i2u57_41:
  3748  000FA6                     	goto	i2l1557
  3749  000FA6  EF05  F008         i2u57_40:
  3750  000FAA                     	line	20
  3751                           	
  3752                           i2l1543:
  3753  000FAA                     	movlw	low(01h)
  3754  000FAA  0E01               	movwf	((c:i2___awmod@counter)),c
  3755  000FAC  6E35               	line	21
  3756                           	goto	i2l1547
  3757  000FAE  EFDF  F007         	
  3758                           i2l467:
  3759  000FB2                     	line	22
  3760                           	
  3761                           i2l1545:
  3762  000FB2                     	bcf	status,0
  3763  000FB2  90D8               	rlcf	((c:i2___awmod@divisor)),c
  3764  000FB4  3633               	rlcf	((c:i2___awmod@divisor+1)),c
  3765  000FB6  3634               	line	23
  3766                           	incf	((c:i2___awmod@counter)),c
  3767  000FB8  2A35               	goto	i2l1547
  3768  000FBA  EFDF  F007         	line	24
  3769                           	
  3770                           i2l466:
  3771  000FBE                     	line	21
  3772                           	
  3773                           i2l1547:
  3774  000FBE                     	
  3775                           	btfss	((c:i2___awmod@divisor+1)),c,(15)&7
  3776  000FBE  AE34               	goto	i2u58_41
  3777  000FC0  EFE4  F007         	goto	i2u58_40
  3778  000FC4  EFE6  F007         i2u58_41:
  3779  000FC8                     	goto	i2l1545
  3780  000FC8  EFD9  F007         i2u58_40:
  3781  000FCC                     	goto	i2l1549
  3782  000FCC  EFEA  F007         	
  3783                           i2l468:
  3784  000FD0                     	goto	i2l1549
  3785  000FD0  EFEA  F007         	line	25
  3786                           	
  3787                           i2l469:
  3788  000FD4                     	line	26
  3789                           	
  3790                           i2l1549:
  3791  000FD4                     		movf	((c:i2___awmod@divisor)),c,w
  3792  000FD4  5033               	subwf	((c:i2___awmod@dividend)),c,w
  3793  000FD6  5C31               	movf	((c:i2___awmod@divisor+1)),c,w
  3794  000FD8  5034               	subwfb	((c:i2___awmod@dividend+1)),c,w
  3795  000FDA  5832               	btfss	status,0
  3796  000FDC  A0D8               	goto	i2u59_41
  3797  000FDE  EFF3  F007         	goto	i2u59_40
  3798  000FE2  EFF5  F007         
  3799                           i2u59_41:
  3800  000FE6                     	goto	i2l1553
  3801  000FE6  EFFB  F007         i2u59_40:
  3802  000FEA                     	line	27
  3803                           	
  3804                           i2l1551:
  3805  000FEA                     	movf	((c:i2___awmod@divisor)),c,w
  3806  000FEA  5033               	subwf	((c:i2___awmod@dividend)),c
  3807  000FEC  5E31               	movf	((c:i2___awmod@divisor+1)),c,w
  3808  000FEE  5034               	subwfb	((c:i2___awmod@dividend+1)),c
  3809  000FF0  5A32               
  3810                           	goto	i2l1553
  3811  000FF2  EFFB  F007         	
  3812                           i2l470:
  3813  000FF6                     	line	28
  3814                           	
  3815                           i2l1553:
  3816  000FF6                     	bcf	status,0
  3817  000FF6  90D8               	rrcf	((c:i2___awmod@divisor+1)),c
  3818  000FF8  3234               	rrcf	((c:i2___awmod@divisor)),c
  3819  000FFA  3233               	line	29
  3820                           	
  3821                           i2l1555:
  3822  000FFC                     	decfsz	((c:i2___awmod@counter)),c
  3823  000FFC  2E35               	
  3824                           	goto	i2l1549
  3825  000FFE  EFEA  F007         	goto	i2l1557
  3826  001002  EF05  F008         	
  3827                           i2l471:
  3828  001006                     	goto	i2l1557
  3829  001006  EF05  F008         	line	30
  3830                           	
  3831                           i2l465:
  3832  00100A                     	line	31
  3833                           	
  3834                           i2l1557:
  3835  00100A                     	movf	((c:i2___awmod@sign)),c,w
  3836  00100A  5036               	btfsc	status,2
  3837  00100C  B4D8               	goto	i2u60_41
  3838  00100E  EF0B  F008         	goto	i2u60_40
  3839  001012  EF0D  F008         i2u60_41:
  3840  001016                     	goto	i2l1561
  3841  001016  EF13  F008         i2u60_40:
  3842  00101A                     	line	32
  3843                           	
  3844                           i2l1559:
  3845  00101A                     	negf	((c:i2___awmod@dividend)),c
  3846  00101A  6C31               	comf	((c:i2___awmod@dividend+1)),c
  3847  00101C  1E32               	btfsc	status,0
  3848  00101E  B0D8               	incf	((c:i2___awmod@dividend+1)),c
  3849  001020  2A32               	goto	i2l1561
  3850  001022  EF13  F008         	
  3851                           i2l472:
  3852  001026                     	line	33
  3853                           	
  3854                           i2l1561:
  3855  001026                     	movff	(c:i2___awmod@dividend),(c:?i2___awmod)
  3856  001026  C031  F031         	movff	(c:i2___awmod@dividend+1),(c:?i2___awmod+1)
  3857  00102A  C032  F032         	goto	i2l473
  3858  00102E  EF19  F008         	
  3859                           i2l1563:
  3860  001032                     	line	34
  3861                           	
  3862                           i2l473:
  3863  001032                     	return	;funcret
  3864  001032  0012               	opt stack 0
  3865                           GLOBAL	__end_ofi2___awmod
  3866                           	__end_ofi2___awmod:
  3867  001034                     	signat	i2___awmod,90
  3868                           	global	i2_UART_Write
  3869                           
  3870 ;; *************** function i2_UART_Write *****************
  3871 ;; Defined at:
  3872 ;;		line 509 in file "main.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  data            1    wreg     unsigned char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  data            1    0[COMRAM] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3886 ;;      Params:         0       0       0       0       0       0       0
  3887 ;;      Locals:         1       0       0       0       0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0
  3889 ;;      Totals:         1       0       0       0       0       0       0
  3890 ;;Total ram usage:        1 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_PrintDigital
  3896 ;;		_Hi_ISR
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           psect	text16,class=CODE,space=0,reloc=2,group=0
  3900                           	file	"main.c"
  3901                           	line	509
  3902                           global __ptext16
  3903                           __ptext16:
  3904  0011EC                     psect	text16
  3905                           	file	"main.c"
  3906                           	line	509
  3907                           	global	__size_ofi2_UART_Write
  3908                           	__size_ofi2_UART_Write	equ	__end_ofi2_UART_Write-i2_UART_Write
  3909  0000                     	
  3910                           i2_UART_Write:
  3911  0011EC                     ;incstack = 0
  3912                           	opt	stack 24
  3913                           ;i2UART_Write@data stored from wreg
  3914                           	movwf	((c:i2UART_Write@data)),c
  3915  0011EC  6E31               	line	511
  3916                           	
  3917                           i2l1525:
  3918  0011EE                     ;main.c: 509: void UART_Write(unsigned char data);main.c: 510: {;main.c: 511:     while(
                                 !TXSTAbits.TRMT);
  3919                           	goto	i2l193
  3920  0011EE  EFF9  F008         	
  3921                           i2l194:
  3922  0011F2                     	
  3923                           i2l193:
  3924  0011F2                     	btfss	((c:4012)),c,1	;volatile
  3925  0011F2  A2AC               	goto	i2u54_41
  3926  0011F4  EFFE  F008         	goto	i2u54_40
  3927  0011F8  EF00  F009         i2u54_41:
  3928  0011FC                     	goto	i2l193
  3929  0011FC  EFF9  F008         i2u54_40:
  3930  001200                     	goto	i2l1527
  3931  001200  EF02  F009         	
  3932                           i2l195:
  3933  001204                     	line	512
  3934                           	
  3935                           i2l1527:
  3936  001204                     ;main.c: 512:     TXREG = data;
  3937                           	movff	(c:i2UART_Write@data),(c:4013)	;volatile
  3938  001204  C031  FFAD         	line	513
  3939                           	
  3940                           i2l196:
  3941  001208                     	return	;funcret
  3942  001208  0012               	opt stack 0
  3943                           GLOBAL	__end_ofi2_UART_Write
  3944                           	__end_ofi2_UART_Write:
  3945  00120A                     	signat	i2_UART_Write,89
  3946                           	global	___wmul
  3947                           
  3948 ;; *************** function ___wmul *****************
  3949 ;; Defined at:
  3950 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  multiplier      2    8[COMRAM] unsigned int 
  3953 ;;  multiplicand    2   10[COMRAM] unsigned int 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  product         2   12[COMRAM] unsigned int 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  2    8[COMRAM] unsigned int 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, prodl, prodh
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3965 ;;      Params:         4       0       0       0       0       0       0
  3966 ;;      Locals:         2       0       0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0
  3968 ;;      Totals:         6       0       0       0       0       0       0
  3969 ;;Total ram usage:        6 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_PrintDigital
  3975 ;;		_PrintVoltage
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           psect	text17,class=CODE,space=0,reloc=2,group=1
  3979                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  3980                           	line	15
  3981                           global __ptext17
  3982                           __ptext17:
  3983  001164                     psect	text17
  3984                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  3985                           	line	15
  3986                           	global	__size_of___wmul
  3987                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  3988  0000                     	
  3989                           ___wmul:
  3990  001164                     ;incstack = 0
  3991                           	opt	stack 23
  3992                           	line	37
  3993                           	
  3994                           i2l1439:
  3995  001164                     	movf	((c:___wmul@multiplier)),c,w
  3996  001164  5039               	mulwf	((c:___wmul@multiplicand)),c
  3997  001166  023B               	movff	prodl,(c:___wmul@product)
  3998  001168  CFF3 F03D          	movff	prodh,(c:___wmul@product+1)
  3999  00116C  CFF4 F03E          	line	38
  4000                           	movf	((c:___wmul@multiplier)),c,w
  4001  001170  5039               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
  4002  001172  023C               	movf	(prodl),c,w
  4003  001174  50F3               	addwf	((c:___wmul@product+1)),c
  4004  001176  263E               
  4005                           	line	39
  4006                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
  4007  001178  503A               	mulwf	((c:___wmul@multiplicand)),c
  4008  00117A  023B               	movf	(prodl),c,w
  4009  00117C  50F3               	addwf	((c:___wmul@product+1)),c
  4010  00117E  263E               
  4011                           	line	52
  4012                           	
  4013                           i2l1441:
  4014  001180                     	movff	(c:___wmul@product),(c:?___wmul)
  4015  001180  C03D  F039         	movff	(c:___wmul@product+1),(c:?___wmul+1)
  4016  001184  C03E  F03A         	goto	i2l229
  4017  001188  EFC6  F008         	
  4018                           i2l1443:
  4019  00118C                     	line	53
  4020                           	
  4021                           i2l229:
  4022  00118C                     	return	;funcret
  4023  00118C  0012               	opt stack 0
  4024                           GLOBAL	__end_of___wmul
  4025                           	__end_of___wmul:
  4026  00118E                     	signat	___wmul,8314
  4027                           	global	___awdiv
  4028                           
  4029 ;; *************** function ___awdiv *****************
  4030 ;; Defined at:
  4031 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  dividend        2    0[COMRAM] int 
  4034 ;;  divisor         2    2[COMRAM] int 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  quotient        2    6[COMRAM] int 
  4037 ;;  sign            1    5[COMRAM] unsigned char 
  4038 ;;  counter         1    4[COMRAM] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  2    0[COMRAM] int 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4048 ;;      Params:         4       0       0       0       0       0       0
  4049 ;;      Locals:         4       0       0       0       0       0       0
  4050 ;;      Temps:          0       0       0       0       0       0       0
  4051 ;;      Totals:         8       0       0       0       0       0       0
  4052 ;;Total ram usage:        8 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_PrintDigital
  4058 ;;		_PrintVoltage
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           psect	text18,class=CODE,space=0,reloc=2,group=1
  4062                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4063                           	line	7
  4064                           global __ptext18
  4065                           __ptext18:
  4066  000D98                     psect	text18
  4067                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
  4068                           	line	7
  4069                           	global	__size_of___awdiv
  4070                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4071  0000                     	
  4072                           ___awdiv:
  4073  000D98                     ;incstack = 0
  4074                           	opt	stack 23
  4075                           	line	13
  4076                           	
  4077                           i2l1445:
  4078  000D98                     	movlw	low(0)
  4079  000D98  0E00               	movwf	((c:___awdiv@sign)),c
  4080  000D9A  6E36               	line	14
  4081                           	
  4082                           i2l1447:
  4083  000D9C                     	btfsc	((c:___awdiv@divisor+1)),c,7
  4084  000D9C  BE34               	goto	i2u42_40
  4085  000D9E  EFD5  F006         	goto	i2u42_41
  4086  000DA2  EFD3  F006         
  4087                           i2u42_41:
  4088  000DA6                     	goto	i2l1453
  4089  000DA6  EFDD  F006         i2u42_40:
  4090  000DAA                     	line	15
  4091                           	
  4092                           i2l1449:
  4093  000DAA                     	negf	((c:___awdiv@divisor)),c
  4094  000DAA  6C33               	comf	((c:___awdiv@divisor+1)),c
  4095  000DAC  1E34               	btfsc	status,0
  4096  000DAE  B0D8               	incf	((c:___awdiv@divisor+1)),c
  4097  000DB0  2A34               	line	16
  4098                           	
  4099                           i2l1451:
  4100  000DB2                     	movlw	low(01h)
  4101  000DB2  0E01               	movwf	((c:___awdiv@sign)),c
  4102  000DB4  6E36               	goto	i2l1453
  4103  000DB6  EFDD  F006         	line	17
  4104                           	
  4105                           i2l450:
  4106  000DBA                     	line	18
  4107                           	
  4108                           i2l1453:
  4109  000DBA                     	btfsc	((c:___awdiv@dividend+1)),c,7
  4110  000DBA  BE32               	goto	i2u43_40
  4111  000DBC  EFE4  F006         	goto	i2u43_41
  4112  000DC0  EFE2  F006         
  4113                           i2u43_41:
  4114  000DC4                     	goto	i2l1459
  4115  000DC4  EFEC  F006         i2u43_40:
  4116  000DC8                     	line	19
  4117                           	
  4118                           i2l1455:
  4119  000DC8                     	negf	((c:___awdiv@dividend)),c
  4120  000DC8  6C31               	comf	((c:___awdiv@dividend+1)),c
  4121  000DCA  1E32               	btfsc	status,0
  4122  000DCC  B0D8               	incf	((c:___awdiv@dividend+1)),c
  4123  000DCE  2A32               	line	20
  4124                           	
  4125                           i2l1457:
  4126  000DD0                     	movlw	(01h)&0ffh
  4127  000DD0  0E01               	xorwf	((c:___awdiv@sign)),c
  4128  000DD2  1A36               	goto	i2l1459
  4129  000DD4  EFEC  F006         	line	21
  4130                           	
  4131                           i2l451:
  4132  000DD8                     	line	22
  4133                           	
  4134                           i2l1459:
  4135  000DD8                     	movlw	high(0)
  4136  000DD8  0E00               	movwf	((c:___awdiv@quotient+1)),c
  4137  000DDA  6E38               	movlw	low(0)
  4138  000DDC  0E00               	movwf	((c:___awdiv@quotient)),c
  4139  000DDE  6E37               	line	23
  4140                           	
  4141                           i2l1461:
  4142  000DE0                     	movf	((c:___awdiv@divisor)),c,w
  4143  000DE0  5033               iorwf	((c:___awdiv@divisor+1)),c,w
  4144  000DE2  1034               	btfsc	status,2
  4145  000DE4  B4D8               	goto	i2u44_41
  4146  000DE6  EFF7  F006         	goto	i2u44_40
  4147  000DEA  EFF9  F006         
  4148                           i2u44_41:
  4149  000DEE                     	goto	i2l1481
  4150  000DEE  EF2D  F007         i2u44_40:
  4151  000DF2                     	line	24
  4152                           	
  4153                           i2l1463:
  4154  000DF2                     	movlw	low(01h)
  4155  000DF2  0E01               	movwf	((c:___awdiv@counter)),c
  4156  000DF4  6E35               	line	25
  4157                           	goto	i2l1467
  4158  000DF6  EF03  F007         	
  4159                           i2l454:
  4160  000DFA                     	line	26
  4161                           	
  4162                           i2l1465:
  4163  000DFA                     	bcf	status,0
  4164  000DFA  90D8               	rlcf	((c:___awdiv@divisor)),c
  4165  000DFC  3633               	rlcf	((c:___awdiv@divisor+1)),c
  4166  000DFE  3634               	line	27
  4167                           	incf	((c:___awdiv@counter)),c
  4168  000E00  2A35               	goto	i2l1467
  4169  000E02  EF03  F007         	line	28
  4170                           	
  4171                           i2l453:
  4172  000E06                     	line	25
  4173                           	
  4174                           i2l1467:
  4175  000E06                     	
  4176                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  4177  000E06  AE34               	goto	i2u45_41
  4178  000E08  EF08  F007         	goto	i2u45_40
  4179  000E0C  EF0A  F007         i2u45_41:
  4180  000E10                     	goto	i2l1465
  4181  000E10  EFFD  F006         i2u45_40:
  4182  000E14                     	goto	i2l1469
  4183  000E14  EF0E  F007         	
  4184                           i2l455:
  4185  000E18                     	goto	i2l1469
  4186  000E18  EF0E  F007         	line	29
  4187                           	
  4188                           i2l456:
  4189  000E1C                     	line	30
  4190                           	
  4191                           i2l1469:
  4192  000E1C                     	bcf	status,0
  4193  000E1C  90D8               	rlcf	((c:___awdiv@quotient)),c
  4194  000E1E  3637               	rlcf	((c:___awdiv@quotient+1)),c
  4195  000E20  3638               	line	31
  4196                           	
  4197                           i2l1471:
  4198  000E22                     		movf	((c:___awdiv@divisor)),c,w
  4199  000E22  5033               	subwf	((c:___awdiv@dividend)),c,w
  4200  000E24  5C31               	movf	((c:___awdiv@divisor+1)),c,w
  4201  000E26  5034               	subwfb	((c:___awdiv@dividend+1)),c,w
  4202  000E28  5832               	btfss	status,0
  4203  000E2A  A0D8               	goto	i2u46_41
  4204  000E2C  EF1A  F007         	goto	i2u46_40
  4205  000E30  EF1C  F007         
  4206                           i2u46_41:
  4207  000E34                     	goto	i2l1477
  4208  000E34  EF23  F007         i2u46_40:
  4209  000E38                     	line	32
  4210                           	
  4211                           i2l1473:
  4212  000E38                     	movf	((c:___awdiv@divisor)),c,w
  4213  000E38  5033               	subwf	((c:___awdiv@dividend)),c
  4214  000E3A  5E31               	movf	((c:___awdiv@divisor+1)),c,w
  4215  000E3C  5034               	subwfb	((c:___awdiv@dividend+1)),c
  4216  000E3E  5A32               
  4217                           	line	33
  4218                           	
  4219                           i2l1475:
  4220  000E40                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
  4221  000E40  8037               	goto	i2l1477
  4222  000E42  EF23  F007         	line	34
  4223                           	
  4224                           i2l457:
  4225  000E46                     	line	35
  4226                           	
  4227                           i2l1477:
  4228  000E46                     	bcf	status,0
  4229  000E46  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  4230  000E48  3234               	rrcf	((c:___awdiv@divisor)),c
  4231  000E4A  3233               	line	36
  4232                           	
  4233                           i2l1479:
  4234  000E4C                     	decfsz	((c:___awdiv@counter)),c
  4235  000E4C  2E35               	
  4236                           	goto	i2l1469
  4237  000E4E  EF0E  F007         	goto	i2l1481
  4238  000E52  EF2D  F007         	
  4239                           i2l458:
  4240  000E56                     	goto	i2l1481
  4241  000E56  EF2D  F007         	line	37
  4242                           	
  4243                           i2l452:
  4244  000E5A                     	line	38
  4245                           	
  4246                           i2l1481:
  4247  000E5A                     	movf	((c:___awdiv@sign)),c,w
  4248  000E5A  5036               	btfsc	status,2
  4249  000E5C  B4D8               	goto	i2u47_41
  4250  000E5E  EF33  F007         	goto	i2u47_40
  4251  000E62  EF35  F007         i2u47_41:
  4252  000E66                     	goto	i2l1485
  4253  000E66  EF3B  F007         i2u47_40:
  4254  000E6A                     	line	39
  4255                           	
  4256                           i2l1483:
  4257  000E6A                     	negf	((c:___awdiv@quotient)),c
  4258  000E6A  6C37               	comf	((c:___awdiv@quotient+1)),c
  4259  000E6C  1E38               	btfsc	status,0
  4260  000E6E  B0D8               	incf	((c:___awdiv@quotient+1)),c
  4261  000E70  2A38               	goto	i2l1485
  4262  000E72  EF3B  F007         	
  4263                           i2l459:
  4264  000E76                     	line	40
  4265                           	
  4266                           i2l1485:
  4267  000E76                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
  4268  000E76  C037  F031         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
  4269  000E7A  C038  F032         	goto	i2l460
  4270  000E7E  EF41  F007         	
  4271                           i2l1487:
  4272  000E82                     	line	41
  4273                           	
  4274                           i2l460:
  4275  000E82                     	return	;funcret
  4276  000E82  0012               	opt stack 0
  4277                           GLOBAL	__end_of___awdiv
  4278                           	__end_of___awdiv:
  4279  000E84                     	signat	___awdiv,8314
  4280                           	global	_ADC_Read
  4281                           
  4282 ;; *************** function _ADC_Read *****************
  4283 ;; Defined at:
  4284 ;;		line 537 in file "main.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  channel         2    0[COMRAM] int 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  digital         2    4[COMRAM] int 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  2    0[COMRAM] int 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4298 ;;      Params:         2       0       0       0       0       0       0
  4299 ;;      Locals:         2       0       0       0       0       0       0
  4300 ;;      Temps:          2       0       0       0       0       0       0
  4301 ;;      Totals:         6       0       0       0       0       0       0
  4302 ;;Total ram usage:        6 bytes
  4303 ;; Hardware stack levels used:    1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_Hi_ISR
  4308 ;;		_Mode2_2
  4309 ;;		_Mode3
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           psect	text19,class=CODE,space=0,reloc=2,group=0
  4313                           	file	"main.c"
  4314                           	line	537
  4315                           global __ptext19
  4316                           __ptext19:
  4317  00109E                     psect	text19
  4318                           	file	"main.c"
  4319                           	line	537
  4320                           	global	__size_of_ADC_Read
  4321                           	__size_of_ADC_Read	equ	__end_of_ADC_Read-_ADC_Read
  4322  0000                     	
  4323                           _ADC_Read:
  4324  00109E                     ;incstack = 0
  4325                           	opt	stack 24
  4326                           	line	541
  4327                           	
  4328                           i2l1565:
  4329  00109E                     ;main.c: 537: int ADC_Read(int channel);main.c: 538: {;main.c: 539:     int digital;;mai
                                 n.c: 541:     ADCON0bits.CHS = channel ;
  4330                           	movff	(c:ADC_Read@channel),??_ADC_Read+0+0
  4331  00109E  C031  F033         	rlncf	(??_ADC_Read+0+0),c
  4332  0010A2  4633               	rlncf	(??_ADC_Read+0+0),c
  4333  0010A4  4633               	movf	((c:4034)),c,w	;volatile
  4334  0010A6  50C2               	xorwf	(??_ADC_Read+0+0),c,w
  4335  0010A8  1833               	andlw	not (((1<<4)-1)<<2)
  4336  0010AA  0BC3               	xorwf	(??_ADC_Read+0+0),c,w
  4337  0010AC  1833               	movwf	((c:4034)),c	;volatile
  4338  0010AE  6EC2               	line	542
  4339                           	
  4340                           i2l1567:
  4341  0010B0                     ;main.c: 542:     ADCON0bits.GO = 1;
  4342                           	bsf	((c:4034)),c,1	;volatile
  4343  0010B0  82C2               	line	543
  4344                           	
  4345                           i2l1569:
  4346  0010B2                     ;main.c: 543:     ADCON0bits.ADON = 1;
  4347                           	bsf	((c:4034)),c,0	;volatile
  4348  0010B2  80C2               	line	545
  4349                           ;main.c: 545:     while(ADCON0bits.GO_nDONE==1);
  4350                           	goto	i2l213
  4351  0010B4  EF5C  F008         	
  4352                           i2l214:
  4353  0010B8                     	
  4354                           i2l213:
  4355  0010B8                     	btfsc	((c:4034)),c,1	;volatile
  4356  0010B8  B2C2               	goto	i2u61_41
  4357  0010BA  EF61  F008         	goto	i2u61_40
  4358  0010BE  EF63  F008         i2u61_41:
  4359  0010C2                     	goto	i2l213
  4360  0010C2  EF5C  F008         i2u61_40:
  4361  0010C6                     	goto	i2l1571
  4362  0010C6  EF65  F008         	
  4363                           i2l215:
  4364  0010CA                     	line	547
  4365                           	
  4366                           i2l1571:
  4367  0010CA                     ;main.c: 547:     digital = (ADRESH*256) | (ADRESL);
  4368                           	movf	((c:4035)),c,w	;volatile
  4369  0010CA  50C3               	movff	(c:4036),??_ADC_Read+0+0	;volatile
  4370  0010CC  CFC4 F033          	clrf	(??_ADC_Read+0+0+1)&0ffh,c
  4371  0010D0  6A34               	movff	??_ADC_Read+0+0,??_ADC_Read+0+1
  4372  0010D2  C033  F034         	clrf	(??_ADC_Read+0+0),c
  4373  0010D6  6A33               	iorwf	(??_ADC_Read+0+0),c,w
  4374  0010D8  1033               	movwf	((c:ADC_Read@digital)),c
  4375  0010DA  6E35               	movf	(??_ADC_Read+0+1),c,w
  4376  0010DC  5034               	movwf	1+((c:ADC_Read@digital)),c
  4377  0010DE  6E36               	line	548
  4378                           	
  4379                           i2l1573:
  4380  0010E0                     ;main.c: 548:     return(digital);
  4381                           	movff	(c:ADC_Read@digital),(c:?_ADC_Read)
  4382  0010E0  C035  F031         	movff	(c:ADC_Read@digital+1),(c:?_ADC_Read+1)
  4383  0010E4  C036  F032         	goto	i2l216
  4384  0010E8  EF76  F008         	
  4385                           i2l1575:
  4386  0010EC                     	line	549
  4387                           	
  4388                           i2l216:
  4389  0010EC                     	return	;funcret
  4390  0010EC  0012               	opt stack 0
  4391                           GLOBAL	__end_of_ADC_Read
  4392                           	__end_of_ADC_Read:
  4393  0010EE                     	signat	_ADC_Read,4218
  4394                           psect	smallconst
  4395                           	db 0	; dummy byte at the end
  4396  000611  00                 	global	__smallconst
  4397                           	global	__mediumconst
  4398                           	GLOBAL	__activetblptr
  4399                           __activetblptr	EQU	1
  4400  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  4401                           	PSECT	rparam,class=COMRAM,space=1,noexec
  4402                           	GLOBAL	__Lrparam
  4403                           	FNCONF	rparam,??,?
  4404                           	GLOBAL	___rparam_used
  4405                           	___rparam_used EQU 1
  4406  0000                     	GLOBAL	___param_bank
  4407                           	___param_bank EQU 0
  4408  0000                     GLOBAL	__Lparam, __Hparam
  4409                           GLOBAL	__Lrparam, __Hrparam
  4410                           __Lparam	EQU	__Lrparam
  4411  0000                     __Hparam	EQU	__Hrparam
  4412  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  4413                           	global	btemp
  4414                           btemp:
  4415  000054                     	ds	1
  4416  000054                     	global	int$flags
  4417                           	int$flags	set btemp
  4418  0000                     	global	wtemp8
  4419                           	wtemp8 set btemp+1
  4420  0000                     	global	ttemp5
  4421                           	ttemp5 set btemp+1
  4422  0000                     	global	ttemp6
  4423                           	ttemp6 set btemp+4
  4424  0000                     	global	ttemp7
  4425                           	ttemp7 set btemp+8
  4426  0000                     	end


Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     35      83
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sp__strchr	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 10
		 -> NULL(NULL[0]), mystring(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_ClearBuffer
    _Mode2->_ClearBuffer

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->___awmod

Critical Paths under _Hi_ISR in COMRAM

    _Hi_ISR->_PrintDigital
    _PrintDigital->___wmul
    ___wmul->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                        _ClearBuffer
               _INTERRUPT_Initialize
                            _LEDInit
                              _Mode2
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode2                                                0     0      0      45
                        _ClearBuffer
                           _adc_init
                          _ccp2_init
                           _tmr_init
 ---------------------------------------------------------------------------------
 (2) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ccp2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      45
                                             33 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LEDInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Lo_ISR                                               5     5      0    1163
                                             28 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (4) _MyusartRead                                          0     0      0    1163
                         _UART_Write
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1148
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _UART_Write                                           1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Hi_ISR                                               4     4      0    9397
                                             18 COMRAM     4     4      0
                           _ADC_Read
                       _PrintDigital
                       i2_UART_Write
 ---------------------------------------------------------------------------------
 (7) _PrintDigital                                         4     2      2    7886
                                             14 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
                       i2_UART_Write
                          i2___awmod
 ---------------------------------------------------------------------------------
 (8) i2___awmod                                            6     2      4     660
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2_UART_Write                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4    1527
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4    3796
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _ADC_Read                                             6     4      2    1489
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _INTERRUPT_Initialize
   _LEDInit
   _Mode2
     _ClearBuffer
     _adc_init
     _ccp2_init
     _tmr_init
   _UART_Initialize

 _Lo_ISR (ROOT)
   _MyusartRead
     _UART_Write
     ___awmod

 _Hi_ISR (ROOT)
   _ADC_Read
   _PrintDigital
     ___awdiv
     ___wmul
       ___awdiv (ARG)
     i2_UART_Write
     i2___awmod
   i2_UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     23      53       1       65.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53      15        0.0%
DATA                 0      0      53       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Dec 30 11:31:24 2018

                           u10 1058                             u11 1054                             u20 1090  
                           u21 108C                   ___awdiv@sign 0036                             bsr 000FE0  
          ___wmul@multiplicand 003B                    __CFG_BORV$3 000000                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                          l120 1256                            l205 1060                            l206 1094  
                          l207 109C                            l136 121E                            l137 121E  
                          l226 1240                            l138 1222                            l139 1222  
                          l181 126C                            l190 11AE                            l175 1162  
                          l184 1276                            l187 127E                            l941 103C  
                          l943 105C                            l951 1094                            l945 1060  
                          l961 115E                            l953 1136                            l947 1070  
                          l939 1034                            l963 1160                            l955 1142  
                          l949 1074                            l957 114A                            l965 1258  
                          l959 114C                            l967 1264                            l969 126E  
                 __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000                            _str 001B  
                 ___awmod@sign 004C                            wreg 000FE8                   __CFG_IESO$ON 000000  
                 __CFG_LVP$OFF 000000                __end_of_LEDInit 1242                   __CFG_WDT$OFF 000000  
                         l1101 1242                           l1103 1246                           l1105 124A  
                         l1201 1198                           l1107 124E                           l1211 11A4  
                         l1203 119C                           l1221 1226                           l1109 1252  
                         l1213 11A6                           l1205 119E                           l1215 11A8  
                         l1207 11A0                           l1217 11AA                           l1209 11A2  
                         l1219 11AC                           l1351 120E                           l1353 1212  
                         l1355 1216                           l1197 1278                           l1357 121A  
                         l1349 120A                           l1199 118E                           _ADFM 007E07  
                         STR_1 0601                           STR_2 060F                           _CREN 007D5C  
                         _RCIF 007CF5                           _TMR3 000FB2                   __CFG_WDTPS$1 000000  
                         _data 0001                           _main 120A                           fsr2h 000FDA  
                         indf2 000FDF                           fsr2l 000FD9                           btemp 0054  
             __end_of_ADC_Read 10EE                           prodh 000FF4                           prodl 000FF3  
                         start 0078                  __CFG_MCLRE$ON 000000                   ___param_bank 000000  
             ?_UART_Initialize 0031                          ?_main 0031                __end_of___awdiv 0E84  
                        _CCPR2 000FBB                __end_of___awmod 0F5C                ___awdiv@divisor 0033  
                        i1l210 1134                          i1l221 005C                          i1l222 0054  
                        i1l223 0060                          i1l193 11D4                          i1l194 11D4  
                        i1l195 11E6                          i1l196 11EA                          i2l213 10B8  
                        i2l214 10B8                          i2l142 0808                          i1l470 0F1E  
                        i2l215 10CA                          i2l143 0A30                          i1l471 0F2E  
                        i1l463 0EA6                          i2l216 10EC                          i2l144 0962  
                        i2l160 0D80                          i1l472 0F4E                          i1l464 0EC0  
                        i2l145 0A2C                          i2l161 0D7C                          i1l473 0F5A  
                        i1l465 0F32                          i2l146 0A28                          i2l170 0C78  
                        i2l162 0BD8                          i1l466 0EE6                          i2l147 0A78  
                        i2l171 0C7E                          i2l163 0BDE                          i1l467 0EDA  
                        i2l164 0C00                          i2l172 0D84                          i1l468 0EF8  
                        i2l229 118C                          i2l165 0C06                          i1l469 0EFC  
                        i2l166 0C28                          i2l167 0C2E                          i2l159 0AA2  
                        i2l168 0C50                          i2l193 11F2                          i2l169 0C56  
                        i2l450 0DBA                          i2l194 11F2                          i2l451 0DD8  
                        i2l195 1204                          i2l460 0E82                          i2l452 0E5A  
                        i2l196 1208                          i2l453 0E06                          i2l454 0DFA  
                        i2l470 0FF6                          i2l455 0E18                          i2l471 1006  
                        i2l463 0F7E                          i2l456 0E1C                          i2l472 1026  
                        i2l464 0F98                          i2l457 0E46                          i2l473 1032  
                        i2l465 100A                          i2l458 0E56                          i2l466 0FBE  
                        i2l459 0E76                          i2l467 0FB2                          i1l971 11D0  
                        i2l468 0FD0                          i2l469 0FD4                          i1l973 11E6  
              ___awdiv@counter 0035                          _RCREG 000FAE                          _SPBRG 000FAF  
                        _TRISA 000F92                          _TRISD 000F95                          _TXREG 000FAD  
                __CFG_PWRT$OFF 000000                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                          _Mode2 1242  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
               __CFG_EBTR2$OFF 000000                 __CFG_EBTR3$OFF 000000                    ?_UART_Write 0031  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000                    _ClearBuffer 1034                          ttemp5 0055  
                        ttemp6 0058                          ttemp7 005C                          status 000FD8  
                        wtemp8 0055             __size_ofi2___awmod 00D8                 __CFG_PBADEN$ON 000000  
              __initialization 11B0                   __end_of_main 1226                         ??_main 0054  
                __activetblptr 000001                      ??_LEDInit 0052                         ?_Mode2 0031  
                       _CCP2M0 007DD0                         _CCP2M1 007DD1                         _CCP2M2 007DD2  
                       _CCP2M3 007DD3                         _CCP2IE 007D00                         _CCP2IP 007D10  
                       _ADRESH 000FC4                         _ADRESL 000FC3               ___awdiv@dividend 0031  
                       _T3CCP1 007D8B                         _T3CCP2 007D8E               __end_of_adc_init 1164  
                       i1l1501 0EC0                         i1l1511 0F12                         i1l1503 0ED2  
                       i1l1521 0F4E                         i1l1513 0F1E                         i1l1505 0EDA  
                       i1l1523 0F5A                         i1l1515 0F24                         i1l1507 0EE6  
                       i1l1509 0EFC                         i1l1517 0F32                         i1l1519 0F42  
                       i1l1491 0E88                         i1l1651 10EE                         i1l1493 0E96  
                       i1l1653 10FE                         i1l1495 0E9E                         i1l1655 1110  
                       i1l1831 0060                         i1l1823 002E                         i1l1497 0EA6  
                       i1l1489 0E84                         i1l1657 1114                         i1l1825 003C  
                       i1l1499 0EB4                         i1l1659 1134                         i1l1827 004A  
                       i1l1829 0054                         i2l1441 1180                         i2l1601 0796  
                       i2l1451 0DB2                         i2l1443 118C                         i2l1531 0F60  
                       i2l1611 0836                         i2l1603 07D2                         i2l1461 0DE0  
                       i2l1453 0DBA                         i2l1445 0D98                         i2l1525 11EE  
                       i2l1541 0F98                         i2l1533 0F6E                         i2l1621 08CA  
                       i2l1613 085C                         i2l1605 07E4                         i2l1471 0E22  
                       i2l1463 0DF2                         i2l1455 0DC8                         i2l1447 0D9C  
                       i2l1439 1164                         i2l1527 1204                         i2l1551 0FEA  
                       i2l1543 0FAA                         i2l1535 0F76                         i2l1631 0990  
                       i2l1623 08F0                         i2l1615 0898                         i2l1607 07E8  
                       i2l1473 0E38                         i2l1465 0DFA                         i2l1481 0E5A  
                       i2l1457 0DD0                         i2l1449 0DAA                         i2l1561 1026  
                       i2l1553 0FF6                         i2l1545 0FB2                         i2l1537 0F7E  
                       i2l1529 0F5C                         i2l1633 09B6                         i2l1625 092C  
                       i2l1617 08AA                         i2l1641 0A30                         i2l1609 0808  
                       i2l1801 0CFC                         i2l1571 10CA                         i2l1483 0E6A  
                       i2l1475 0E40                         i2l1467 0E06                         i2l1459 0DD8  
                       i2l1563 1032                         i2l1555 0FFC                         i2l1547 0FBE  
                       i2l1539 0F8C                         i2l1643 0A42                         i2l1635 09F2  
                       i2l1627 093E                         i2l1619 08AE                         i2l1811 0D44  
                       i2l1803 0D0E                         i2l1573 10E0                         i2l1565 109E  
                       i2l1485 0E76                         i2l1477 0E46                         i2l1469 0E1C  
                       i2l1549 0FD4                         i2l1557 100A                         i2l1645 0A54  
                       i2l1637 0A04                         i2l1629 0962                         i2l1581 0648  
                       i2l1821 0D84                         i2l1813 0D50                         i2l1805 0D1A  
                       i2l1575 10EC                         i2l1567 10B0                         i2l1487 0E82  
                       i2l1479 0E4C                         i2l1559 101A                         i2l1647 0A58  
                       i2l1639 0A08                         i2l1591 06DC                         i2l1583 066E  
                       i2l1815 0D62                         i2l1807 0D2C                         i2l1569 10B2  
                       i2l1649 0A78                         i2l1593 0702                         i2l1585 06AA  
                       i2l1577 0612                         i2l1817 0D68                         i2l1809 0D32  
                       i2l1761 0BB6                         i2l1753 0A8C                         i2l1595 073E  
                       i2l1587 06BC                         i2l1579 061A                         i2l1819 0D70  
                       i2l1771 0C22                         i2l1763 0BD2                         i2l1755 0A9A  
                       i2l1597 0750                         i2l1589 06C0                         i2l1781 0C7E  
                       i2l1773 0C2E                         i2l1765 0BDE                         i2l1757 0AB0  
                       i2l1599 0770                         i2l1791 0CC0                         i2l1783 0C8A  
                       i2l1775 0C4A                         i2l1767 0BFA                         i2l1759 0AB2  
                       i2l1793 0CC6                         i2l1785 0C90                         i2l1777 0C56  
                       i2l1769 0C06                         i2l1795 0CD8                         i2l1787 0CA2  
                       i2l1779 0C72                         i2l1797 0CE4                         i2l1789 0CAE  
                       i2l1799 0CF6                         i1u3_20 11E2                         _TMR3ON 007D88  
                       i1u3_21 11DE                         _Hi_ISR 0008                         _Lo_ISR 0018  
               __CFG_XINST$OFF 000000            __size_of_UART_Write 001E                         ___wmul 1164  
                    ??___awdiv 0035                 __CFG_STVREN$ON 000000                      ??___awmod 004B  
              ADC_Read@channel 0031                         _lenStr 0025                ADC_Read@digital 0035  
                       clear_0 11B6               ___awdiv@quotient 0037                ___awmod@divisor 0049  
              ___awmod@counter 004B              __end_ofi2___awmod 1034                      ?_ADC_Read 0031  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptru 000FF8  
             __end_of_tmr_init 1278                 i2___awmod@sign 0036  __size_of_INTERRUPT_Initialize 0008  
           __size_of_ccp2_init 0016                     __accesstop 0080        __end_of__initialization 11BC  
                ___rparam_used 000001                  __end_of_Mode2 1258                 __pcstackCOMRAM 0031  
                   ??_ADC_Read 0033                  ??_MyusartRead 004D                        ??_Mode2 0054  
                ?i2_UART_Write 0031                        ?_Hi_ISR 0031               i2UART_Write@data 0031  
                      ?_Lo_ISR 0031                        ?___wmul 0039              __end_of_ccp2_init 126E  
                    ?_adc_init 0031                        _LEDInit 1226                 ??i2_UART_Write 0031  
                 ??_UART_Write 0047                        i1u50_20 0ED2                        i1u50_21 0ECE  
                      i1u51_20 0EF4                        i1u51_21 0EF0                        i1u52_20 0F12  
                      i1u52_21 0F0E                        i1u53_20 0F42                        i1u53_21 0F3E  
                      i1u48_20 0E96                        i1u48_21 0E92                        i1u49_20 0EB4  
                      i1u49_21 0EB0                        i2u42_40 0DAA                        i2u42_41 0DA6  
                      i2u43_40 0DC8                        i2u43_41 0DC4                        i2u44_40 0DF2  
                      i2u60_40 101A                        i2u44_41 0DEE                        i2u60_41 1016  
                      i1u77_20 003C                        i1u77_21 0038                        i2u61_40 10C6  
                      i2u45_40 0E14                        i2u61_41 10C2                        i2u45_41 0E10  
                      i1u78_20 004A                        i1u78_21 0046                        i2u46_40 0E38  
                      i2u54_40 1200                        i2u62_40 0648                        i2u70_40 0A9A  
                      i2u46_41 0E34                        i2u54_41 11FC                        i2u62_41 0644  
                      i2u70_41 0A96                        i2u47_40 0E6A                        i2u55_40 0F6E  
                      i2u63_40 0836                        i2u71_40 0AB0                        i2u47_41 0E66  
                      i2u55_41 0F6A                        i2u63_41 0832                        i2u71_41 0AAC  
                      i2u56_40 0F8C                        i2u64_40 0990                        i2u72_40 0BD2  
                      i2u56_41 0F88                        i2u64_41 098C                        i2u72_41 0BCE  
                      i2u57_40 0FAA                        i2u73_40 0BFA                        i2u57_41 0FA6  
                      i2u73_41 0BF6                        i2u58_40 0FCC                        i2u74_40 0C22  
                      i2u58_41 0FC8                        i2u74_41 0C1E                        i2u59_40 0FEA  
                      i2u75_40 0C4A                        i2u59_41 0FE6                        i2u75_41 0C46  
                      i2u76_40 0C72                        i2u76_41 0C6E                   ?_ClearBuffer 0031  
          __end_of_MyusartRead 1136                  ?_PrintDigital 003F                __size_of_Hi_ISR 0D90  
              __size_of_Lo_ISR 0060                        __Hparam 0000                        __Lparam 0000  
                      ___awdiv 0D98                        ___awmod 0E84                __size_of___wmul 002A  
           __end_of_UART_Write 11EC                      ?_tmr_init 0031                   __psmallconst 0600  
                      __pcinit 11B0                        __ramtop 0600                     ??_adc_init 0052  
                      __ptext0 120A                        __ptext1 118E                        __ptext2 1242  
                      __ptext3 126E                        __ptext4 1258                        __ptext5 1136  
                      __ptext6 1034                        __ptext7 1226                        __ptext8 1278  
                    _T3CONbits 000FB1               ___awmod@dividend 0047       __size_of_UART_Initialize 0022  
               __pintcode_body 0A7A           end_of_initialization 11BC                 ??_PrintDigital 0041  
                      int_func 0A7A               PrintDigital@temp 0041                      _RCSTAbits 000FAB  
                      postinc0 000FEE                     ??_tmr_init 0052                 UART_Write@data 0047  
                    _TRISCbits 000F94                      _TRISDbits 000F95                      _TRISEbits 000F96  
                  _MyusartRead 10EE              __size_of_ADC_Read 0050                      i2___awmod 0F5C  
                    _TXSTAbits 000FAC                 __end_of_Hi_ISR 0D98                 __end_of_Lo_ISR 0078  
         __end_ofi2_UART_Write 120A   __end_of_INTERRUPT_Initialize 1280                 __end_of___wmul 118E  
                  _BAUDCONbits 000FB8            start_initialization 11B0                     ?i2___awmod 0031  
                 ClearBuffer@i 0052              ??_UART_Initialize 0052           __size_of_ClearBuffer 006A  
             __CFG_OSC$INTIO67 000000                       ??_Hi_ISR 0043                       ??_Lo_ISR 004D  
                     ??___wmul 003D               __CFG_LPT1OSC$OFF 000000           __end_of_PrintDigital 0A7A  
                     ?_LEDInit 0031              __size_of_adc_init 002E                    __pbssCOMRAM 0001  
                    _ccp2_init 1258            PrintDigital@digital 003F              __CFG_CCP2MX$PORTC 000000  
                    __pintcode 0008                       ?___awdiv 0031                       ?___awmod 0047  
                  __pintcodelo 0018              __size_of_tmr_init 000A                    __smallconst 0600  
                     _ADC_Read 109E                     ?_ccp2_init 0031                 __size_of_Mode2 0016  
                  ??i2___awmod 0035           _INTERRUPT_Initialize 1278                 ___wmul@product 003D  
        __size_ofi2_UART_Write 001E                       _LATDbits 000F8C                       _IPR1bits 000F9F  
                     _PIE1bits 000F9D                       _PIR1bits 000F9E                       _PIR2bits 000FA1  
                     _RCONbits 000FD0                     _ADCON0bits 000FC2                     _ADCON1bits 000FC1  
                   _ADCON2bits 000FC0              ___wmul@multiplier 0039               __size_of_LEDInit 001C  
                 ?_MyusartRead 0031                   i2_UART_Write 11EC          ?_INTERRUPT_Initialize 0031  
           i2___awmod@dividend 0031                       __Hrparam 0000                       __Lrparam 0000  
                 __Lsmallconst 0600             __CFG_BOREN$SBORDIS 000000          __size_of_PrintDigital 0468  
             __size_of___awdiv 00EC               __size_of___awmod 00D8                       _adc_init 1136  
              _UART_Initialize 118E                    ??_ccp2_init 0052                       __ptext10 10EE  
                     __ptext11 0E84                       __ptext12 11CE                       __ptext14 0612  
                     __ptext15 0F5C                       __ptext16 11EC                       __ptext17 1164  
                     __ptext18 0D98                       __ptext19 109E                   _PrintDigital 0612  
                __size_of_main 001C                       int$flags 0054                       _tmr_init 126E  
                     _mystring 0027              i2___awmod@divisor 0033              i2___awmod@counter 0035  
                   _INTCONbits 000FF2         ??_INTERRUPT_Initialize 0052                  ??_ClearBuffer 0052  
                     intlevel1 0000                       intlevel2 0000        __end_of_UART_Initialize 11B0  
                   _UART_Write 11CE           __size_of_MyusartRead 0048            __end_of_ClearBuffer 109E  
